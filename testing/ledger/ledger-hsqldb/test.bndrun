-tester: biz.aQute.tester.junit-platform
-runfw: org.apache.felix.framework
-resolve.effective: resolve,active
-runee: JavaSE-17
-runtrace: true

# Enable debugging.
# -runjdb: 5055

-runproperties: \
    org.slf4j.simpleLogger.defaultLogLevel=info,\
    org.slf4j.simpleLogger.showShortLogName=true,\
    org.slf4j.simpleLogger.showThreadName=false,\
    org.slf4j.simpleLogger.showDateTime=true,\
    org.slf4j.simpleLogger.dateTimeFormat='yyyy-MM-dd HH:mm:ss:SSS Z'

# Pretend that they exist, for the sake of Bnd's resolver task.
-runsystemcapabilities: \
    osgi.service;objectClass:List<String>='net.corda.configuration.read.ConfigurationReadService';effective=active,\
    osgi.service;objectClass:List<String>='net.corda.lifecycle.LifecycleCoordinatorFactory';effective:=active,\
    osgi.service;objectClass:List<String>='net.corda.membership.lib.GroupParametersFactory';effective:=active,\
    osgi.service;objectClass:List<String>='net.corda.flow.external.events.responses.factory.ExternalEventResponseFactory';effective=active,\
    osgi.service;objectClass:List<String>='net.corda.messaging.api.subscription.factory.SubscriptionFactory';effective:=active

-runblacklist: \
    bnd.identity;id='net.corda.configuration-read-service-impl',\
    bnd.identity;id='net.corda.lifecycle-impl'

# Include the the tests since they're the bundle to be run inside an osgi framework.
# This should make bnd resolve everything else we need.
-runrequires: \
    bnd.identity;id='ledger-hsqldb-tests',\
    bnd.identity;id='net.corda.ledger-hsqldb',\
    bnd.identity;id='org.ops4j.pax.jdbc.hsqldb',\
    bnd.identity;id='junit-jupiter-engine',\
    bnd.identity;id='junit-platform-launcher',\
    bnd.identity;id='slf4j.simple'

-runstartlevel: \
    order=sortbynameversion,\
    begin=-1
