plugins {
    id 'corda.common-publishing'
    id 'corda.common-app'
    id 'corda.docker-app'
}

description "P2P Testing tools - Application-level simulator"

ext.cordaEnableFormatting = true

dependencies {
    compileOnly "org.osgi:osgi.annotation"
    compileOnly "org.osgi:osgi.core"
    compileOnly "org.osgi:org.osgi.service.component.annotations"

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation 'org.jetbrains.kotlin:kotlin-osgi-bundle'
    implementation "net.corda:corda-avro-schema:$cordaApiVersion"
    implementation "net.corda:corda-config-schema:$cordaApiVersion"
    implementation "net.corda:corda-topic-schema:$cordaApiVersion"
    implementation libs.typesafe.config
    implementation "info.picocli:picocli:$picocliVersion"
    implementation libs.slf4j.api
    implementation "net.corda:corda-base"
    implementation project(":components:kafka-topic-admin")
    implementation project(":libs:configuration:configuration-core")
    implementation project(":libs:configuration:configuration-merger")
    implementation project(":libs:messaging:messaging")
    implementation project(":libs:lifecycle:lifecycle")
    implementation project(':libs:rest:rest')
    implementation project(":libs:utilities")
    implementation libs.jackson.datatype.jsr310
    implementation libs.jackson.dataformat.yaml
    implementation libs.jackson.module.kotlin
    implementation libs.postgresql.jdbc

    implementation project(":osgi-framework-api")

    runtimeOnly libs.log4j.slf4j
    runtimeOnly "org.apache.felix:org.apache.felix.scr:$felixScrVersion"
    runtimeOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"
    runtimeOnly "org.osgi:org.osgi.util.function:$osgiUtilFunctionVersion"
    runtimeOnly "org.osgi:org.osgi.util.promise:$osgiUtilPromiseVersion"

    runtimeOnly project(':libs:crypto:cipher-suite-impl')
    runtimeOnly project(":libs:messaging:kafka-message-bus-impl")
    runtimeOnly project(":libs:messaging:messaging-impl")
    runtimeOnly project(":libs:schema-registry:schema-registry-impl")
    runtimeOnly project(":libs:lifecycle:lifecycle-impl")
    runtimeOnly project(':libs:messaging:kafka-topic-admin-impl')
    runtimeOnly project(":libs:web:web-impl")

    testImplementation project(':testing:e2e-test-utilities')
    testImplementation project(':libs:membership:membership-common')
    testImplementation project(':testing:test-utilities')
}
test {
    testLogging.showStandardStreams = true
    environment["SCRIPT_DIR"]="$projectDir/scripts"
}
