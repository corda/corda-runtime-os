import aQute.bnd.gradle.Bundle

plugins {
    id 'corda.common-publishing'
    id 'corda.osgi-test-conventions'
    id 'corda.common-library'
}

description 'Corda ledger common - implementation'

configurations {
    cpbs {
        canBeConsumed = false
        transitive = false
    }
}

dependencies {
    compileOnly 'org.osgi:osgi.annotation'

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "com.esotericsoftware:kryo:$kryoVersion"
    implementation project(":libs:serialization:serialization-kryo")

    implementation "net.corda.kotlin:kotlin-stdlib-jdk8-osgi"
    implementation "net.corda:corda-ledger-common"
    implementation platform("net.corda:corda-api:$cordaApiVersion")

    implementation project(path: ':libs:serialization:kryo-serializers', configuration: 'bundle')
    implementation project(":libs:crypto:crypto-core")

    testImplementation project(":libs:crypto:merkle-impl")
    testImplementation project(":libs:crypto:cipher-suite-impl")

    cpbs project(path: 'cpks:empty', configuration: 'cordaCPB')

    integrationTestImplementation project(':testing:sandboxes')
    integrationTestImplementation project(":libs:serialization:serialization-checkpoint-api")
    integrationTestImplementation project('cpks:empty')

    integrationTestRuntimeOnly project(':libs:lifecycle:lifecycle-impl')
    integrationTestRuntimeOnly project(':libs:messaging:db-message-bus-impl')
    integrationTestRuntimeOnly project(':libs:messaging:messaging-impl')
}

def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from configurations.cpbs
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
