import aQute.bnd.gradle.Bundle

plugins {
    id 'corda.common-publishing'
    id 'corda.osgi-test-conventions'
    id 'corda.common-library'
}

description 'Corda ledger common - flow implementation'

configurations {
    cpis {
        canBeConsumed = false
        transitive = false
    }
}

ext.cordaEnableFormatting = true

dependencies {
    compileOnly 'org.osgi:osgi.annotation'

    implementation 'net.corda:corda-ledger-common'

    implementation project(':components:ledger:ledger-common-flow-api')

    implementation project(':libs:layered-property-map')
    implementation project(':libs:ledger:ledger-common-data')
    implementation project(':libs:serialization:serialization-checkpoint-api')
    implementation project(':libs:serialization:serialization-internal')
    implementation project(':libs:crypto:crypto-core')
    implementation project(':libs:serialization:json-validator')
    implementation project(':libs:sandbox-types')
    implementation project(':libs:platform-info')
    implementation project(':libs:virtual-node:sandbox-group-context')

    runtimeOnly project(":libs:web:web-impl")

    testImplementation project(':libs:membership:membership-common')
    testImplementation project(':libs:serialization:serialization-kryo')
    testImplementation project(':testing:kryo-serialization-testkit')
    testImplementation project(':testing:layered-property-map-testkit')
    testImplementation project(':testing:ledger:ledger-common-base-test')
    testImplementation project(':testing:test-serialization')

    integrationTestImplementation project(':testing:ledger:ledger-common-base-integration-test')
    integrationTestImplementation project(':testing:group-policy-test-common')

    integrationTestRuntimeOnly project(':libs:lifecycle:lifecycle-impl')
    integrationTestRuntimeOnly project(':libs:messaging:db-message-bus-impl')
    integrationTestRuntimeOnly project(':libs:messaging:messaging-impl')
    integrationTestRuntimeOnly project(':libs:flows:session-manager-impl')
    integrationTestRuntimeOnly project(':libs:state-manager:state-manager-db-impl')
    integrationTestRuntimeOnly "org.apache.aries.spifly:org.apache.aries.spifly.dynamic.framework.extension:$ariesDynamicFrameworkExtensionVersion"

    cpis project(path: ':testing:ledger:ledger-common-empty-app', configuration: 'cordaCPB')
}

tasks.withType(Test).configureEach {
    jvmArgs '--add-opens', 'java.base/java.lang.invoke=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED'
}

//  Copy the cpi builds declared in the cpis configuration into our resources so we find and load them
def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from(configurations.cpis) {
        into 'META-INF'
        rename "(.*)-\\Q${version}\\E-package.cpb", "\$1.cpb"
    }
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
