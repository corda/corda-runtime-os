# apiVersion: v1
# kind: Namespace
# metadata:
#   name: {{ include "corda.fullname" . }}
#   labels:
#     namespace-type: corda-e2e
# ---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-crypto
  namespace: {{ include "corda.fullname" . }}
  labels: &id001
    app: {{ include "corda.fullname" . }}-crypto-node
    type: crypto-worker
spec:
  type: NodePort
  selector: *id001
  ports:
  - name: worker-debug
    port: 5005
    targetPort: 5005
  - name: worker-health
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-crypto
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-crypto-node
    family: e2e
    type: crypto-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-crypto-node
      family: e2e
      type: crypto-worker
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-crypto-node
        family: e2e
        type: crypto-worker
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: {{ include "corda.fullname" . }}-crypto-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-crypto-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-crypto
        image: corda-os-docker.software.r3.com/corda-os-crypto-worker:{{ include "corda.imageTag" . }}
        imagePullPolicy: Always
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-crypto-volume
          mountPath: /logs
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: JAVA_TOOL_OPTIONS
          value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        args:
        - -mkafka.common.bootstrap.servers={{ include "corda.fullname" . }}-bk-1:9092
        ports:
        - name: worker-debug
          containerPort: 5005
        - name: worker-health
          containerPort: 7000
        livenessProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 1
        startupProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 5
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-dbw
  namespace: {{ include "corda.fullname" . }}
  labels: &id002
    app: {{ include "corda.fullname" . }}-dbw-node
    type: database-worker
spec:
  type: NodePort
  selector: *id002
  ports:
  - name: worker-debug
    port: 5005
    targetPort: 5005
  - name: worker-health
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-dbw
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-dbw-node
    family: e2e
    type: database-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-dbw-node
      family: e2e
      type: database-worker
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-dbw-node
        family: e2e
        type: database-worker
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: {{ include "corda.fullname" . }}-dbw-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-dbw-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-dbw
        image: corda-os-docker.software.r3.com/corda-os-db-worker:{{ include "corda.imageTag" . }}
        imagePullPolicy: Always
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-dbw-volume
          mountPath: /logs
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: JAVA_TOOL_OPTIONS
          value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        args:
        - -mkafka.common.bootstrap.servers={{ include "corda.fullname" . }}-bk-1:9092
        - -spassphrase=bad passphrase
        - -ssalt=not so random
        - -ddatabase.user=user
        - -ddatabase.pass.configSecret.encryptedSecret=4LNuCvt+NhGIBwL7gRRhvAZh3k6JRN9NHv0aG3pi1xM=
        - -ddatabase.jdbc.url=jdbc:postgresql://{{ include "corda.fullname" . }}-cluster-db:5432/cordacluster
        ports:
        - name: worker-debug
          containerPort: 5005
        - name: worker-health
          containerPort: 7000
        livenessProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 1
        startupProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 5
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-flow
  namespace: {{ include "corda.fullname" . }}
  labels: &id003
    app: {{ include "corda.fullname" . }}-flow-node
    type: flow-worker
spec:
  type: NodePort
  selector: *id003
  ports:
  - name: worker-debug
    port: 5005
    targetPort: 5005
  - name: worker-health
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-flow
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-flow-node
    family: e2e
    type: flow-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-flow-node
      family: e2e
      type: flow-worker
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-flow-node
        family: e2e
        type: flow-worker
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: {{ include "corda.fullname" . }}-flow-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-flow-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-flow
        image: corda-os-docker.software.r3.com/corda-os-flow-worker:{{ include "corda.imageTag" . }}
        imagePullPolicy: Always
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-flow-volume
          mountPath: /logs
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: JAVA_TOOL_OPTIONS
          value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        args:
        - -mkafka.common.bootstrap.servers={{ include "corda.fullname" . }}-bk-1:9092
        ports:
        - name: worker-debug
          containerPort: 5005
        - name: worker-health
          containerPort: 7000
        livenessProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 1
        startupProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 5
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-rpc
  namespace: {{ include "corda.fullname" . }}
  labels: &id004
    app: {{ include "corda.fullname" . }}-rpc-node
    type: rpc-worker
spec:
  type: NodePort
  selector: *id004
  ports:
  - name: node-rpc
    port: 443
    targetPort: 8888
  - name: worker-debug
    port: 5005
    targetPort: 5005
  - name: worker-health
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-rpc
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-rpc-node
    family: e2e
    type: rpc-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-rpc-node
      family: e2e
      type: rpc-worker
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-rpc-node
        family: e2e
        type: rpc-worker
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: {{ include "corda.fullname" . }}-rpc-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-rpc-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-rpc
        image: corda-os-docker.software.r3.com/corda-os-rpc-worker:{{ include "corda.imageTag" . }}
        imagePullPolicy: Always
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-rpc-volume
          mountPath: /logs
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: JAVA_TOOL_OPTIONS
          value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        args:
        - -mkafka.common.bootstrap.servers={{ include "corda.fullname" . }}-bk-1:9092
        ports:
        - name: node-rpc
          containerPort: 8888
        - name: worker-debug
          containerPort: 5005
        - name: worker-health
          containerPort: 7000
        livenessProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 1
        startupProbe:
          httpGet:
            path: /isHealthy
            port: 7000
            scheme: HTTP
          periodSeconds: 5
          failureThreshold: 5
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-zk-1
  namespace: {{ include "corda.fullname" . }}
  labels: &id005
    app: {{ include "corda.fullname" . }}-zk-1-node
    family: e2e
    type: zookeeper
    typeID: '1'
spec:
  type: NodePort
  selector: *id005
  ports:
  - name: zk-client
    port: 2181
    targetPort: 2181
  - name: zk-election-1
    port: 2888
    targetPort: 2888
  - name: zk-election-2
    port: 3888
    targetPort: 3888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-zk-1
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-zk-1-node
    family: e2e
    type: zookeeper
    typeID: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-zk-1-node
      family: e2e
      type: zookeeper
      typeID: '1'
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-zk-1-node
        family: e2e
        type: zookeeper
        typeID: '1'
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      volumes:
      - name: {{ include "corda.fullname" . }}-zk-1-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-zk-1-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-zk-1
        image: bitnami/zookeeper:3.7.0-debian-10-r257
        imagePullPolicy: Always
        env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: 'yes'
        - name: ZOO_PORT_NUMBER
          value: '2181'
        - name: ZOO_SERVER_ID
          value: '1'
        - name: ZOO_SERVERS
          value: 0.0.0.0:2888:3888,{{ include "corda.fullname" . }}-zk-2.{{ include "corda.fullname" . }}.svc.cluster.local:2888:3888,{{ include "corda.fullname" . }}-zk-3.{{ include "corda.fullname" . }}.svc.cluster.local:2888:3888
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-zk-1-volume
          mountPath: /bitnami/zookeeper
        ports:
        - name: zk-client
          containerPort: 2181
        - name: zk-election-1
          containerPort: 2888
        - name: zk-election-2
          containerPort: 3888
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - echo
            - '"ruok"'
            - '|'
            - nc
            - -w
            - '2'
            - localhost
            - '2181'
          periodSeconds: 5
          failureThreshold: 1
          timeoutSeconds: 3
        startupProbe:
          exec:
            command:
            - echo
            - '"ruok"'
            - '|'
            - nc
            - -w
            - '2'
            - localhost
            - '2181'
          periodSeconds: 5
          failureThreshold: 24
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-zk-2
  namespace: {{ include "corda.fullname" . }}
  labels: &id006
    app: {{ include "corda.fullname" . }}-zk-2-node
    family: e2e
    type: zookeeper
    typeID: '2'
spec:
  type: NodePort
  selector: *id006
  ports:
  - name: zk-client
    port: 2181
    targetPort: 2181
  - name: zk-election-1
    port: 2888
    targetPort: 2888
  - name: zk-election-2
    port: 3888
    targetPort: 3888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-zk-2
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-zk-2-node
    family: e2e
    type: zookeeper
    typeID: '2'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-zk-2-node
      family: e2e
      type: zookeeper
      typeID: '2'
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-zk-2-node
        family: e2e
        type: zookeeper
        typeID: '2'
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      volumes:
      - name: {{ include "corda.fullname" . }}-zk-2-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-zk-2-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-zk-2
        image: bitnami/zookeeper:3.7.0-debian-10-r257
        imagePullPolicy: Always
        env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: 'yes'
        - name: ZOO_PORT_NUMBER
          value: '2181'
        - name: ZOO_SERVER_ID
          value: '2'
        - name: ZOO_SERVERS
          value: {{ include "corda.fullname" . }}-zk-1.{{ include "corda.fullname" . }}.svc.cluster.local:2888:3888,0.0.0.0:2888:3888,{{ include "corda.fullname" . }}-zk-3.{{ include "corda.fullname" . }}.svc.cluster.local:2888:3888
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-zk-2-volume
          mountPath: /bitnami/zookeeper
        ports:
        - name: zk-client
          containerPort: 2181
        - name: zk-election-1
          containerPort: 2888
        - name: zk-election-2
          containerPort: 3888
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - echo
            - '"ruok"'
            - '|'
            - nc
            - -w
            - '2'
            - localhost
            - '2181'
          periodSeconds: 5
          failureThreshold: 1
          timeoutSeconds: 3
        startupProbe:
          exec:
            command:
            - echo
            - '"ruok"'
            - '|'
            - nc
            - -w
            - '2'
            - localhost
            - '2181'
          periodSeconds: 5
          failureThreshold: 24
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-zk-3
  namespace: {{ include "corda.fullname" . }}
  labels: &id007
    app: {{ include "corda.fullname" . }}-zk-3-node
    family: e2e
    type: zookeeper
    typeID: '3'
spec:
  type: NodePort
  selector: *id007
  ports:
  - name: zk-client
    port: 2181
    targetPort: 2181
  - name: zk-election-1
    port: 2888
    targetPort: 2888
  - name: zk-election-2
    port: 3888
    targetPort: 3888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-zk-3
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-zk-3-node
    family: e2e
    type: zookeeper
    typeID: '3'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-zk-3-node
      family: e2e
      type: zookeeper
      typeID: '3'
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-zk-3-node
        family: e2e
        type: zookeeper
        typeID: '3'
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      volumes:
      - name: {{ include "corda.fullname" . }}-zk-3-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-zk-3-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-zk-3
        image: bitnami/zookeeper:3.7.0-debian-10-r257
        imagePullPolicy: Always
        env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: 'yes'
        - name: ZOO_PORT_NUMBER
          value: '2181'
        - name: ZOO_SERVER_ID
          value: '3'
        - name: ZOO_SERVERS
          value: {{ include "corda.fullname" . }}-zk-1.{{ include "corda.fullname" . }}.svc.cluster.local:2888:3888,{{ include "corda.fullname" . }}-zk-2.{{ include "corda.fullname" . }}.svc.cluster.local:2888:3888,0.0.0.0:2888:3888
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-zk-3-volume
          mountPath: /bitnami/zookeeper
        ports:
        - name: zk-client
          containerPort: 2181
        - name: zk-election-1
          containerPort: 2888
        - name: zk-election-2
          containerPort: 3888
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          exec:
            command:
            - echo
            - '"ruok"'
            - '|'
            - nc
            - -w
            - '2'
            - localhost
            - '2181'
          periodSeconds: 5
          failureThreshold: 1
          timeoutSeconds: 3
        startupProbe:
          exec:
            command:
            - echo
            - '"ruok"'
            - '|'
            - nc
            - -w
            - '2'
            - localhost
            - '2181'
          periodSeconds: 5
          failureThreshold: 24
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-bk-1
  namespace: {{ include "corda.fullname" . }}
  labels: &id008
    app: {{ include "corda.fullname" . }}-bk-1-node
    type: broker
    family: e2e
    typeID: '1'
spec:
  type: NodePort
  selector: *id008
  ports:
  - name: broker-internal
    port: 9091
    targetPort: 9091
  - name: broker-client
    port: 9092
    targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-bk-1
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-bk-1-node
    family: e2e
    type: broker
    typeID: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-bk-1-node
      family: e2e
      type: broker
      typeID: '1'
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-bk-1-node
        family: e2e
        type: broker
        typeID: '1'
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      volumes:
      - name: {{ include "corda.fullname" . }}-bk-1-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-bk-1-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-bk-1
        image: bitnami/kafka:2.8.1-debian-10-r99
        imagePullPolicy: Always
        env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: 'yes'
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: '3'
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: '5'
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_CFG_LISTENERS
          value: INTERNAL://:9091,CLIENT://:9092
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: INTERNAL://{{ include "corda.fullname" . }}-bk-1.{{ include "corda.fullname" . }}.svc.cluster.local:9091,CLIENT://{{ include "corda.fullname" . }}-bk-1.{{ include "corda.fullname" . }}.svc.cluster.local:9092
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: {{ include "corda.fullname" . }}-zk-1.{{ include "corda.fullname" . }}.svc.cluster.local:2181,{{ include "corda.fullname" . }}-zk-2.{{ include "corda.fullname" . }}.svc.cluster.local:2181,{{ include "corda.fullname" . }}-zk-3.{{ include "corda.fullname" . }}.svc.cluster.local:2181
        - name: KAFKA_CFG_BROKER_ID
          value: '1'
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-bk-1-volume
          mountPath: /bitnami/kafka
        ports:
        - name: broker-internal
          containerPort: 9091
        - name: broker-client
          containerPort: 9092
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          tcpSocket:
            port: 9092
          periodSeconds: 5
          failureThreshold: 1
          timeoutSeconds: 3
        startupProbe:
          tcpSocket:
            port: 9092
          periodSeconds: 5
          failureThreshold: 24
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-bk-2
  namespace: {{ include "corda.fullname" . }}
  labels: &id009
    app: {{ include "corda.fullname" . }}-bk-2-node
    type: broker
    family: e2e
    typeID: '2'
spec:
  type: NodePort
  selector: *id009
  ports:
  - name: broker-internal
    port: 9091
    targetPort: 9091
  - name: broker-client
    port: 9092
    targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-bk-2
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-bk-2-node
    family: e2e
    type: broker
    typeID: '2'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-bk-2-node
      family: e2e
      type: broker
      typeID: '2'
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-bk-2-node
        family: e2e
        type: broker
        typeID: '2'
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      volumes:
      - name: {{ include "corda.fullname" . }}-bk-2-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-bk-2-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-bk-2
        image: bitnami/kafka:2.8.1-debian-10-r99
        imagePullPolicy: Always
        env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: 'yes'
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: '3'
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: '5'
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_CFG_LISTENERS
          value: INTERNAL://:9091,CLIENT://:9092
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: INTERNAL://{{ include "corda.fullname" . }}-bk-2.{{ include "corda.fullname" . }}.svc.cluster.local:9091,CLIENT://{{ include "corda.fullname" . }}-bk-2.{{ include "corda.fullname" . }}.svc.cluster.local:9092
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: {{ include "corda.fullname" . }}-zk-1.{{ include "corda.fullname" . }}.svc.cluster.local:2181,{{ include "corda.fullname" . }}-zk-2.{{ include "corda.fullname" . }}.svc.cluster.local:2181,{{ include "corda.fullname" . }}-zk-3.{{ include "corda.fullname" . }}.svc.cluster.local:2181
        - name: KAFKA_CFG_BROKER_ID
          value: '2'
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-bk-2-volume
          mountPath: /bitnami/kafka
        ports:
        - name: broker-internal
          containerPort: 9091
        - name: broker-client
          containerPort: 9092
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          tcpSocket:
            port: 9092
          periodSeconds: 5
          failureThreshold: 1
          timeoutSeconds: 3
        startupProbe:
          tcpSocket:
            port: 9092
          periodSeconds: 5
          failureThreshold: 24
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-bk-3
  namespace: {{ include "corda.fullname" . }}
  labels: &id010
    app: {{ include "corda.fullname" . }}-bk-3-node
    type: broker
    family: e2e
    typeID: '3'
spec:
  type: NodePort
  selector: *id010
  ports:
  - name: broker-internal
    port: 9091
    targetPort: 9091
  - name: broker-client
    port: 9092
    targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-bk-3
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-bk-3-node
    family: e2e
    type: broker
    typeID: '3'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-bk-3-node
      family: e2e
      type: broker
      typeID: '3'
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-bk-3-node
        family: e2e
        type: broker
        typeID: '3'
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      volumes:
      - name: {{ include "corda.fullname" . }}-bk-3-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-bk-3-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-bk-3
        image: bitnami/kafka:2.8.1-debian-10-r99
        imagePullPolicy: Always
        env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: 'yes'
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: '3'
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: '5'
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_CFG_LISTENERS
          value: INTERNAL://:9091,CLIENT://:9092
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: INTERNAL://{{ include "corda.fullname" . }}-bk-3.{{ include "corda.fullname" . }}.svc.cluster.local:9091,CLIENT://{{ include "corda.fullname" . }}-bk-3.{{ include "corda.fullname" . }}.svc.cluster.local:9092
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: {{ include "corda.fullname" . }}-zk-1.{{ include "corda.fullname" . }}.svc.cluster.local:2181,{{ include "corda.fullname" . }}-zk-2.{{ include "corda.fullname" . }}.svc.cluster.local:2181,{{ include "corda.fullname" . }}-zk-3.{{ include "corda.fullname" . }}.svc.cluster.local:2181
        - name: KAFKA_CFG_BROKER_ID
          value: '3'
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-bk-3-volume
          mountPath: /bitnami/kafka
        ports:
        - name: broker-internal
          containerPort: 9091
        - name: broker-client
          containerPort: 9092
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          tcpSocket:
            port: 9092
          periodSeconds: 5
          failureThreshold: 1
          timeoutSeconds: 3
        startupProbe:
          tcpSocket:
            port: 9092
          periodSeconds: 5
          failureThreshold: 24
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.fullname" . }}-cluster-db
  namespace: {{ include "corda.fullname" . }}
  labels: &id011
    app: {{ include "corda.fullname" . }}-cluster-db-node
spec:
  type: NodePort
  selector: *id011
  ports:
  - name: database
    port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.fullname" . }}-cluster-db
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-cluster-db-node
    family: e2e
    type: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "corda.fullname" . }}-cluster-db-node
      family: e2e
      type: database
  template:
    metadata:
      labels:
        app: {{ include "corda.fullname" . }}-cluster-db-node
        family: e2e
        type: database
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      volumes:
      - name: {{ include "corda.fullname" . }}-cluster-db-volume
        persistentVolumeClaim:
          claimName: {{ include "corda.fullname" . }}-cluster-db-ebs-claim
      imagePullSecrets:
      - name: docker-registry-cred
      containers:
      - name: {{ include "corda.fullname" . }}-cluster-db
        image: postgres:13
        imagePullPolicy: Always
        volumeMounts:
        - name: {{ include "corda.fullname" . }}-cluster-db-volume
          mountPath: /var/lib/postgresql
        ports:
        - name: database
          containerPort: 5432
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: POSTGRES_DB
          value: cordacluster
        - name: POSTGRES_USER
          value: user
        - name: POSTGRES_PASSWORD
          value: pass
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-crypto-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-crypto-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-dbw-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-dbw-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-flow-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-flow-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-rpc-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-rpc-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-zk-1-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-zk-1-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-zk-2-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-zk-2-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-zk-3-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-zk-3-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-bk-1-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-bk-1-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-bk-2-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-bk-2-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-bk-3-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-bk-3-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "corda.fullname" . }}-cluster-db-ebs-claim
  namespace: {{ include "corda.fullname" . }}
  labels:
    app: {{ include "corda.fullname" . }}-cluster-db-node
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: corda-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-topics
  namespace: {{ include "corda.fullname" . }}
  labels: &id012
    app: create-topics
spec:
  template:
    metadata:
      labels: *id012
    spec:
      containers:
      - name: create-topics
        image: bitnami/kafka:2.8.1-debian-10-r99
        imagePullPolicy: Always
        command:
        - /bin/sh
        - -c
        args:
        - echo -e 'Creating kafka topics';kafka-topics.sh --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092
          --partitions 1 --replication-factor 1 --create --topic config.management.request;kafka-topics.sh
          --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092 --partitions 1 --replication-factor 1
          --create --topic config.management.request.resp;kafka-topics.sh --bootstrap-server
          {{ include "corda.fullname" . }}-bk-1:9092 --partitions 1 --replication-factor 1 --create --topic config.topic
          --config 'cleanup.policy=compact';kafka-topics.sh --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092
          --partitions 1 --replication-factor 1 --create --topic virtual.node.creation.request;kafka-topics.sh
          --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092 --partitions 1 --replication-factor 1
          --create --topic virtual.node.creation.request.resp;kafka-topics.sh --bootstrap-server
          {{ include "corda.fullname" . }}-bk-1:9092 --partitions 1 --replication-factor 1 --create --topic rpc.permissions.management;kafka-topics.sh
          --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092 --partitions 1 --replication-factor 1
          --create --topic rpc.permissions.management.resp;kafka-topics.sh --bootstrap-server
          {{ include "corda.fullname" . }}-bk-1:9092 --partitions 1 --replication-factor 1 --create --topic rpc.permissions.user
          --config 'cleanup.policy=compact';kafka-topics.sh --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092
          --partitions 1 --replication-factor 1 --create --topic rpc.permissions.group
          --config 'cleanup.policy=compact';kafka-topics.sh --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092
          --partitions 1 --replication-factor 1 --create --topic rpc.permissions.role
          --config 'cleanup.policy=compact';kafka-topics.sh --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092
          --partitions 1 --replication-factor 1 --create --topic rpc.permissions.permission
          --config 'cleanup.policy=compact';kafka-topics.sh --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092--partitions
          1 --replication-factor 1 --create --topic permissions.user.summary --config
          'cleanup.policy=compact';echo -e 'Successfully created the following topics:';kafka-topics.sh
          --bootstrap-server {{ include "corda.fullname" . }}-bk-1:9092 --list;
      restartPolicy: OnFailure
  backoffLimit: 10

