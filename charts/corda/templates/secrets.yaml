{{- include "corda.secret"
  ( list
    $
    .Values.config.encryption
    "config.encryption"
    ( printf "%s-config" ( include "corda.fullname" . ) )
    ( dict "salt" ( dict "generate" 32 ) "passphrase" ( dict "generate" 32 ) )
  )
}}
{{- if .Values.bootstrap.db.enabled }}
{{-   range $index, $bootConfig := .Values.bootstrap.db.databases -}}
{{-     include "corda.secret"
          ( list
              $
              $bootConfig
              ( printf "bootstrap.db.databases.[%d]" $index )
              ( include "corda.db.bootstrapCredentialsSecretName" ( list $ $bootConfig.id ) )
              ( dict "username" ( dict "required" true ) "password" ( dict "required" true ) )
              ( dict "cleanup" true )
          )
}}
{{-   end -}}
{{-   range $index, $db := tuple "crypto" "rbac" "virtualNodes" }}
{{-     include "corda.secret"
          ( list
              $
              ( index $.Values.bootstrap.db $db )
              ( printf "bootstrap.db.%s" $db )
              ( printf "%s-%s-db" ( include "corda.fullname" $ ) ( kebabcase $db ) )
              ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
              ( dict "cleanup" true )
          )
}}
{{-   end }}
{{- end }}
{{- if or (.Values.bootstrap.db.enabled) (and (.Values.bootstrap.rbac.enabled) (and (or (.Values.bootstrap.restApiAdmin.username.value) (.Values.bootstrap.restApiAdmin.username.valueFrom.secretKeyRef.name)) (or (.Values.bootstrap.restApiAdmin.password.value) (.Values.bootstrap.restApiAdmin.password.valueFrom.secretKeyRef.name)))) }}
{{- include "corda.secret"
  ( list
    $
    .Values.bootstrap.restApiAdmin
    "bootstrap.restApiAdmin"
    ( include "corda.restApiAdminSecretName" . )
    ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
  )
}}
{{ else if .Values.bootstrap.rbac.enabled }}
{{- fail "credentials for restApiAdmin must be provided to bootstrap RBAC if DB bootstrap is disabled" }}
{{- end }}
{{- if not .Values.workers.rest.tls.secretName }}
{{- $altNames := list }}
{{- if .Values.workers.rest.tls.generation }}
{{-   $altNames = .Values.workers.rest.tls.generation.altNames }}
{{- end}}
{{- include "corda.tlsSecret"
  ( list
    $
    "REST Worker"
    ( printf "%s-rest-worker" ( include "corda.fullname" $ ) )
    $altNames
    ( include "corda.restTlsSecretName" . )
    .Values.workers.rest.tls.crt.secretKey
    .Values.workers.rest.tls.key.secretKey
    .Values.workers.rest.tls.ca.secretKey
  )
}}
{{- end }}
{{/* State Manager Runtime Connection Secrets */}}
{{- range $stateType, $stateTypeConfig  := .Values.stateManager -}}
{{-   $connectionSettings := fromYaml ( include "corda.db.configuration" ( list $ $stateTypeConfig.storageId ( printf "stateManager.%s.storageId" $stateType ) ) ) }}
{{-   range $workerName, $workerConfig := $.Values.workers -}}
{{-     $runtimeCredentials := ( index $workerConfig "stateManager" ) -}}
{{-     if and $runtimeCredentials ( index $runtimeCredentials $stateType ) -}}
{{-       include "corda.secret"
            ( list
                $
                ( index $runtimeCredentials $stateType )
                ( printf "workers.%s.stateManager.[%s]" $workerName $stateType )
                ( include "corda.sm.runtimeCredentialsSecretName" ( list $ $stateType $workerName ) )
                ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
            )
}}
{{-     end -}}
{{-   end -}}
{{- end -}}
{{/* Worker Config Connection Secrets */}}
{{- range $workerName, $workerConfig := $.Values.workers -}}
{{-   $runtimeCredentials := ( index $workerConfig "config" ) -}}
{{-   if $runtimeCredentials -}}
{{-     include "corda.secret"
          ( list
              $
              $runtimeCredentials
              ( printf "workers.%s.config" $workerName )
              ( include "corda.db.workerCredentialsSecretName" ( list $ $workerName ) )
              ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
          )
}}
{{-   end -}}
{{- end -}}
{{/* DEBUG: dummy secret absent in the pre-upgrade version */}}
{{ - include "corda.secret"
  ( list
    $
    .Values.bootstrap.restApiAdmin
    "bootstrap.restApiAdmin"
    ( include "corda.corda.dummyDebugSecretName" . )
    ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
  )
}}
