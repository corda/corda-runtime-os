plugins {
    id 'com.r3.internal.gradle.plugins.r3Publish'
    id 'corda.common-app'
}

description 'Database Worker Prototype Application'

dependencies {
    compileOnly 'org.osgi:osgi.annotation'
    compileOnly 'org.osgi:osgi.core'
    compileOnly 'org.osgi:org.osgi.service.component.annotations'

    implementation platform("net.corda:corda-api:$cordaApiVersion")

    implementation 'net.corda.kotlin:kotlin-stdlib-jdk8-osgi'
    implementation 'org.slf4j:slf4j-api'
    implementation 'net.corda:corda-base'
    implementation 'net.corda:corda-db-schema'

    implementation "info.picocli:picocli:$picocliVersion"
    implementation "com.typesafe:config:$typeSafeConfigVersion"

    implementation project(":osgi-framework-api")

    implementation project(":components:permissions:permission-storage-writer-service")

    implementation project(":libs:configuration:configuration-core")
    implementation project(":libs:db:db-core")
    implementation project(":libs:db:db-admin")
    implementation project(":libs:db:db-orm")
    implementation project(":libs:messaging:messaging")
    implementation project(":libs:lifecycle:lifecycle")
    implementation project(':libs:permissions:permission-datamodel')
    implementation project(":libs:db:db-admin-impl")
    implementation project(":libs:permissions:permission-storage-writer")

    runtimeOnly project(":libs:messaging:messaging-impl")
    runtimeOnly project(":libs:messaging:kafka-message-bus-impl")
    runtimeOnly project(":libs:schema-registry:schema-registry-impl")
    runtimeOnly project(":libs:lifecycle:lifecycle-impl")
    runtimeOnly project(":libs:db:db-orm-impl")
    runtimeOnly project(":libs:permissions:permission-storage-writer-impl")

    runtimeOnly "org.apache.felix:org.apache.felix.scr:$felixScrVersion"
    runtimeOnly "org.osgi:org.osgi.util.function:$osgiUtilFunctionVersion"
    runtimeOnly "org.osgi:org.osgi.util.promise:$osgiUtilPromiseVersion"

    runtimeOnly "org.apache.aries.spifly:org.apache.aries.spifly.dynamic.bundle:$ariesDynamicBundleVersion"
    runtimeOnly "org.postgresql:postgresql:$postgresDriverVersion"
    runtimeOnly "org.liquibase:liquibase-core:$liquibaseVersion"
    runtimeOnly "org.hibernate:hibernate-core:$hibernateVersion"
    runtimeOnly("org.hibernate:hibernate-osgi:$hibernateVersion") {
        // Need to exclude the org.osgi package as will use the BND ones at runtime
        //  org.osgi ones are added above as compileOnly
        exclude group: 'org.osgi'
    }

    runtimeOnly "com.sun.activation:javax.activation:$activationVersion"
}

tasks.register('publishOSGiImage', net.corda.gradle.DeployableContainerBuilder) {
    description "Builds the docker image for the deployable OSGi application"

    if (project.hasProperty('jibRemotePublish')) {
        remotePublish = jibRemotePublish.toBoolean()
    }

    if (project.hasProperty('releaseCandidate')) {
        releaseCandidate = releaseCandidate.toBoolean()
    }
}
