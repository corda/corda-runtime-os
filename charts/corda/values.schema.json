{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "http://corda.net/corda-helm.json",
    "type": "object",
    "default": {},
    "title": "Corda helm chart schema",
    "additionalProperties": false,
    "required": [
        "db",
        "kafka"
    ],
    "additionalProperties": false,
    "properties": {
        "fullnameOverride": {
            "type": "string",
            "default": "",
            "title": "override chart fullname",
            "examples": [""]
        },
        "nameOverride": {
            "type": "string",
            "default": "",
            "title": "override chart name",
            "examples": [""]
        },
        "image": {
            "type": "object",
            "default": {},
            "title": "worker and CLI image defaults",
            "required": [
                "registry"
            ],
            "properties": {
                "registry": {
                    "type": "string",
                    "default": "corda-os-docker.software.r3.com",
                    "title": "worker image registry",
                    "examples": [
                        "corda-os-docker.software.r3.com"
                    ],
                    "minLength": 1
                },
                "tag": {
                    "type": "string",
                    "default": "",
                    "title": "worker image tag, defaults to Chart appVersion",
                    "examples": [
                        ""
                    ]
                }
            }
        },
        "imagePullSecrets": {
            "type": "array",
            "default": [],
            "title": "image pull secrets",
            "items": {
                "type":"string"
            },
            "examples": [
                []
            ]
        },
        "imagePullPolicy": {
            "type": "string",
            "default": "Always",
            "title": "image pull policy",
            "enum": ["Always", "Never", "IfNotPresent"],
            "examples": [
                "Always"
            ]
        },
        "resources": {
            "type": "object",
            "default": {},
            "title": "default resource limits and requests configuration for the Corda containers",
            "required": [
                "limits",
                "requests"
            ],
            "additionalProperties": false,
            "properties": {
                "limits": {
                    "type": "object",
                    "default": {},
                    "title": "the default CPU/memory resource limits for the Corda containers",
                    "required": [],
                    "properties": {
                        "cpu": {"type": "string"},
                        "memory": {"type": "string"}
                    },
                    "additionalProperties": false,
                    "examples": [{
                        "cpu": "1",
                        "memory": "2048Mi"
                    }]
                    
                },
                "requests": {
                    "type": "object",
                    "default": {},
                    "title": "the default CPU/memory resource request for the Corda containers",
                    "required": [],
                    "properties": {
                        "cpu": {"type": "string"},
                        "memory": {"type": "string"}
                    },
                    "additionalProperties": false,
                    "examples": [{
                        "cpu": "1",
                        "memory": "2048Mi"
                    }]
                }
            }
        },
        "logging": {
            "type": "object",
            "default": {},
            "title": "Logging configuration",
            "additionalProperties": false,
            "required": [
                "format",
                "level"
            ],
            "properties": {
                "format": {
                    "type": "string",
                    "default": "json",
                    "title": "log format",
                    "examples": [
                        "json"
                    ],
                    "enum": ["json","text"]

                },
                "level": {
                    "type": "string",
                    "default": "warn",
                    "title": "log level",
                    "examples": [
                        "warn"
                    ],
                    "enum": ["all","trace","debug","info","warn","error","fatal","off"]
                }
            },
            "examples": [{
                "format": "json",
                "level": "warn"
            }]
        },
        "dumpHostPath": {
            "type": "string",
            "default": "",
            "title": "path on Kubernetes hosts to mount on Corda workers for collecting dumps",
            "examples": [
                "/logging"
            ]
        },
        "heapDumpOnOutOfMemoryError": {
            "type": "boolean",
            "default": false,
            "title": "enables capturing JVM heap dumps from Corda workers on an OutOfMemory error",
            "examples": [
                false,
                true
            ]
            
        },
        "openTelemetry": {
            "type": "object",
            "default": {},
            "title": "open Telemetry configuration",
            "required": [
                "enabled"
            ],
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "title": "enables the Open Telemetry Java agent for the Corda workers",
                    "examples": [
                        false,
                        true
                    ]
                },
                "endpoint": {
                    "type": ["string", "null"],
                    "default": null,
                    "title": "the Open Telemetry endpoint to use; telemetry will be logged locally if this is unset",
                    "examples": [
                        "https://otel.example.com:4317"
                    ],
                    "format": "uri"
                },
                "protocol": {
                    "type": "string",
                    "default": "",
                    "title": "the Open Telemetry protocol the endpoint is using",
                    "examples": [
                        "grpc"
                    ],
                    "enum": ["grpc","http/protobuf"]
                }
            },
            "if": {
                "properties": {
                    "enabled": {
                        "const": true
                    }
                }
            },
            "then": {
                "required": [
                    "endpoint",
                    "protocol"
                ]
            },
            "examples": [{
                "enabled": true,
                "endpoint": "https://otel.example.com:4317",
                "protocol": "grpc"
            }]
        },
        "nodeSelector": {
            "type": "object",
            "default": {},
            "title": "node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/",
            "required": [],
            "properties": {},
            "examples": [{}]
        },
        "db": {
            "type": "object",
            "default": {},
            "title": "cluster database configuration",
            "required": [
                "cluster",
                "clientImage"
            ],
            "additionalProperties": false,
            "properties": {
                "cluster": {
                    "type": "object",
                    "default": {},
                    "title": "cluster database configuration",
                    "required": [
                        "host",
                        "type",
                        "port",
                        "user",
                        "database"                    
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "host": {
                            "type": "string",
                            "format": "hostname",
                            "default": "",
                            "title": "the cluster database host",
                            "examples": [
                                "postgresql.example.com"
                            ]
                        },
                        "type": {
                            "type": "string",
                            "default": "postgresql",
                            "title": "the cluster database type",
                            "examples": [
                                "postgresql"
                            ],
                            "enum": ["postgresql"]
                        },
                        "port": {
                            "type": "integer",
                            "default": 5432,
                            "title": "the cluster database port",
                            "examples": [
                                5432
                            ]
                        },
                        "user": {
                            "type": "string",
                            "default": "user",
                            "title": "the cluster database user",
                            "examples": [
                                "user"
                            ],
                            "minLength": 1
                        },
                        "database": {
                            "type": "string",
                            "default": "cordacluster",
                            "title": "the name of the cluster database",
                            "examples": [
                                "cordacluster"
                            ],
                            "minLength": 1
                        },
                        "password": {
                            "type": "string",
                            "default": "",
                            "title": "the cluster database password (ignored if existingSecret is set, otherwise required)",
                            "examples": [
                                "password"
                            ]
                        },
                        "existingSecret": {
                            "type": "string",
                            "default": "",
                            "title": "the name of an existing secret containing the cluster database password with a key of 'password'",
                            "examples": [
                                "postgresql-secret"
                            ]
                        }
                    },
                    "examples": [{
                        "host": "postgresql.example.com",
                        "type": "postgresql",
                        "port": 5432,
                        "user": "user",
                        "database": "cordacluster",
                        "existingSecret": "postgresql-secret"
                    }]
                },
                "clientImage": {
                    "type": "object",
                    "default": {},
                    "title": "db client image",
                    "required": [
                        "registry",
                        "repository",
                        "tag"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "",
                            "title": "registry for image containing a db client, used to set up the db",
                            "examples": [
                                "docker.io"
                            ]
                        },
                        "repository": {
                            "type": "string",
                            "default": "postgres",
                            "title": "repository for image containing a db client, used to set up the db",
                            "examples": [
                                "postgres"
                            ],
                            "minLength": 1
                        },
                        "tag": {
                            "type": "string",
                            "default": "14.4",
                            "title": "tag for image containing a db client, used to set up the db",
                            "examples": [
                                "14.4"
                            ],
                            "minLength": 1
                        }
                    },
                    "examples": [{
                        "registry": "docker.io",
                        "repository": "postgres",
                        "tag": "14.4"
                    }]
                }
            },
            "examples": [{
                "cluster": {
                    "host": "prereqs-postgresql",
                    "type": "postgresql",
                    "port": 5432,
                    "user": "user",
                    "database": "cordacluster",
                    "existingSecret": "postgresql-secret"
                },
                "clientImage": {
                    "registry": "docker.io",
                    "repository": "postgres",
                    "tag": "14.4"
                }
            }]
        },
        "kafka": {
            "type": "object",
            "default": {},
            "title": "Kafka configuration",
            "required": [
                "bootstrapServers",
                "topicPrefix",
                "tls",
                "sasl"
            ],
            "additionalProperties": false,
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "default": "",
                    "title": "comma-separated list of Kafka bootstrap servers",
                    "examples": [
                        "prereqs-kafka:9092"
                    ],
                    "minLength": 1                   
                },
                "topicPrefix": {
                    "type": "string",
                    "default": "",
                    "title": "prefix to use for Kafka topic names (to support the use of a single Kafka cluster by multiple Corda clusters)",
                    "examples": [
                        ""
                    ]
                },
                "tls": {
                    "type": "object",
                    "default": {},
                    "title": "tls configuration for client connections to Kafka",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "indicates whether TLS should be used for client connections to Kafka",
                            "examples": [
                                false,
                                true
                            ]
                        },
                        "truststore": {
                            "type": "object",
                            "default": {},
                            "title": "if TLS is enabled, the truststore configuration for client connections to Kafka",
                            "required": [
                                "secretRef",
                                "type"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "secretRef": {
                                    "type": "object",
                                    "default": {},
                                    "title": "if TLS is enabled, details of an existing Kubernetes secret containing the truststore for client connections to Kafka",
                                    "required": [
                                        "name",
                                        "key"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "default": "",
                                            "title": "if TLS is enabled, the name of an existing Kubernetes secret containing the truststore for client connections to Kafka; blank if no truststore is required",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "key": {
                                            "type": "string",
                                            "default": "ca.crt",
                                            "title": "if TLS is enabled, the name of the key used in the Kubernetes secret containing the truststore for client connections to Kafka",
                                            "examples": [
                                                "ca.crt"
                                            ],
                                            "minLength": 1
                                        }
                                    },
                                    "examples": [{
                                        "name": "",
                                        "key": "ca.crt"
                                    }]
                                },
                                "type": {
                                    "type": "string",
                                    "default": "PEM",
                                    "title": "if TLS is enabled, the type of the truststore for client connections to Kafka; one of PEM or JKS",
                                    "examples": [
                                        "PEM"
                                    ],
                                    "enum": ["PEM","JKS"]
                                },
                                "password": {
                                    "type": "string",
                                    "default": "",
                                    "title": "if TLS is enabled, the password for the truststore for client connections to Kafka, if any",
                                    "examples": [
                                        ""
                                    ]
                                }
                            }
                        }
                    }
                },
                "sasl": {
                    "type": "object",
                    "default": {},
                    "title": "sasl configuration for client connection to Kafka",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "username": {
                            "type": "string",
                            "default": "user",
                            "title": "sasl username for client connection to Kafka",
                            "examples": [
                                "user"
                            ],
                            "minLength": 1
                        },
                        "password": {
                            "type": "string",
                            "default": "",
                            "title": "sasl password for client connection to Kafka",
                            "examples": [
                                ""
                            ]
                        },
                        "mechanism": {
                            "type": "string",
                            "default": "",
                            "title": "sasl mechanism for client connection to Kafka",
                            "examples": [
                                "SCRAM-SHA-256"
                            ],
                            "minLength": 1
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "enable/disable SASL for client connection to Kafka",
                            "examples": [
                                false,
                                true
                            ]
                        }
                    },
                    "if": {
                        "properties": {
                            "enabled": {
                                "const": true
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "password": {
                                "minLength": 1
                            }
                        },
                        "required": [
                            "username",
                            "password",
                            "mechanism"
                        ]
                    },
                    "examples": [{
                        "username": "user",
                        "password": "password",
                        "mechanism": "SCRAM-SHA-256",
                        "enabled": true
                    }]
                }
            }
        },
        "bootstrap": {
            "type": "object",
            "default": {},
            "title": "configuration for cluster bootstrap",
            "required": [
                "initialAdminUser",
                "db",
                "kafka",
                "image",
                "resources",
                "nodeSelector"
            ],
            "additionalProperties": false,
            "properties": {
                "initialAdminUser": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for the initial user created with admin permissions",
                    "required": [
                        "username"   
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "username": {
                            "type": "string",
                            "default": "admin",
                            "title": "username for the initial admin user",
                            "examples": [
                                "admin"
                            ],
                            "minLength": 1
                        },
                        "password": {
                            "type": "string",
                            "default": "",
                            "title": "password for the initial admin user; generated if not specified",
                            "examples": [
                                ""
                            ]
                        },
                        "secretRef": {
                            "type": "object",
                            "default": {},
                            "title": "reference to a Kubernetes secret that holds the initial admin user credentials to be used in preference to any provided via username and password",
                            "required": [
                                "name",
                                "usernameKey",
                                "passwordKey"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "default": "",
                                    "title": "if specified, the name of an existing secret that contains the initial admin user credentials to be used in preference to any provided via username and password",
                                    "examples": [
                                        ""
                                    ]
                                },
                                "usernameKey": {
                                    "type": "string",
                                    "default": "username",
                                    "title": "the key name for the secret entry containing the initial admin user's username",
                                    "examples": [
                                        "username"
                                    ],
                                    "minLength": 1
                                },
                                "passwordKey": {
                                    "type": "string",
                                    "default": "password",
                                    "title": "the key name for the secret entry containing the initial admin user's password",
                                    "examples": [
                                        "password"
                                    ],
                                    "minLength": 1
                                }
                            },
                            "examples": [{
                                "name": "initial-admin-secret",
                                "usernameKey": "username",
                                "passwordKey": "password"
                            }]
                        }
                    },
                    "examples": [{
                        "username": "admin",
                        "password": "password"
                    },
                    {
                        "secretRef": {
                            "name": "initial-admin-secret",
                            "usernameKey": "username",
                            "passwordKey": "password"
                        }
                    }]
                },
                "db": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for database bootstrap",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "title": "indicates whether DB bootstrap is enabled as part of installation",
                            "examples": [
                                true,
                                false
                            ]
                        },
                        "crypto": {
                            "type": "object",
                            "default": {},
                            "title": "crypto configuration",
                            "required": [
                                "dbConnectionPool"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "dbConnectionPool": {
                                    "type": "object",
                                    "default": {},
                                    "title": "JDBC connection pool configuration for crypto DB",
                                    "required": [
                                        "maxSize"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "maxSize": {
                                            "type": "integer",
                                            "default": 5,
                                            "title": "maximum JDBC connection pool size for crypto DB",
                                            "examples": [
                                                5
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "maxSize": 5
                                    }]
                                }
                            },
                            "examples": [{
                                "dbConnectionPool": {
                                    "maxSize": 5
                                }
                            }]
                        },
                        "rbac": {
                            "type": "object",
                            "default": {},
                            "title": "RBAC configuration",
                            "required": [
                                "dbConnectionPool"
                            ],
                            "properties": {
                                "dbConnectionPool": {
                                    "type": "object",
                                    "default": {},
                                    "title": "JDBC connection pool configuration for RBAC DB",
                                    "required": [
                                        "maxSize"
                                    ],
                                    "properties": {
                                        "maxSize": {
                                            "type": "integer",
                                            "default": 5,
                                            "title": "maximum JDBC connection pool size for RBAC DB",
                                            "examples": [
                                                5
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "maxSize": 5
                                    }]
                                }
                            },
                            "examples": [{
                                "dbConnectionPool": {
                                    "maxSize": 5
                                }
                            }]
                        }
                    },
                    "examples": [{
                        "enabled": true,
                        "crypto": {
                            "dbConnectionPool": {
                                "maxSize": 5
                            }
                        },
                        "rbac": {
                            "dbConnectionPool": {
                                "maxSize": 5
                            }
                        }
                    }]
                },
                "kafka": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for Kafka bootstrap",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "title": "indicates whether Kafka bootstrap is enabled as part of installation",
                            "examples": [
                                true,
                                false
                            ]
                        },
                        "cleanup": {
                            "type": "boolean",
                            "default": false,
                            "title": "specifies whether existing topics with the given prefix should be deleted before trying to create new ones (deletes all existing topics if no prefix is given)",
                            "examples": [
                                false,
                                true
                            ]
                        },
                        "partitions": {
                            "type": "integer",
                            "default": 10,
                            "title": "kafka topic partitions",
                            "examples": [
                                10
                            ]
                        },
                        "replicas": {
                            "type": "integer",
                            "default": 3,
                            "title": "kafka topic replicas",
                            "examples": [
                                3
                            ]
                        }
                    },
                    "if": {
                        "properties": {
                            "enabled": {
                                "const": true
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "cleanup",
                            "partitions",
                            "replicas"
                        ]
                    },
                    "examples": [{
                        "enabled": true,
                        "cleanup": false,
                        "partitions": 10,
                        "replicas": 3
                    }]
                },
                "image": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for CLI image used for bootstrap",
                    "required": [
                        "repository"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "",
                            "title": "CLI image registry; defaults to image.registry",
                            "examples": [
                                ""
                            ]
                        },
                        "repository": {
                            "type": "string",
                            "default": "corda-os-plugins",
                            "title": "CLI image repository",
                            "examples": [
                                "corda-os-plugins"
                            ],
                            "minLength": 1
                        },
                        "tag": {
                            "type": "string",
                            "default": "",
                            "title": "CLI default tag; defaults to image.tag",
                            "examples": [
                                ""
                            ]
                        }
                    },
                    "examples": [{
                        "registry": "",
                        "repository": "corda-os-plugins",
                        "tag": ""
                    }]
                },
                "resources": {
                    "type": "object",
                    "default": {},
                    "title": "resource limits and requests configuration for the bootstrap containers",
                    "required": [
                        "requests",
                        "limits"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "requests": {
                            "type": "object",
                            "default": {},
                            "title": "the CPU/memory resource requests for the bootstrap containers",
                            "required": [],
                            "properties": {
                                "cpu": {"type": "string"},
                                "memory": {"type": "string"}
                            },
                            "additionalProperties": false,
                            "examples": [{
                                "cpu": "1",
                                "memory": "2048Mi"
                            }]
                        },
                        "limits": {
                            "type": "object",
                            "default": {},
                            "title": "the CPU/memory resource limits for the bootstrap containers",
                            "required": [],
                            "properties": {
                                "cpu": {"type": "string"},
                                "memory": {"type": "string"}
                            },
                            "additionalProperties": false,
                            "examples": [{
                                "cpu": "1",
                                "memory": "2048Mi"
                            }]
                        }
                    },
                    "examples": [{
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"                            
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"                            
                        }
                    }]
                },
                "nodeSelector": {
                    "type": "object",
                    "default": {},
                    "title": "node selector for the bootstrap containers",
                    "required": [],
                    "properties": {},
                    "examples": [{}]
                }
            }
        },
        "workers": {
            "type": "object",
            "default": {},
            "title": "worker configuration",
            "required": [
                "crypto",
                "db",
                "flow",
                "membership",
                "rpc",
                "p2pLinkManager",
                "p2pGateway"
            ],
            "additionalProperties": false,
            "properties": {
                "crypto": {
                    "type": "object",
                    "default": {},
                    "title": "crypto worker configuration",
                    "required": [
                        "image",
                        "replicaCount",
                        "debug",
                        "logging",
                        "profiling",
                        "resources",
                        "clusterDbConnectionPool"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "crypto worker image configuration",
                            "required": [
                                "repository"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "crypto worker image registry, defaults to image.registry",
                                    "examples": [
                                        ""
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "corda-os-crypto-worker",
                                    "title": "crypto worker image repository",
                                    "examples": [
                                        "corda-os-crypto-worker"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "crypto worker image tag, defaults to image.tag",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "registry": "",
                                "repository": "corda-os-crypto-worker",
                                "tag": ""
                            }]
                        },
                        "replicaCount": {
                            "minimum": 0,
                            "type": "integer",
                            "default": 1,
                            "title": "crypto worker replica count",
                            "examples": [
                                1
                            ]
                        },
                        "debug": {
                            "type": "object",
                            "default": {},
                            "title": "db worker debug configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run crypto worker with debug enabled",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                },
                                "suspend": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "if debug is enabled, suspend the DB worker until the debugger is attached",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                }
                            },
                            "if": {
                                "properties": {
                                    "enabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "suspend"
                                ]
                            },
                            "examples": [{
                                "enabled": true,
                                "suspend": false
                            }]
                        },
                        "logging": {
                            "type": "object",
                            "default": {},
                            "title": "logging configuration",
                            "additionalProperties": false,
                            "properties": {
                                "level": {
                                    "type": ["string", "null"],
                                    "default": null,
                                    "title": "log level (defaults to logging.level if not specified)",
                                    "examples": [
                                        "warn"
                                    ],
                                    "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                                }
                            }
                        },
                        "profiling": {
                            "type": "object",
                            "default": {},
                            "title": "crypto profiling configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run crypto worker with profiling enabled",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": false
                            }]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "resource limits and requests configuration for the crypto worker containers",
                            "required": [
                                "requests",
                                "limits"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource requests for the crypto worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                },
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource limits for the crypto worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                }
                            },
                            "examples": [{
                                "requests": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                },
                                "limits": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                }
                            }]
                        },
                    "clusterDbConnectionPool": {
                        "type": "object",
                        "default": {},
                        "title": "crypto worker JDBC connection pool configuration for cluster DB",
                        "required": [
                            "maxSize"
                        ],
                        "properties": {
                            "maxSize": {
                                "type": "integer",
                                "default": 5,
                                "title": "crypto worker maximum JDBC connection pool size for cluster DB",
                                "examples": [
                                    5
                                ]
                            }
                        }
                    }
                }
                },
                "db": {
                    "type": "object",
                    "default": {},
                    "title": "db worker image configuration",
                    "required": [
                        "image",
                        "replicaCount",
                        "resources"
                    ],
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "db worker image configuration",
                            "required": [
                                "repository"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "db worker image registry, defaults to image.registry",
                                    "examples": [
                                        "corda-os-docker.software.r3.com"
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "corda-os-db-worker",
                                    "title": "db worker image repository",
                                    "examples": [
                                        "corda-os-db-worker"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "db worker image tag, defaults to image.tag",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "registry": "corda-os-docker.software.r3.com",
                                "repository": "corda-os-db-worker",
                                "tag": ""
                            }]
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "db worker replica count",
                            "examples": [
                                1
                            ]
                        },
                        "debug": {
                            "type": "object",
                            "default": {},
                            "title": "db worker debug configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run DB worker with debug enabled",
                                    "examples": [
                                        false
                                    ]
                                },
                                "suspend": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "if debug is enabled, suspend the DB worker until the debugger is attached",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "if": {
                                "properties": {
                                    "enabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "suspend"
                                ]
                            },
                            "examples": [{
                                "enabled": true,
                                "suspend": false
                            }]
                        },
                        "logging": {
                            "type": "object",
                            "default": {},
                            "title": "logging configuration",
                            "additionalProperties": false,
                            "properties": {
                                "level": {
                                    "type": ["string", "null"],
                                    "default": null,
                                    "title": "log level (defaults to logging.level if not specified)",
                                    "examples": [
                                        "warn"
                                    ],
                                    "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                                }
                            },
                            "examples": [{
                                "level": "warn"
                            }]
                        },
                        "profiling": {
                            "type": "object",
                            "default": {},
                            "title": "db profiling configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run DB worker with profiling enabled",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": false
                            }]
                        },
                        "salt": {
                            "type": "string",
                            "default": "",
                            "title": "db worker salt, defaults to a value randomly-generated on install",
                            "examples": [
                                "password"
                            ]
                        },
                        "passphrase": {
                            "type": "string",
                            "default": "",
                            "title": "db worker passphrase, defaults to a value randomly-generated on install",
                            "examples": [
                                "password"
                            ]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "resource limits and requests configuration for the DB worker containers.",
                            "required": [
                                "requests",
                                "limits"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource requests for the DB worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                },
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource limits for the DB worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                }
                            },
                            "examples": [{
                                "requests": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                },
                                "limits": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                }
                            }]
                        }
                    },
                    "examples": [{
                        "image": {
                            "registry": "",
                            "repository": "corda-os-db-worker",
                            "tag": ""
                        },
                        "replicaCount": 1,
                        "debug": {
                            "enabled": false,
                            "suspend": false
                        },
                        "logging": {
                            "level": "warn"
                        },
                        "profiling": {
                            "enabled": false
                        },
                        "salt": "password",
                        "passphrase": "password",
                        "resources": {
                            "requests": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            },
                            "limits": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            }
                        }
                    }]
                },
                "flow": {
                    "type": "object",
                    "default": {},
                    "title": "flow worker configuration",
                    "required": [
                        "image",
                        "replicaCount",
                        "debug",
                        "logging",
                        "profiling",
                        "resources",
                        "verifyInstrumentation"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "flow worker image configuration",
                            "required": [
                                "repository"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "flow worker image registry, defaults to image.registry",
                                    "examples": [
                                        ""
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "corda-os-flow-worker",
                                    "title": "flow worker image repository",
                                    "examples": [
                                        "corda-os-flow-worker"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "flow worker image tag, defaults to image.tag",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "registry": "",
                                "repository": "corda-os-flow-worker",
                                "tag": ""
                            }]
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "flow worker replica count",
                            "examples": [
                                1
                            ]
                        },
                        "debug": {
                            "type": "object",
                            "default": {},
                            "title": "flow worker debug configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run flow worker with debug enabled",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                },
                                "suspend": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "if debug is enabled, suspend the flow worker until the debugger is attached",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                }
                            },
                            "if": {
                                "properties": {
                                    "enabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "suspend"
                                ]
                            },
                            "examples": [{
                                "enabled": true,
                                "suspend": false
                            }]
                        },
                        "logging": {
                            "type": "object",
                            "default": {},
                            "title": "logging configuration",
                            "additionalProperties": false,
                            "properties": {
                                "level": {
                                    "type": ["string", "null"],
                                    "default": null,
                                    "title": "log level (defaults to logging.level if not specified)",
                                    "examples": [
                                        "warn"
                                    ],
                                    "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                                }
                            },
                            "examples": [{
                                "level": "warn"
                            }]
                        },
                        "profiling": {
                            "type": "object",
                            "default": {},
                            "title": "flow profiling configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run flow worker with profiling enabled",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": false
                            }]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "resource limits and requests configuration for the flow worker containers",
                            "required": [
                                "requests",
                                "limits"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource requests for the flow worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                },
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource limits for the flow worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                }
                            },
                            "examples": [{
                                "requests": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                },
                                "limits": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                }
                            }]
                        },
                        "verifyInstrumentation": {
                            "type": "boolean",
                            "default": false,
                            "title": "run flow worker with Quasar's verifyInstrumentation enabled",
                            "examples": [
                                false
                            ]
                        }
                    },
                    "examples": [{
                        "image": {
                            "registry": "corda-os-docker.software.r3.com",
                            "repository": "corda-os-flow-worker",
                            "tag": ""
                        },
                        "replicaCount": 1,
                        "debug": {
                            "enabled": false,
                            "suspend": false
                        },
                        "logging": {
                            "level": "warn"
                        },
                        "profiling": {
                            "enabled": false
                        },
                        "resources": {
                            "requests": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            },
                            "limits": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            }
                        },
                        "verifyInstrumentation": false
                    }]
                },
                "membership": {
                    "type": "object",
                    "default": {},
                    "title": "membership worker configuration",
                    "required": [
                        "image",
                        "replicaCount",
                        "debug",
                        "logging",
                        "profiling",
                        "resources"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "membership worker image configuration",
                            "required": [
                                "repository"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "membership worker image registry, defaults to image.registry",
                                    "examples": [
                                        "corda-os-docker.software.r3.com"
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "corda-os-member-worker",
                                    "title": "membership worker image repository",
                                    "examples": [
                                        "corda-os-member-worker"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "membership worker image tag, defaults to image.tag",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "registry": "corda-os-docker.software.r3.com",
                                "repository": "corda-os-member-worker",
                                "tag": ""
                            }]
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "membership worker replica count",
                            "examples": [
                                1
                            ]
                        },
                        "debug": {
                            "type": "object",
                            "default": {},
                            "title": "membership worker debug configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run membership worker with debug enabled",
                                    "examples": [
                                        false
                                    ]
                                },
                                "suspend": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "if debug is enabled, suspend the membership worker until the debugger is attached",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "if": {
                                "properties": {
                                    "enabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "suspend"
                                ]
                            },
                            "examples": [{
                                "enabled": true,
                                "suspend": false
                            }]
                        },
                        "logging": {
                            "type": "object",
                            "default": {},
                            "title": "logging configuration",
                            "additionalProperties": false,
                            "properties": {
                                "level": {
                                    "type": ["string", "null"],
                                    "default": null,
                                    "title": "log level (defaults to logging.level if not specified)",
                                    "examples": [
                                        "warn"
                                    ],
                                    "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                                }
                            },
                            "examples": [{
                                "level": "warn"
                            }]
                        },
                        "profiling": {
                            "type": "object",
                            "default": {},
                            "title": "membership profiling configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run membership worker with profiling enabled",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": false
                            }]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "resource limits and requests configuration for the membership worker containers",
                            "required": [
                                "requests",
                                "limits"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource requests for the membership worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                },
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource limits for the membership worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                }
                            }

                        }
                    },
                    "examples": [{
                        "image": {
                            "registry": "corda-os-docker.software.r3.com",
                            "repository": "corda-os-member-worker",
                            "tag": ""
                        },
                        "replicaCount": 1,
                        "debug": {
                            "enabled": false,
                            "suspend": false
                        },
                        "logging": {
                            "level": ""
                        },
                        "profiling": {
                            "enabled": false
                        },
                        "resources": {
                            "requests": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            },
                            "limits": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            }
                        }
                    }]
                },
                "rpc": {
                    "type": "object",
                    "default": {},
                    "title": "rpc worker configuration",
                    "required": [
                        "image",
                        "replicaCount",
                        "debug",
                        "logging",
                        "profiling",
                        "resources",
                        "service"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "rpc worker image configuration",
                            "required": [
                                "repository"
                            ],
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "rpc worker image registry, defaults to image.registry",
                                    "examples": [
                                        "corda-os-docker.software.r3.com"
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "corda-os-rpc-worker",
                                    "title": "rpc worker image repository",
                                    "examples": [
                                        "corda-os-rpc-worker"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "rpc worker image tag, defaults to image.tag",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "registry": "corda-os-docker.software.r3.com",
                                "repository": "corda-os-rpc-worker",
                                "tag": ""
                            }]
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "rpc worker replica count",
                            "examples": [
                                1
                            ]
                        },
                        "debug": {
                            "type": "object",
                            "default": {},
                            "title": "rpc worker debug configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run RPC worker with debug enabled",
                                    "examples": [
                                        false
                                    ]
                                },
                                "suspend": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "if debug is enabled, suspend the RPC worker until the debugger is attached",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "if": {
                                "properties": {
                                    "enabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "suspend"
                                ]
                            },
                            "examples": [{
                                "enabled": false,
                                "suspend": false
                            }]
                        },
                        "logging": {
                            "type": "object",
                            "default": {},
                            "title": "logging configuration",
                            "additionalProperties": false,
                            "properties": {
                                "level": {
                                    "type": ["string", "null"],
                                    "default": null,
                                    "title": "log level (defaults to logging.level if not specified)",
                                    "examples": [
                                        "warn"
                                    ],
                                    "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                                }
                            },
                            "examples": [{
                                "level": "warn"
                            }]
                        },
                        "profiling": {
                            "type": "object",
                            "default": {},
                            "title": "rpc profiling configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run RPC worker with profiling enabled",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": false
                            }]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "resource limits and requests configuration for the RPC worker containers.",
                            "required": [
                                "requests",
                                "limits"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource requests for the RPC worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                },
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource limits for the RPC worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                }
                            },
                            "examples": [{
                                "requests": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                },
                                "limits": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                }
                            }]
                        },
                        "service": {
                            "type": "object",
                            "default": {},
                            "title": "rpc worker service configuration",
                            "required": [
                                "type",
                                "externalTrafficPolicy",
                                "loadBalancerSourceRanges",
                                "annotations"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "",
                                    "title": "the type for the RPC worker service",
                                    "examples": [
                                        "ClusterIP"
                                    ]
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "",
                                    "title": "the traffic policy for the RPC worker service",
                                    "examples": [
                                        ""
                                    ]
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": [],
                                    "title": "the LoadBalancer source ranges to limit access to the RPC worker service",
                                    "items": {},
                                    "examples": [
                                        []
                                    ]
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the annotations for RPC worker service",
                                    "required": [],
                                    "properties": {},
                                    "examples": [{}]
                                }
                            },
                            "examples": [{
                                "type": "ClusterIP",
                                "externalTrafficPolicy": "",
                                "loadBalancerSourceRanges": [],
                                "annotations": {}
                            }]
                        }
                    },
                    "examples": [{
                        "image": {
                            "registry": "corda-os-docker.software.r3.com",
                            "repository": "corda-os-rpc-worker",
                            "tag": ""
                        },
                        "replicaCount": 1,
                        "debug": {
                            "enabled": false,
                            "suspend": false
                        },
                        "logging": {
                            "level": "warn"
                        },
                        "profiling": {
                            "enabled": false
                        },
                        "resources": {
                            "requests": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            },
                            "limits": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            }
                        },
                        "service": {
                            "type": "ClusterIP",
                            "externalTrafficPolicy": "",
                            "loadBalancerSourceRanges": [],
                            "annotations": {}
                        }
                    }]
                },
                "p2pLinkManager": {
                    "type": "object",
                    "default": {},
                    "title": "P2P Link Manager worker configuration",
                    "required": [
                        "image",
                        "replicaCount",
                        "useStubs",
                        "debug",
                        "logging",
                        "profiling",
                        "resources"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "p2p-link-manager worker image configuration",
                            "required": [
                                "repository"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "p2p-link-manager worker image registry, defaults to image.registry",
                                    "examples": [
                                        "corda-os-docker.software.r3.com"
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "corda-os-p2p-link-manager-worker",
                                    "title": "p2p-link-manager worker image repository",
                                    "examples": [
                                        "corda-os-p2p-link-manager-worker"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "p2p-link-manager worker image tag, defaults to image.tag",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "registry": "corda-os-docker.software.r3.com",
                                "repository": "corda-os-p2p-link-manager-worker",
                                "tag": ""
                            }]
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "p2p-link-manager worker replica count",
                            "examples": [
                                1
                            ]
                        },
                        "useStubs": {
                            "type": "boolean",
                            "default": false,
                            "title": "use stubbed crypto processor, membership group reader and group policy provider",
                            "examples": [
                                false
                            ]
                        },
                        "debug": {
                            "type": "object",
                            "default": {},
                            "title": "p2p-link-manager worker debug configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run p2p-link-manager worker with debug enabled",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                },
                                "suspend": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "if debug is enabled, suspend the p2p-link-manager worker until the debugger is attached",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                }
                            },
                            "if": {
                                "properties": {
                                    "enabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "suspend"
                                ]
                            },
                            "examples": [{
                                "enabled": true,
                                "suspend": false
                            }]
                        },
                        "logging": {
                            "type": "object",
                            "default": {},
                            "title": "logging configuration",
                            "additionalProperties": false,
                            "properties": {
                                "level": {
                                    "type": ["string", "null"],
                                    "default": null,
                                    "title": "log level (defaults to logging.level if not specified)",
                                    "examples": [
                                        "warn"
                                    ],
                                    "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                                }
                            },
                            "examples": [{
                                "level": "warn"
                            }]
                        },
                        "profiling": {
                            "type": "object",
                            "default": {},
                            "title": "p2pLinkManager profiling configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run p2p-link-manager worker with profiling enabled",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": false
                            }]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "resource limits and requests configuration for the p2p-link-manager worker containers.",
                            "required": [
                                "requests",
                                "limits"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource requests for the p2p-link-manager worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                },
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource limits for the p2p-link-manager worker containers",
                                    "required": [],
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                }
                            },
                            "examples": [{
                                "requests": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                },
                                "limits": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                }
                            }]
                        }
                    },
                    "examples": [{
                        "image": {
                            "registry": "corda-os-docker.software.r3.com",
                            "repository": "corda-os-p2p-link-manager-worker",
                            "tag": ""
                        },
                        "replicaCount": 1,
                        "useStubs": false,
                        "debug": {
                            "enabled": false,
                            "suspend": false
                        },
                        "logging": {
                            "level": "warn"
                        },
                        "profiling": {
                            "enabled": false
                        },
                        "resources": {
                            "requests": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            },
                            "limits": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            }
                        }
                    }]
                },
                "p2pGateway": {
                    "type": "object",
                    "default": {},
                    "title": "p2p Gateway worker configuration",
                    "required": [
                        "image",
                        "replicaCount",
                        "useStubs",
                        "debug",
                        "logging",
                        "profiling",
                        "resources",
                        "service"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "p2p-gateway worker image configuration",
                            "required": [
                                "repository"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "p2p-gateway worker image registry, defaults to image.registry",
                                    "examples": [
                                        "corda-os-docker.software.r3.com"
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "corda-os-p2p-gateway-worker",
                                    "title": "p2p-gateway worker image repository",
                                    "examples": [
                                        "corda-os-p2p-gateway-worker"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "p2p-gateway worker image tag, defaults to image.tag",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "registry": "corda-os-docker.software.r3.com",
                                "repository": "corda-os-p2p-gateway-worker",
                                "tag": ""
                            }]
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "p2p-gateway worker replica count",
                            "examples": [
                                1
                            ]
                        },
                        "useStubs": {
                            "type": "boolean",
                            "default": false,
                            "title": "use stub crypto processor",
                            "examples": [
                                false
                            ]
                        },
                        "debug": {
                            "type": "object",
                            "default": {},
                            "title": "p2p-gateway worker debug configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run p2p-gateway worker with debug enabled",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                },
                                "suspend": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "if debug is enabled, suspend the p2p-gateway worker until the debugger is attached",
                                    "examples": [
                                        false,
                                        true
                                    ]
                                }
                            },
                            "if": {
                                "properties": {
                                    "enabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "suspend"
                                ]
                            },
                            "examples": [{
                                "enabled": true,
                                "suspend": false
                            }]
                        },
                        "logging": {
                            "type": "object",
                            "default": {},
                            "title": "logging configuration",
                            "additionalProperties": false,
                            "properties": {
                                "level": {
                                    "type": ["string", "null"],
                                    "default": null,
                                    "title": "log level (defaults to logging.level if not specified)",
                                    "examples": [
                                        "warn"
                                    ],
                                    "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                                }
                            },
                            "examples": [{
                                "level": "warn"
                            }]
                        },
                        "profiling": {
                            "type": "object",
                            "default": {},
                            "title": "p2pGateway profiling configuration",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run p2p-gateway worker with profiling enabled",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": false
                            }]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "resource limits and requests configuration for the p2pGateway worker containers",
                            "required": [
                                "requests",
                                "limits"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource requests for the p2pGateway worker containers",
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                },
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "the CPU/memory resource limits for the p2pGateway worker containers",
                                    "properties": {
                                        "cpu": {"type": "string"},
                                        "memory": {"type": "string"}
                                    },
                                    "additionalProperties": false,
                                    "examples": [{
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }]
                                }
                            },
                            "examples": [{
                                "requests": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                },
                                "limits": {
                                    "cpu": "1",
                                    "memory": "2048Mi"
                                }
                            }]
                        },
                        "service": {
                            "type": "object",
                            "default": {},
                            "title": "p2p-gateway worker worker service configuration",
                            "required": [
                                "port"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "port": {
                                    "type": "integer",
                                    "default": 8080,
                                    "title": "the Gateway HTTP port",
                                    "examples": [
                                        8080
                                    ]
                                }
                            },
                            "examples": [{
                                "port": 8080
                            }]
                        }
                    },
                    "examples": [{
                        "image": {
                            "registry": "corda-os-docker.software.r3.com",
                            "repository": "corda-os-p2p-gateway-worker",
                            "tag": ""
                        },
                        "replicaCount": 1,
                        "useStubs": false,
                        "debug": {
                            "enabled": false,
                            "suspend": false
                        },
                        "logging": {
                            "level": "warn"
                        },
                        "profiling": {
                            "enabled": false
                        },
                        "resources": {
                            "requests": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            },
                            "limits": {
                                "cpu": "1",
                                "memory": "2048Mi"
                            }
                        },
                        "service": {
                            "port": 8080
                        }
                    }]
                }
            },
            "examples": [{
                "crypto": {
                    "image": {
                        "registry": "",
                        "repository": "corda-os-crypto-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "db": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-db-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "salt": "",
                    "passphrase": "",
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "flow": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-flow-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    },
                    "verifyInstrumentation": false
                },
                "membership": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-member-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "rpc": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-rpc-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    },
                    "service": {
                        "type": "ClusterIP",
                        "externalTrafficPolicy": "",
                        "loadBalancerSourceRanges": [],
                        "annotations": {}
                    }
                },
                "p2pLinkManager": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-p2p-link-manager-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "useStubs": false,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "p2pGateway": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-p2p-gateway-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "useStubs": false,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    },
                    "service": {
                        "port": 8080
                    }
                }
            }]
        }
    },
    "examples": [{
        "imagePullSecrets": ["docker-registry-cred"],
        "db": {
            "cluster": {
                "existingSecret": "prereqs-postgresql",
                "host": "db.cluster.host=prereqs-postgresql"
            }
        },
        "kafka": {
            "bootstrapServers": "prereqs-kafka:9092"
        }
    }
    ]
}
