# Default settings for the different message subscriptions.
#
# These may be overridden by user provided configuration. The following fields are required in order to resolve this
# configuration correctly (the messaging library should ensure these are provided):
# - Topic name
# - Instance ID
# - Client ID counter (this is an internal detail of the patterns library)
#
# Note that some of these settings are enforced at the library level, and are included here for safety.
subscription {
    # Common configuration options across all subscriptions
    common {
        # The topic to subscribe to.
        topic = ${topic}
        # The instance ID
        instanceId = ${instanceId}
        # The client ID to use with this pattern.
        clientIdCounter = ${clientIdCounter}
        # Timeout for closing the underlying consumers and producers for this subscription. Time is in ms.
        close.timeout = 400
        # Time to wait for a response when calling poll on the underlying consumer(s) of a subscription. Time is in ms.
        poll.timeout = 500
        # Time to wait when a subscription stops for the processing thread to terminate cleanly. Time is in ms.
        thread.stop.timeout = 10000
        # The number of times to retry internal intermittent failures during event processing before throwing to
        # the client.
        processor.retries = 3
        # The number of times to attempt to subscribe to the underlying topic before throwing to the client.
        subscribe.retries = 3
        # The number of times to attempt to perform a commit of a transactional process before throwing to the
        # client.
        commit.retries = 3
    }
    # Settings for the pubsub subscription
    pubsub = ${subscription.common} {
        # Type of subscription. Used for logging purposes
        subscriptionType = pubSub
    }
    # Settings for compacted subscriptions.
    compacted = ${subscription.common} {
        # Type of subscription. Used for logging purposes.
        subscriptionType = compacted
    }
    # Settings for durable subscriptions.
    durable = ${subscription.common} {
        # Type of subscription. Used for logging purposes.
        subscriptionType = durable
    }
    # Settings for the state and event subscription. Note that the topic field in this case is the event topic.
    stateAndEvent = ${subscription.common} {
        # Type of subscription. Used for logging purposes.
        subscriptionType = stateAndEvent
        # The state topic to pair with the event topic.
        stateTopic = ${subscription.topic}.state
        # The dead letter queue topic to send events that cannot be processed.
        dlqTopic = ${subscription.topic}.dlq
    }
    # Settings for the event log subscription.
    eventLog = ${subscription.common} {
        # Type of subscription. Used for logging purposes.
        subscriptionType = eventLog
        # Time to wait for an event processor to succeed. This should be set long enough for events to be processed,
        # but not so long that the state topic becomes starved due to a lack of polling activity. Time is in ms.
        processor.timeout = 15000
    }
    # Settings for the RPC sender side.
    rpcSender = ${subscription.common} {
        # Type of subscription. Used for logging purposes.
        subscriptionType = rpcSender
        # The topic that responses are received from.
        responseTopic = ${subscription.topic}.resp
    }
    # Settings for the RPC responder side.
    rpcResponder = ${subscription.common} {
        # Type of subscription. Used for logging purposes.
        subscriptionType = rpcResponder
    }
}

# Default settings for publishers.
publisher {
    # Timeout to wait for underlying producers for the publisher. Time is in ms.
    close.timeout = 600
}
