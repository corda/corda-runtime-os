import aQute.bnd.gradle.Bundle
import aQute.bnd.gradle.Resolve
import aQute.bnd.gradle.TestOSGi

plugins {
    id 'corda.common-library'
    id 'corda.publish'
    id 'biz.aQute.bnd.builder'
}

description 'Kafka Messaging API Impl'

sourceSets {
    kafkaIntegrationTest {
        kotlin {
            srcDirs = [ 'src/kafka-integration-test/kotlin' ]
        }
        resources {
            srcDirs = [ 'src/kafka-integration-test/resources' ]
        }
    }
}

configurations {
    kafkaIntegrationTestApi.extendsFrom integrationTestApi
    kafkaIntegrationTestCompileOnly.extendsFrom integrationTestCompileOnly
    kafkaIntegrationTestImplementation.extendsFrom integrationTestImplementation
    kafkaIntegrationTestRuntimeOnly.extendsFrom integrationTestRuntimeOnly
}

dependencies {
    implementation project(":libs:messaging:messaging")
    implementation project(":libs:schema-registry:schema-registry")

    implementation "net.corda:corda-base:$cordaApiVersion"
    implementation "org.apache.servicemix.bundles:org.apache.servicemix.bundles.kafka-clients:$kafkaClientVersion"
    implementation "com.typesafe:config:$typeSafeConfigVersion"
    implementation project(":libs:lifecycle")

    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation project(":data:avro-schema")

    testRuntimeOnly "org.osgi:osgi.core:$osgiVersion"

    kafkaIntegrationTestImplementation project(":libs:messaging:kafka-messaging-impl")
    kafkaIntegrationTestImplementation project(":components:kafka-topic-admin")

    //runtime implementation dependencies
    kafkaIntegrationTestRuntimeOnly project(":libs:schema-registry:schema-registry-impl")
    kafkaIntegrationTestRuntimeOnly project(":libs:kafka-utils:topic-admin-impl")
    kafkaIntegrationTestRuntimeOnly "org.apache.felix:org.apache.felix.framework:$felixVersion"
    kafkaIntegrationTestRuntimeOnly "org.apache.felix:org.apache.felix.scr:$felixScrVersion"
    kafkaIntegrationTestRuntimeOnly "org.apache.logging.log4j:log4j-api:$log4jVersion"
}


tasks.register('kafkaIntegrationTest', TestOSGi) {
    description = "Runs Kafka OSGi integration tests."
    group = "verification"
    dependsOn resolve
    bundles = files(sourceSets.kafkaIntegrationTest.runtimeClasspath, configurations.archives.artifacts.files)
    bndrun = 'test.bndrun'
}

def kafkaTestingBundle = tasks.register('kafkaTestingBundle', Bundle) {
    archiveClassifier = 'tests'
    from sourceSets.kafkaIntegrationTest.output
    sourceSet = sourceSets.kafkaIntegrationTest

    bnd """\
Bundle-SymbolicName: \${task.archiveBaseName}-\${task.archiveClassifier}
Test-Cases: \${classes;HIERARCHY_INDIRECTLY_ANNOTATED;org.junit.platform.commons.annotation.Testable;CONCRETE}
"""
}

def resolve = tasks.register('resolve', Resolve) {
    dependsOn jar, kafkaTestingBundle
    bundles = files(sourceSets.kafkaIntegrationTest.runtimeClasspath, configurations.archives.artifacts.files)
    bndrun = 'test.bndrun'
    //  bnd attempts to use ~/ for caching if this is unavailable the build will fail.
    System.setProperty("bnd.home.dir", "$rootDir/bnd/")
}

artifacts {
    archives kafkaTestingBundle
}
