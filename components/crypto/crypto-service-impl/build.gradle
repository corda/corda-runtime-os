plugins {
    id 'corda.common-publishing'
    id 'corda.common-library'
    id "corda.osgi-test-conventions"
}

description 'Crypto service components'

dependencies {
    compileOnly "org.osgi:osgi.annotation"
    compileOnly "org.osgi:org.osgi.service.component.annotations"
    compileOnly "co.paralleluniverse:quasar-osgi-annotations:$quasarVersion"

    implementation 'org.jetbrains.kotlin:kotlin-osgi-bundle'
    implementation platform("net.corda:corda-api:$cordaApiVersion")

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"
    implementation "net.corda:corda-avro-schema"
    implementation "net.corda:corda-config-schema"
    implementation "net.corda:corda-topic-schema"

    implementation project(":components:configuration:configuration-read-service")
    implementation project(":components:crypto:crypto-client")
    implementation project(":components:crypto:crypto-component-core-impl")
    implementation project(":components:crypto:crypto-persistence")
    implementation project(":components:db:db-connection-manager")
    implementation project(":components:virtual-node:virtual-node-info-read-service")
    implementation project(":libs:configuration:configuration-core")
    implementation project(':libs:crypto:cipher-suite-impl')
    implementation project(":libs:crypto:crypto-core")
    implementation project(':libs:crypto:crypto-config-impl')
    implementation project(':libs:crypto:crypto-flow')
    implementation project(':libs:flows:external-event-responses')
    implementation project(":libs:messaging:messaging")
    implementation project(":libs:layered-property-map")
    implementation project(":libs:lifecycle:lifecycle")
    implementation project(':libs:utilities')
    implementation project(':libs:virtual-node:virtual-node-info')

    api project(":components:crypto:crypto-softhsm-impl")

    testImplementation project(":libs:cache:cache-caffeine")
    testImplementation 'net.corda:corda-application'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation project(":components:crypto:crypto-component-test-utils")

    testImplementation project(":components:crypto:crypto-persistence-model")
    testImplementation project(":components:crypto:crypto-hes-impl")
    testImplementation project(":components:crypto:crypto-softhsm-impl")
    testImplementation project(":libs:layered-property-map")
    testImplementation project(":libs:lifecycle:lifecycle-impl")
    testImplementation project(":libs:lifecycle:lifecycle-test-impl")
    testImplementation project(":libs:lifecycle:registry")
    testImplementation project(":testing:test-utilities")
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"

    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"

    integrationTestImplementation 'net.corda:corda-base'
    integrationTestImplementation 'net.corda:corda-db-schema'
    integrationTestImplementation("org.hibernate:hibernate-osgi:$hibernateVersion") {
        // Need to exclude the org.osgi package as will use the BND ones at runtime
        //  org.osgi ones are added above as compileOnly
        exclude group: 'org.osgi'
    }

    integrationTestImplementation project(":libs:configuration:configuration-core")
    integrationTestImplementation project(":libs:configuration:configuration-datamodel")
    integrationTestImplementation project(':libs:configuration:configuration-merger')
    integrationTestImplementation project(":libs:db:db-admin")
    integrationTestImplementation project(":libs:db:db-admin-impl")
    integrationTestImplementation project(":libs:db:db-core")
    integrationTestImplementation project(":libs:messaging:messaging")
    integrationTestImplementation project(":testing:db-message-bus-testkit")
    integrationTestImplementation project(":testing:db-testkit")

    integrationTestRuntimeOnly "com.sun.activation:javax.activation:$activationVersion"
    integrationTestRuntimeOnly "org.apache.aries.spifly:org.apache.aries.spifly.dynamic.framework.extension:$ariesDynamicFrameworkExtensionVersion"
    integrationTestRuntimeOnly("org.hibernate:hibernate-core:$hibernateVersion")
    integrationTestRuntimeOnly "org.ops4j.pax.jdbc:pax-jdbc-hsqldb:$paxJdbcVersion"
    integrationTestRuntimeOnly "org.hsqldb:hsqldb:$hsqldbVersion"
    integrationTestRuntimeOnly "org.postgresql:postgresql:$postgresDriverVersion"

    integrationTestRuntimeOnly project(":components:configuration:configuration-read-service-impl")
    integrationTestRuntimeOnly project(":components:db:db-connection-manager-impl")
    integrationTestRuntimeOnly project(":libs:db:db-orm-impl")
    integrationTestRuntimeOnly project(":libs:messaging:messaging-impl")
    integrationTestRuntimeOnly project(':libs:messaging:db-message-bus-impl')
}

tasks.named('jar', Jar) {
    bundle {
        bnd 'DynamicImport-Package: org.apache.avro.specific'
    }
}
