{{- include "corda.secret"
  ( list
    $
    .Values.bootstrap.db.cluster
    "boostrap.db.cluster"
    ( include "corda.bootstrapClusterDbDefaultSecretName" . )
    ( dict "username" ( dict ) "password" ( dict ) )
  )
}}
{{- include "corda.secret"
  ( list
    $
    .Values.db.cluster
    "db.cluster"
    ( include "corda.clusterDbDefaultSecretName" . )
    ( dict "username" ( dict "required" true ) "password" ( dict "required" true ) )
  )
}}
{{- include "corda.secret"
  ( list
    $
    .Values.config.encryption
    "config.encryption"
    ( printf "%s-config" ( include "corda.fullname" . ) )
    ( dict "salt" ( dict "generate" 32 ) "passphrase" ( dict "generate" 32 ) )
  )
}}
{{- include "corda.secret"
  ( list
    $
    .Values.bootstrap.db.crypto
    "bootstrap.db.crypto"
    ( include "corda.cryptoDbDefaultSecretName" . )
    ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
  )
}}
{{- include "corda.secret"
  ( list
    $
    .Values.bootstrap.db.rbac
    "bootstrap.db.rbac"
    ( include "corda.rbacDbDefaultSecretName" . )
    ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
  )
}}
{{- include "corda.secret"
  ( list
    $
    .Values.bootstrap.initialAdminUser
    "bootstrap.initialAdminUser"
    ( include "corda.initialAdminUserSecretName" . )
    ( dict "username" ( dict "required" true ) "password" ( dict "generate" 12 ) )
  )
}}
{{- if .Values.bootstrap.rest.enabled -}}
{{- $restWorkerName := "rest-worker" -}}
{{- $altNames := list ( printf "%s.c5.r3.com" .Release.Namespace ) ( printf "%s.%s.svc" $restWorkerName .Release.Namespace ) -}}
{{- $ca := genCA "REST Worker Certification Authority" 365 -}}
{{- $cert := genSignedCert $restWorkerName nil $altNames 365 $ca }}
{{- $secretDict := ( dict
        ( include "corda.restTlsCrtSecretKey" . ) ( dict "value" $cert.Cert )
        ( include "corda.restTlsKeySecretKey" . ) ( dict "value" $cert.Key )
        ( include "corda.restTlsCaSecretKey" . ) ( dict "value"  $ca.Cert )
     )
-}}
-}}
{{- include "corda.secret"
  ( list
    $
    .Values.bootstrap.rest.tls
    "bootstrap.rest.tls"
    ( include "corda.defaultRestTlsSecretName" . )
    $secretDict
  )
}}
{{- end }}