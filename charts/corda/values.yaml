# Default values for corda.
# For more information, see the Corda 5 documentation at docs.r3.com.

# -- override chart fullname
fullnameOverride: ""

# -- affinity for pod assignment
affinity: {}

# -- topology spread constraints
topologySpreadConstraints: []

# -- override chart name
nameOverride: ""

# worker and cli image defaults
image:
  # -- worker image registry
  registry: "corda-os-docker.software.r3.com"
  # -- worker image tag, defaults to Chart appVersion
  tag: ""

# define privilege and access control settings for a container
containerSecurityContext:
  # -- specify what user ID that processes will run with
  runAsUser: 10001
  # -- specify what group ID that processes will run with
  runAsGroup: 10002
  # -- enable privilege escalation
  allowPrivilegeEscalation: false
  # -- mount the container's root filesystem as read-only
  readOnlyRootFilesystem: true
  # linux capabilities for users
  capabilities:
    # -- capabilities to drop
    drop:
      - "ALL"

# define privilege and access control settings for a pod
podSecurityContext:
  # -- specify what user ID that processes will run with
  runAsUser: 10001
  # -- specify what group ID that processes will run with
  runAsGroup: 10002
  # -- specify supplementary group ID that processes will run with
  fsGroup: 1000

# -- extra labels to add to all deployed objects
commonLabels: {}

# extra labels to add to all pods created by deployments
commonPodLabels: {}

# -- image pull secrets
imagePullSecrets: []

# -- the image policy
imagePullPolicy: Always

# default resource limits and requests configuration for the Corda bootstrap and worker containers
resources:
  # -- the default CPU/memory resource limits for the Corda bootstrap and worker containers
  limits: {}
  # -- the default CPU/memory resource requests for the Corda bootstrap and worker containers
  requests: {}

# Logging configuration
logging:
  # -- log format; "json" or "text"
  format: "json"
  # -- log level; one of "all", "trace", "debug", "info" (the default), "warn", "error", "fatal", or "off"
  level: "info"

# Metrics configuration
metrics:
  # -- enable scraping of worker metrics through Prometheus annotations
  scrape: true
  # -- A list of regular expressions for the names of metrics that Corda should keep; if empty, all metrics are kept
  keepNames:
    - "corda_rpc_http_response_time_seconds_(count|sum|max)"
    - "corda_token_selection_execution_time_seconds_(count|sum|max)"
    - "corda_token_selection_db_execution_time_seconds_(count|sum|max)"
    - "corda_flow_execution_time_seconds_(count|sum|max)"
    - "corda_http_server_request_time_seconds_(count|sum|max)"
    - "corda_p2p_gateway_inbound_request_time_seconds_(count|sum|max)"
    - "corda_p2p_gateway_outbound_request_time_seconds_(count|sum|max)"
    - "corda_p2p_gateway_outbound_tls_connections_total"
    - "corda_p2p_message_outbound_total"
    - "corda_p2p_message_outbound_replayed_total"
    - "corda_p2p_message_outbound_latency_seconds_(count|sum|max)"
    - "corda_p2p_message_inbound_total"
    - "corda_p2p_session_outbound_total"
    - "corda_p2p_session_inbound_total"
    - "corda_membership_actions_handler_time_seconds_(count|sum|max)"
    - "corda_consumer_poll_time_seconds_(count|sum|max)"
    - "corda_messaging_commit_time_seconds_(count|sum|max)"
    - "corda_messaging_processor_time_seconds_(count|sum|max)"
    - "corda_taskmanager_.*"
    - "jvm_.*"
    - "process_cpu_usage"
  # -- A list of regular expressions for labels that Corda should drop across all metrics; if empty, all labels are kept
  dropLabels: []
  # -- Pod monitor configuration for scraping metrics. Please note that the corresponding CRD must exist in the environment
  podMonitor:
    # -- Enable pod monitor creation to identify endpoints to scrape
    enabled: false
    # -- Labels that can be used so PodMonitor is discovered by Prometheus
    labels: {}

# Distributed tracing configuration
tracing:
  # -- URL for endpoint to send Zipkin-format distributed traces to e.g. http://tempo:9411
  endpoint: ""
  # --  Number of request traces to sample per second, defaults to 1 sample per second. Set to 'unlimited' to record all traces, but in this case amount of tracing data produced can be quite vast.
  samplesPerSecond: "1"

# -- Path on Kubernetes hosts to mount on Corda workers for collecting dumps
dumpHostPath: ""

# -- Enables capturing JVM heap dumps from Corda workers on an OutOfMemory error
heapDumpOnOutOfMemoryError: false

# -- node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# -- service account for pod assignment, see https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  name: ""

# -- extra annotations (applied to all workers only)
annotations: {}

# tolerations to schedule worker and bootstrap pods on nodes with matching taints
tolerations: []

# Database configuration
db:
  # Cluster database configuration
  cluster:
    # -- the cluster database host (required)
    host: ""
    # -- the cluster database type
    type: "postgresql"
    # -- the cluster database port
    port: 5432
    # the cluster database user configuration
    username:
      # -- the cluster database user
      value: ""
      # the cluster database user secret configuration; used in preference to value if name is set
      valueFrom:
        # the cluster database user secret key reference
        secretKeyRef:
          # -- the cluster database user secret name
          name: ""
          # -- the cluster database user secret key
          key: ""
    # the cluster database password configuration
    password:
      # -- the cluster database password
      value: ""
      # the cluster database password secret configuration; used in preference to value if name is set
      valueFrom:
        # the cluster database password secret key reference
        secretKeyRef:
          # -- the cluster database password secret name
          name: ""
          # -- the cluster database password secret key
          key: ""
    database: cordacluster
    # -- the schema in which the cluster database config entities will be stored, passed to workers on startup
    schema: CONFIG

# Kafka configuration
kafka:
  # -- comma-separated list of Kafka bootstrap servers (required); for example: "broker1.example.com:9092,broker2.example.com:9092,broker3.example.com:9092"
  bootstrapServers: ""
  # -- prefix to use for Kafka topic names (to support the use of a single Kafka cluster by multiple Corda clusters)
  topicPrefix: ""
  # TLS configuration for client connections to Kafka
  tls:
    # -- indicates whether TLS should be used for client connections to Kafka
    enabled: false
    # if TLS is enabled, the truststore configuration for client connections to Kafka
    truststore:
      # if TLS is enabled, details of an existing Kubernetes secret containing the truststore for client connections to Kafka
      valueFrom:
        # -- the truststore secret key reference
        secretKeyRef:
          # -- the truststore secret name
          name: ""
          # -- the truststore secret key
          key: ""
      # -- if TLS is enabled, the type of the truststore for client connections to Kafka; one of PEM or JKS
      type: "PEM"
      # -- if TLS is enabled, the password for the truststore for client connections to Kafka, if any
      password:
        # -- the truststore password
        value: ""
        # -- the truststore password secret configuration; used in preference to value if name is set
        valueFrom:
          # -- the truststore password secret key reference
          secretKeyRef:
            # -- the truststore password secret name
            name: ""
            # -- the truststore password secret key
            key: ""
  # SASL configuration for client connection to Kafka
  sasl:
    # -- SASL mechanism for client connection to Kafka
    mechanism: "SCRAM-SHA-256"
    # -- enable/disable SASL for client connection to Kafka
    enabled: false
    # default SASL username configuration for client connection to Kafka
    username:
      # -- the default SASL username for client connection to Kafka
      value: ""
      # the default SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
      valueFrom:
        # the default SASL username secret key reference for client connection to Kafka
        secretKeyRef:
          # -- the default SASL username secret name for client connection to Kafka
          name: ""
          # -- the default SASL username secret key for client connection to Kafka
          key: ""
    # default SASL password configuration for client connection to Kafka
    password:
      # -- the default SASL password for client connection to Kafka
      value: ""
      # the default SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
      valueFrom:
        # the default SASL password secret key reference for client connection to Kafka
        secretKeyRef:
          # -- the default SASL password secret name for client connection to Kafka
          name: ""
          # -- the default SASL password secret key  for client connection to Kafka
          key: ""

# List of databases used by the Platform
databases:
  # The default database configuration
  - id: default
    # -- the default database name (required)
    name: "cordacluster"
    # -- the default database host (required)
    host: null
    # -- the default database port
    port: 5432
    # -- the default database type
    type: "postgresql"
    # The default database user configuration
    username:
      # -- the default database user
      value: ""
      # The default database user secret configuration; used in preference to value if name is set
      valueFrom:
        # The default database user secret key reference
        secretKeyRef:
          # -- the default database user secret name
          name: ""
          # -- the default database user secret key
          key: ""
    # The default database password configuration
    password:
      # -- the default database password
      value: ""
      # The default database password secret configuration; used in preference to value if name is set
      valueFrom:
        # The default database password secret key reference
        secretKeyRef:
          # -- the default database password secret name
          name: ""
          # -- the default database password secret key
          key: ""

# Persistent Storage configuration to be used by each State type known by the Platform
stateManager:
  # Persistent storage configuration for the 'flowCheckpoint' state type
  flowCheckpoint:
    # -- persistent storage type
    type: Database
    # -- name of the persistent storage to use. When using 'Database' as the type, an element with the given id should exist under the databases section
    storageId: "default"
    # -- name of the partition to use. When using 'Database' as the type, the 'partition' represents the name of the database schema
    partition: "sm_flow_checkpoint"
  # Persistent storage configuration for the 'flowMapping' state type
  flowMapping:
    # -- persistent storage type
    type: Database
    # -- name of the persistent storage to use. When using 'Database' as the type, an element with the given id should exist under the databases section
    storageId: "default"
    # -- name of the partition to use. When using 'Database' as the type, the 'partition' represents the name of the database schema
    partition: "sm_flow_mapping"
  # Persistent storage configuration for the 'flowStatus' state type
  flowStatus:
    # -- persistent storage type
    type: Database
    # -- name of the persistent storage to use. When using 'Database' as the type, an element with the given id should exist under the databases section
    storageId: "default"
    # -- name of the partition to use. When using 'Database' as the type, the 'partition' represents the name of the database schema
    partition: "sm_flow_status"
  # Persistent storage configuration for the 'keyRotation' state type
  keyRotation:
    # -- persistent storage type
    type: Database
    # -- name of the persistent storage to use. When using 'Database' as the type, an element with the given id should exist under the databases section
    storageId: "default"
    # -- name of the partition to use. When using 'Database' as the type, the 'partition' represents the name of the database schema
    partition: "sm_key_rotation"
  # Persistent storage configuration for the 'p2pSession' state type
  p2pSession:
    # -- persistent storage type
    type: Database
    # -- name of the persistent storage to use. When using 'Database' as the type, an element with the given id should exist under the databases section
    storageId: "default"
    # -- name of the partition to use. When using 'Database' as the type, the 'partition' represents the name of the database schema
    partition: "sm_p2p_session"
  # Persistent storage configuration for the 'tokenPoolCache' state type
  tokenPoolCache:
    # -- persistent storage type
    type: Database
    # -- name of the persistent storage to use. When using 'Database' as the type, an element with the given id should exist under the databases section
    storageId: "default"
    # -- name of the partition to use. When using 'Database' as the type, the 'partition' represents the name of the database schema
    partition: "sm_token_pool_cache"

# Configuration for cluster bootstrap
bootstrap:
  # Configuration for the pre-installation check
  preinstallCheck:
    # -- indicates whether the preinstall check is enabled
    enabled: true
    # Configuration for a service account for the preinstall check
    serviceAccount:
      # -- indicates whether the service account should be created
      create: true
      # -- name of the service account, if not set and create is true, a name is generated from a template
      name: ""

  # Configuration for the REST API admin to be created during cluster bootstrap
  restApiAdmin:
    # the username configuration for the REST API admin to be created during cluster bootstrap
    username:
      # -- the username for the REST API admin to be created during cluster bootstrap
      value: "admin"
      # the username secret configuration for the REST API admin to be created during cluster bootstrap; used in preference to value if name is set
      valueFrom:
        # the username secret key reference for the REST API admin to be created during cluster bootstrap
        secretKeyRef:
          # -- the name of the secret containing the username for the REST API admin to be created during cluster bootstrap
          name: ""
          # -- the key for the field in the secret containing the username for the REST API admin to be created during cluster bootstrap
          key: ""
    # the password configuration for the REST API admin to be created during cluster bootstrap
    password:
      # -- the password for the REST API admin to be created during cluster bootstrap; generated if not specified
      value: ""
      # the password secret configuration for the REST API admin to be created during cluster bootstrap
      valueFrom:
        # the password secret key reference for the REST API admin to be created during cluster bootstrap
        secretKeyRef:
          # -- the name of the secret containing the password for the REST API admin created during cluster bootstrap
          name: ""
          # -- the key for the field in the secret containing the password for the REST API admin created during cluster bootstrap
          key: ""

  # Configuration for database bootstrap
  db:
    # -- Indicates whether DB bootstrap is enabled as part of installation
    enabled: true

    # Image containing DB client, used to set up the DB
    clientImage:
      # -- registry for image containing a db client, used to set up the db
      registry: ""
      # -- repository for image containing a db client, used to set up the db
      repository: postgres
      # -- tag for image containing a db client, used to set up the db
      tag: "14.4"

    # Administrator credentials per database to use when creating required runtime permissions
    databases:
      - id: default
        # The bootstrap default database user configuration
        username:
          # -- the bootstrap default database user
          value: ""
          # The bootstrap default database user secret configuration; used in preference to value if name is set
          valueFrom:
            # The bootstrap default database user secret key reference
            secretKeyRef:
              # -- the bootstrap default database user secret name
              name: ""
              # -- the bootstrap default database user secret key
              key: ""
        # The bootstrap default database password configuration
        password:
          # -- the bootstrap default database password
          value: ""
          # The bootstrap default database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The bootstrap default database password secret key reference
            secretKeyRef:
              # -- the bootstrap default database password secret name
              name: ""
              # -- the bootstrap default database password secret key
              key: ""

    # Bootstrap cluster database configuration
    cluster:
      # the bootstrap cluster database password configuration
      password:
        # -- the bootstrap cluster database password
        value: ""
        # the bootstrap cluster database password secret configuration; used in preference to value if name is set
        valueFrom:
          # the bootstrap cluster database password secret key reference
          secretKeyRef:
            # -- the bootstrap cluster database password secret name
            name: ""
            # -- the bootstrap cluster database password secret key
            key: ""
      # the bootstrap cluster database user configuration
      username:
        # -- the bootstrap cluster database user
        value: ""
        # the bootstrap cluster database user secret configuration; used in preference to value if name is set
        valueFrom:
          # the bootstrap cluster database user secret key reference
          secretKeyRef:
            # -- the bootstrap cluster database user secret name
            name: ""
            # -- the bootstrap cluster database user secret key
            key: ""

    # crypto configuration
    crypto:
      # -- the schema in which the cluster database crypto entities will be stored
      schema: CRYPTO
      # JDBC connection pool configuration for crypto DB
      dbConnectionPool:
        # -- maximum JDBC connection pool size for crypto DB
        maxSize: 5
        # -- minimum JDBC connection pool size for crypto DB; null value means pool's min size will default to pool's max size value
        minSize: null
        # -- maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool
        idleTimeoutSeconds: 120
        # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
        maxLifetimeSeconds: 1800
        # -- interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled
        keepaliveTimeSeconds: 0
        # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
        validationTimeoutSeconds: 5
      # the username configuration
      username:
        # -- the username, defaults to a value randomly-generated on install
        value: "crypto_user"
        # the username secret configuration; used in preference to value if name is set
        valueFrom:
          # the username secret key reference
          secretKeyRef:
            # -- the username secret name
            name: ""
            # -- the username secret key
            key: ""
      # password configuration
      password:
        # -- the password, defaults to a value randomly-generated on install
        value: ""
        # the password secret configuration
        valueFrom:
          # the password secret key reference
          secretKeyRef:
            # -- the password secret name
            name: ""
            # -- the password secret key
            key: ""

    # RBAC configuration
    rbac:
      # -- the schema in which the cluster database rbac entities will be stored
      schema: RBAC
      # JDBC connection pool configuration for RBAC DB
      dbConnectionPool:
        # -- maximum JDBC connection pool size for RBAC DB
        maxSize: 5
        # -- minimum JDBC connection pool size for RBAC DB; null value means pool's min size will default to pool's max size value
        minSize: null
        # -- maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool
        idleTimeoutSeconds: 120
        # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
        maxLifetimeSeconds: 1800
        # -- interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled
        keepaliveTimeSeconds: 0
        # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
        validationTimeoutSeconds: 5
      # the username configuration
      username:
        # -- the username, defaults to a value randomly-generated on install
        value: "rbac_user"
        # the username secret configuration; used in preference to value if name is set
        valueFrom:
          # the username secret key reference
          secretKeyRef:
            # -- the username secret name
            name: ""
            # -- the username secret key
            key: ""
      # password configuration
      password:
        # -- the password, defaults to a value randomly-generated on install
        value: ""
        # the password secret configuration
        valueFrom:
          # the password secret key reference
          secretKeyRef:
            # -- the password secret name
            name: ""
            # -- the password secret key
            key: ""

  # Configuration for RBAC roles bootstrap
  rbac:
    # -- Indicates whether RBAC roles bootstrapping is enabled as part of installation
    enabled: true

  # Configuration for Kafka bootstrap
  kafka:
    # -- Indicates whether Kafka bootstrap is enabled as part of installation
    enabled: true
    # -- Kafka topic partitions
    partitions: 10
    # -- Kafka topic replicas
    replicas: 3
    # -- Maximum time, in seconds, to wait for Kafka topic creation operation to finish (might vary depending on the amount of partitions and replicas configured)
    timeoutSeconds: 60
    # if kafka.sasl.enabled, the credentials to connect to Kafka with for bootstrap
    sasl:
      # bootstrap SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
      username:
        # -- the bootstrap SASL username for client connection to Kafka
        value: ""
        # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
        valueFrom:
          # the bootstrap SASL username secret key reference for client connection to Kafka
          secretKeyRef:
            # -- the bootstrap SASL username secret name for client connection to Kafka
            name: ""
            # -- the bootstrap SASL username secret key for client connection to Kafka
            key: ""
      # bootstrap SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
      password:
        # -- the bootstrap SASL password for client connection to Kafka
        value: ""
        # the bootstrap SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
        valueFrom:
          # the bootstrap SASL password secret key reference for client connection to Kafka
          secretKeyRef:
            # -- the bootstrap SASL password secret name for client connection to Kafka
            name: ""
            # -- the bootstrap SASL password secret key for client connection to Kafka
            key: ""

  # Configuration for CLI image used for bootstrap
  image:
    # -- CLI image registry; defaults to image.registry
    registry: ""
    # -- CLI image repository
    repository: "corda-os-plugins"
    # -- CLI default tag; defaults to image.tag
    tag: ""

  # resource limits and requests configuration for the bootstrap containers
  resources:
    # -- the CPU/memory resource requests for the bootstrap containers
    requests: { }
    # -- the CPU/memory resource limits for the bootstrap containers
    limits: { }

  # node selector for the bootstrap containers
  nodeSelector: { }

  # service account for the bootstrap containers
  serviceAccount:
    name: ""

  # extra labels to add to all pods created by bootstrap jobs
  commonPodLabels: { }
# config service configuration
config:
  # the configuration for encryption of configuration
  encryption:
    # the salt configuration for encryption of configuration
    salt:
      # -- the salt for encryption of configuration, defaults to a value randomly-generated on install
      value: ""
      # the salt secret configuration; if name is specified, used in preference to config.encryption.salt.value
      valueFrom:
        # the salt secret key reference
        secretKeyRef:
          # -- the name of the secret containing the salt for encryption of configuration; if specified, used in preference to config.encryption.salt.value
          name: ""
          # -- the key in the secret containing the salt for encryption of configuration
          key: ""
    # the passphrase configuration for encryption of configuration
    passphrase:
      # -- the passphrase for encryption of configuration, defaults to a value randomly-generated on install
      value: ""
      # the passphrase secret configuration; if name is specified, used in preference to config.encryption.passphrase.value
      valueFrom:
        # the passphrase secret key reference
        secretKeyRef:
          # -- the name of the secret containing the passphrase for encryption of configuration; if specified, used in preference to config.encryption.passphrase.value
          name: ""
          # -- the key in the secret containing the passphrase for encryption of configuration
          key: ""

# worker configuration
workers:
  # crypto worker configuration
  crypto:
    # crypto worker image configuration
    image:
      # -- crypto worker image registry, defaults to image.registry
      registry: ""
      # -- crypto worker image repository
      repository: "corda-os-crypto-worker"
      # -- crypto worker image tag, defaults to image.tag
      tag: ""
    # -- crypto worker replica count
    replicaCount: 1
    # -- crypto worker extra annotations
    annotations: {}
    # -- additional Java options for the crypto worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # crypto worker debug configuration
    debug:
      # -- run crypto worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the crypto worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run crypto worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the crypto worker containers
    resources:
      # -- the CPU/memory resource requests for the crypto worker containers
      requests: {}
      # -- the CPU/memory resource limits for the crypto worker containers
      limits: {}
    # crypto worker JDBC connection pool configuration for cluster DB
    clusterDbConnectionPool:
      # -- crypto worker maximum JDBC connection pool size for cluster DB
      maxSize: 5
      # -- crypto worker minimum JDBC connection pool size for cluster DB; null value means pool's min size will default to pool's max size value
      minSize: null
      # -- maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool
      idleTimeoutSeconds: 120
      # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
      maxLifetimeSeconds: 1800
      # -- interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled
      keepaliveTimeSeconds: 0
      # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
      validationTimeoutSeconds: 5
    # crypto worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the crypto worker
      sasl:
        # crypto worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the crypto worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the crypto worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the crypto worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the crypto worker SASL username secret key for client connection to Kafka
              key: ""
        # crypto worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the crypto worker SASL password for client connection to Kafka
          value: ""
          # the crypto worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the crypto worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the crypto worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the crypto worker SASL password secret key for client connection to Kafka
              key: ""
    stateManager:
      # Runtime configuration settings for the State Manager used to interact with 'KeyRotation' states
      keyRotation:
        # -- persistent storage type
        type: Database
        # Database user, empty values instructs the chart to use the default settings configured for the associated persistent storage
        username:
          # -- the State Manager database user
          value: "key_rotation_writer"
          # The State Manager database username secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Database password, empty values instructs the chart to use the default settings configured for the associated persistent storage
        password:
          # -- the State Manager database user
          value: ""
          # The State Manager database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Connection pool configuration for the State Manager
        connectionPool:
          # -- maximum connection pool size
          maxSize: 5
          # -- minimum connection pool size; null value means pool's min size will default to pool's max size value
          minSize: null
          # -- maximum time (in seconds) a connection can stay idle in the pool; a value of 0 means that idle connections are never removed from the pool
          idleTimeoutSeconds: 120
          # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; if a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
          maxLifetimeSeconds: 1800
          # -- interval time (in seconds) in which connections will be tested for aliveness; connections which are no longer alive are removed from the pool; a value of 0 means this check is disabled
          keepAliveTimeSeconds: 0
          # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
          validationTimeoutSeconds: 5

  # DB worker configuration
  db:
    # DB worker image configuration
    image:
      # -- DB worker image registry, defaults to image.registry
      registry: ""
      # -- DB worker image repository
      repository: "corda-os-db-worker"
      # -- DB worker image tag, defaults to image.tag
      tag: ""
    # -- DB worker replica count
    replicaCount: 1
    # -- DB worker extra annotations
    annotations: {}
    # -- additional Java options for the DB worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # DB worker debug configuration
    debug:
      # -- run DB worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the DB worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run DB worker with profiling enabled
      enabled: false

    # resource limits and requests configuration for the DB worker containers.
    resources:
      # -- the CPU/memory resource requests for the DB worker containers
      requests: {}
      # -- the CPU/memory resource limits for the DB worker containers
      limits: {}
    # DB worker JDBC connection pool configuration for cluster DB
    clusterDbConnectionPool:
      # -- DB worker maximum JDBC connection pool size for cluster DB
      maxSize: 5
      # -- DB worker minimum JDBC connection pool size for cluster DB; null value means pool's min size will default to pool's max size value
      minSize: null
      # -- maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool
      idleTimeoutSeconds: 120
      # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
      maxLifetimeSeconds: 1800
      # -- interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled
      keepaliveTimeSeconds: 0
      # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
      validationTimeoutSeconds: 5
    # DB worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the DB worker
      sasl:
        # DB worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the DB worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the DB worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the DB worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the DB worker SASL username secret key for client connection to Kafka
              key: ""
        # DB worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the DB worker SASL password for client connection to Kafka
          value: ""
          # the DB worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the DB worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the DB worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the DB worker SASL password secret key for client connection to Kafka
              key: ""

  # flow worker configuration
  flow:
    # flow worker image configuration
    image:
      # -- flow worker image registry, defaults to image.registry
      registry: ""
      # -- flow worker image repository
      repository: "corda-os-flow-worker"
      # -- flow worker image tag, defaults to image.tag
      tag: ""
    # -- flow worker replica count
    replicaCount: 1
    # -- flow worker extra annotations
    annotations: {}
    # -- additional Java options for the flow worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # flow worker debug configuration
    debug:
      # -- run flow worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the flow worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run flow worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the flow worker containers.
    resources:
      # -- the CPU/memory resource requests for the flow worker containers
      requests: {}
      # -- the CPU/memory resource limits for the flow worker containers
      limits: {}
    # -- run flow worker with Quasar's verifyInstrumentation enabled
    verifyInstrumentation: false
    # Flow Worker State Manager configuration
    stateManager:
      # Runtime configuration settings for the State Manager used to interact with 'flowCheckpoint' states
      flowCheckpoint:
        # -- persistent storage type
        type: Database
        # Database user, 'null' value instructs the chart to use the default settings configured for the associated persistent storage
        username:
          # -- the State Manager database user
          value: "flow_checkpoint"
          # The State Manager database username secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Database password, empty values instructs the chart to use the default settings configured for the associated persistent storage
        password:
          # -- the State Manager database user
          value: ""
          # The State Manager database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Connection pool configuration for the State Manager
        connectionPool:
          # -- maximum connection pool size
          maxSize: 5
          # -- minimum connection pool size; null value means pool's min size will default to pool's max size value
          minSize: null
          # -- maximum time (in seconds) a connection can stay idle in the pool; a value of 0 means that idle connections are never removed from the pool
          idleTimeoutSeconds: 120
          # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; if a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
          maxLifetimeSeconds: 1800
          # -- interval time (in seconds) in which connections will be tested for aliveness; connections which are no longer alive are removed from the pool; a value of 0 means this check is disabled
          keepAliveTimeSeconds: 0
          # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
          validationTimeoutSeconds: 5
    # flow worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the flow worker
      sasl:
        # flow worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the flow worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the flow worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the flow worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the flow worker SASL username secret key for client connection to Kafka
              key: ""
        # flow worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the flow worker SASL password for client connection to Kafka
          value: ""
          # the flow worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the flow worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the flow worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the flow worker SASL password secret key for client connection to Kafka
              key: ""

  # flow mapper worker configuration
  flowMapper:
    # flow mapper worker image configuration
    image:
      # -- flow mapper worker image registry, defaults to image.registry
      registry: ""
      # -- flow mapper worker image repository
      repository: "corda-os-flow-mapper-worker"
      # -- flow mapper worker image tag, defaults to image.tag
      tag: ""
    # -- flow mapper worker replica count
    replicaCount: 1
    # -- flow mapper worker extra annotations
    annotations: { }
    # -- additional Java options for the flow mapper worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # flow mapper worker debug configuration
    debug:
      # -- run flow mapper worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the flow mapper worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run flow mapper worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the flow mapper worker containers.
    resources:
      # -- the CPU/memory resource requests for the flow mapper worker containers
      requests: { }
      # -- the CPU/memory resource limits for the flow mapper worker containers
      limits: { }
    # -- run flow mapper worker with Quasar's verifyInstrumentation enabled
    verifyInstrumentation: false
    # Flow Mapper Worker State Manager configuration
    stateManager:
      # Runtime configuration settings for the State Manager used to interact with 'flowMapping' states
      flowMapping:
        # -- persistent storage type
        type: Database
        # Database user, 'null' value instructs the chart to use the default settings configured for the associated persistent storage
        username:
          # -- the State Manager database user
          value: "flow_mapper"
          # The State Manager database username secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Database password, empty values instructs the chart to use the default settings configured for the associated persistent storage
        password:
          # -- the State Manager database user
          value: ""
          # The State Manager database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Connection pool configuration for the State Manager
        connectionPool:
          # -- maximum connection pool size
          maxSize: 5
          # -- minimum connection pool size; null value means pool's min size will default to pool's max size value
          minSize: null
          # -- maximum time (in seconds) a connection can stay idle in the pool; a value of 0 means that idle connections are never removed from the pool
          idleTimeoutSeconds: 120
          # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; if a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
          maxLifetimeSeconds: 1800
          # -- interval time (in seconds) in which connections will be tested for aliveness; connections which are no longer alive are removed from the pool; a value of 0 means this check is disabled
          keepAliveTimeSeconds: 0
          # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
          validationTimeoutSeconds: 5
    # flow mapper worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the flow mapper worker
      sasl:
        # flow mapper worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the flow mapper worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the flow mapper worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the flow mapper worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the flow mapper worker SASL username secret key for client connection to Kafka
              key: ""
        # flow mapper worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the flow mapper worker SASL password for client connection to Kafka
          value: ""
          # the flow mapper worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the flow mapper worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the flow mapper worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the flow mapper worker SASL password secret key for client connection to Kafka
              key: ""

  # verification worker configuration
  verification:
    # verification worker image configuration
    image:
      # -- verification worker image registry, defaults to image.registry
      registry: ""
      # -- verification worker image repository
      repository: "corda-os-verification-worker"
      # -- verification worker image tag, defaults to image.tag
      tag: ""
    # -- verification worker replica count
    replicaCount: 1
    # -- verification worker extra annotations
    annotations: { }
    # -- additional Java options for the verification worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # verification worker debug configuration
    debug:
      # -- run verification worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the verification worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run verification worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the verification worker containers.
    resources:
      # -- the CPU/memory resource requests for the verification worker containers
      requests: { }
      # -- the CPU/memory resource limits for the verification worker containers
      limits: { }
    # -- run verification worker with Quasar's verifyInstrumentation enabled
    verifyInstrumentation: false
    # verification worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the verification worker
      sasl:
        # verification worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the verification worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the verification worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the verification worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the verification worker SASL username secret key for client connection to Kafka
              key: ""
        # verification worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the verification worker SASL password for client connection to Kafka
          value: ""
          # the verification worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the verification worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the verification worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the verification worker SASL password secret key for client connection to Kafka
              key: ""

  # membership worker configuration
  membership:
    # membership worker image configuration
    image:
      # -- membership worker image registry, defaults to image.registry
      registry: ""
      # -- membership worker image repository
      repository: "corda-os-member-worker"
      # -- membership worker image tag, defaults to image.tag
      tag: ""
    # -- membership worker replica count
    replicaCount: 1
    # -- membership worker extra annotations
    annotations: {}
    # -- additional Java options for the membership worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # membership worker debug configuration
    debug:
      # -- run membership worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the membership worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run membership worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the membership worker containers
    resources:
      # -- the CPU/memory resource requests for the membership worker containers
      requests: {}
      # -- the CPU/memory resource limits for the membership worker containers
      limits: {}
    # membership worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the membership worker
      sasl:
        # membership worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the membership worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the membership worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the membership worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the membership worker SASL username secret key for client connection to Kafka
              key: ""
        # membership worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the membership worker SASL password for client connection to Kafka
          value: ""
          # the membership worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the membership worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the membership worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the membership worker SASL password secret key for client connection to Kafka
              key: ""

  # REST worker configuration
  rest:
    # REST worker image configuration
    image:
      # -- REST worker image registry, defaults to image.registry
      registry: ""
      # -- REST worker image repository
      repository: "corda-os-rest-worker"
      # -- REST worker image tag, defaults to image.tag
      tag: ""
    # -- REST worker replica count
    replicaCount: 1
    # -- REST worker extra annotations
    annotations: {}
    # -- additional Java options for the rest worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # REST worker debug configuration
    debug:
      # -- run REST worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the REST worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run REST worker with profiling enabled
      enabled: false
    # -- resource limits and requests configuration for the REST worker containers.
    resources:
      # -- the CPU/memory resource requests for the REST worker containers
      requests: {}
      # -- the CPU/memory resource limits for the REST worker containers
      limits: {}
    # REST worker service configuration
    service:
      # -- the type for the REST worker service
      type: ClusterIP
      # -- the HTTP port for the REST worker service
      port: 443
      # -- the traffic policy for the REST worker service
      externalTrafficPolicy: ""
      # -- the LoadBalancer source ranges to limit access to the REST worker service
      loadBalancerSourceRanges: []
      # -- the annotations for REST worker service
      annotations: {}
    # REST worker ingress configuration
    ingress:
      # -- the annotations for the REST worker ingress
      annotations: {}
      # -- the className for the REST worker ingress
      className: ""
      # -- the hosts for the REST worker ingress
      hosts: []
    # REST worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the REST worker
      sasl:
        # REST worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the REST worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the REST worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the REST worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the REST worker SASL username secret key for client connection to Kafka
              key: ""
        # REST worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the REST worker SASL password for client connection to Kafka
          value: ""
          # the REST worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the REST worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the REST worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the REST worker SASL password secret key for client connection to Kafka
              key: ""
    stateManager:
      # Runtime configuration settings for the State Manager used to interact with 'keyRotation' states
      keyRotation:
        # -- persistent storage type
        type: Database
        # Database user, 'null' value instructs the chart to use the default settings configured for the associated persistent storage
        username:
          # -- the State Manager database user
          value: "key_rotation_reader"
          # The State Manager database username secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Database password, empty values instructs the chart to use the default settings configured for the associated persistent storage
        password:
          # -- the State Manager database user
          value: ""
          # The State Manager database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Connection pool configuration for the State Manager
        connectionPool:
          # -- maximum connection pool size
          maxSize: 5
          # -- minimum connection pool size; null value means pool's min size will default to pool's max size value
          minSize: null
          # -- maximum time (in seconds) a connection can stay idle in the pool; a value of 0 means that idle connections are never removed from the pool
          idleTimeoutSeconds: 120
          # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; if a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
          maxLifetimeSeconds: 1800
          # -- interval time (in seconds) in which connections will be tested for aliveness; connections which are no longer alive are removed from the pool; a value of 0 means this check is disabled
          keepAliveTimeSeconds: 0
          # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
          validationTimeoutSeconds: 5
      # Runtime configuration settings for the State Manager used to interact with 'flowStatus' states
      flowStatus:
        # -- persistent storage type
        type: Database
        # Database user, 'null' value instructs the chart to use the default settings configured for the associated persistent storage
        username:
          # -- the State Manager database user
          value: "flow_status"
          # The State Manager database username secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Database password, empty values instructs the chart to use the default settings configured for the associated persistent storage
        password:
          # -- the State Manager database user
          value: ""
          # The State Manager database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Connection pool configuration for the State Manager
        connectionPool:
          # -- maximum connection pool size
          maxSize: 5
          # -- minimum connection pool size; null value means pool's min size will default to pool's max size value
          minSize: null
          # -- maximum time (in seconds) a connection can stay idle in the pool; a value of 0 means that idle connections are never removed from the pool
          idleTimeoutSeconds: 120
          # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; if a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
          maxLifetimeSeconds: 1800
          # -- interval time (in seconds) in which connections will be tested for aliveness; connections which are no longer alive are removed from the pool; a value of 0 means this check is disabled
          keepAliveTimeSeconds: 0
          # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
          validationTimeoutSeconds: 5
    # REST Worker TLS configuration
    tls:
      # -- the name of the Kubernetes secret containing the certificate, private key and CA certificate; if not specified, a new secret will be created and certificates/keys generated
      secretName: ""
      # Optional parameters to be used during TLS certificate generation.
      generation:
        # -- Alternative names to be included in a certificate when generated.
        altNames: []
      # TLS Certificate configuration
      crt:
        # -- the TLS Certificate secret key
        secretKey: "tls.crt"
      # TLS Certificate private key configuration
      key:
        # -- the TLS Certificate private key secret key
        secretKey: "tls.key"
      # Certification Authority(CA) certificates chain configuration
      ca:
        # -- the CA certificates chain secret key
        secretKey: "ca.crt"

  # P2P link manager worker configuration
  p2pLinkManager:
    # P2P link manager worker image configuration
    image:
      # -- P2P link manager worker image registry, defaults to image.registry
      registry: ""
      # -- P2P link manager worker image repository
      repository: "corda-os-p2p-link-manager-worker"
      # -- P2P link manager worker image tag, defaults to image.tag
      tag: ""
    # -- P2P link manager worker replica count
    replicaCount: 1
    # -- P2P link manager worker extra annotations
    annotations: {}
    # -- additional Java options for the P2P link manager worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # p2p-link-manager worker debug configuration
    debug:
      # -- run P2P link manager worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the P2P link manager worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run P2P link manager worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the P2P link manager worker containers.
    resources:
      # -- the CPU/memory resource requests for the P2P link manager worker containers
      requests: {}
      # -- the CPU/memory resource limits for the P2P link manager worker containers
      limits: {}
    stateManager:
      # Runtime configuration settings for the State Manager used to interact with 'p2pSession' states
      p2pSession:
        # -- persistent storage type
        type: Database
        # Database user, 'null' value instructs the chart to use the default settings configured for the associated persistent storage
        username:
          # -- the State Manager database user
          value: "p2p_session"
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Database password, empty values instructs the chart to use the default settings configured for the associated persistent storage
        password:
          # -- the State Manager database user
          value: ""
          # The State Manager database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Connection pool configuration for the State Manager
        connectionPool:
          # -- maximum connection pool size
          maxSize: 5
          # -- minimum connection pool size; null value means pool's min size will default to pool's max size value
          minSize: null
          # -- maximum time (in seconds) a connection can stay idle in the pool; a value of 0 means that idle connections are never removed from the pool
          idleTimeoutSeconds: 120
          # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; if a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
          maxLifetimeSeconds: 1800
          # -- interval time (in seconds) in which connections will be tested for aliveness; connections which are no longer alive are removed from the pool; a value of 0 means this check is disabled
          keepAliveTimeSeconds: 0
          # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
          validationTimeoutSeconds: 5
    # P2P link manager worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the P2P link manager worker
      sasl:
        # P2P link manager worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the P2P link manager worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the P2P link manager worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the P2P link manager worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the P2P link manager worker SASL username secret key for client connection to Kafka
              key: ""
        # P2P link manager worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the P2P link manager worker SASL password for client connection to Kafka
          value: ""
          # the P2P link manager worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the P2P link manager worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the P2P link manager worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the P2P link manager worker SASL password secret key for client connection to Kafka
              key: ""

  # P2P gateway worker configuration
  p2pGateway:
    # P2P gateway worker image configuration
    image:
      # -- P2P gateway worker image registry, defaults to image.registry
      registry: ""
      # -- P2P gateway worker image repository
      repository: "corda-os-p2p-gateway-worker"
      # -- p2p-gateway worker image tag, defaults to image.tag
      tag: ""
    # -- P2P gateway worker replica count
    replicaCount: 1
    # -- P2P gateway worker extra annotations
    annotations: {}
    # -- additional Java options for the P2P gateway worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # p2p-gateway worker debug configuration
    debug:
      # -- run P2P gateway worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the P2P gateway worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run P2P gateway worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the P2P gateway worker containers.
    resources:
      # -- the CPU/memory resource requests for the P2P gateway worker containers
      requests: {}
      # -- the CPU/memory resource limits for the P2P gateway worker containers
      limits: {}
    # P2P gateway worker service configuration
    service:
      # -- The P2P gateway HTTP port
      port: 8080
    # P2P gateway worker ingress configuration
    ingress:
      # -- the annotations for the P2P gateway worker ingress
      annotations: {}
      # -- the className for the P2P gateway worker ingress
      className: ""
      # -- the hosts for the P2P gateway worker ingress
      hosts: []
    # P2P gateway worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the P2P gateway worker
      sasl:
        # P2P gateway worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the P2P gateway worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the P2P gateway worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the P2P gateway worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the P2P gateway worker SASL username secret key for client connection to Kafka
              key: ""
        # P2P gateway worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the P2P gateway worker SASL password for client connection to Kafka
          value: ""
          # the P2P gateway worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the P2P gateway worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the P2P gateway worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the P2P gateway worker SASL password secret key for client connection to Kafka
              key: ""

  # persistence worker configuration
  persistence:
    # persistence worker image configuration
    image:
      # -- persistence worker image registry, defaults to image.registry
      registry: ""
      # -- persistence worker image repository
      repository: "corda-os-persistence-worker"
      # -- persistence worker image tag, defaults to image.tag
      tag: ""
    # -- persistence worker replica count
    replicaCount: 1
    # -- persistence worker extra annotations
    annotations: { }
    # -- additional Java options for the persistence worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # persistence worker debug configuration
    debug:
      # -- run persistence worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the persistence worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run persistence worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the persistence worker containers.
    resources:
      # -- the CPU/memory resource requests for the persistence worker containers
      requests: { }
      # -- the CPU/memory resource limits for the persistence worker containers
      limits: { }
    # persistence worker JDBC connection pool configuration for cluster DB
    clusterDbConnectionPool:
      # -- persistence worker maximum JDBC connection pool size for cluster DB
      maxSize: 5
      # -- persistence worker minimum JDBC connection pool size for cluster DB; null value means pool's min size will default to pool's max size value
      minSize: null
      # -- maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool
      idleTimeoutSeconds: 120
      # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
      maxLifetimeSeconds: 1800
      # -- interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled
      keepaliveTimeSeconds: 0
      # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
      validationTimeoutSeconds: 5
    # persistence worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the persistence worker
      sasl:
        # persistence worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the persistence worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the persistence worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the persistence worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the persistence worker SASL username secret key for client connection to Kafka
              key: ""
        # persistence worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the persistence worker SASL password for client connection to Kafka
          value: ""
          # the persistence worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the persistence worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the persistence worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the persistence worker SASL password secret key for client connection to Kafka
              key: ""

  # token selection worker configuration
  tokenSelection:
    # token selection worker image configuration
    image:
      # -- token selection worker image registry, defaults to image.registry
      registry: ""
      # -- token selection worker image repository
      repository: "corda-os-token-selection-worker"
      # -- token selection worker image tag, defaults to image.tag
      tag: ""
    # -- token selection worker replica count
    replicaCount: 1
    # -- token selection worker extra annotations
    annotations: { }
    # -- token selection Java options for the persistence worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # token selection worker debug configuration
    debug:
      # -- run token selection worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the token selection worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run token selection worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the token selection worker containers.
    resources:
      # -- the CPU/memory resource requests for the token selection worker containers
      requests: { }
      # -- the CPU/memory resource limits for the token selection worker containers
      limits: { }
    # token selection worker JDBC connection pool configuration for cluster DB
    clusterDbConnectionPool:
      # -- token selection worker maximum JDBC connection pool size for cluster DB
      maxSize: 5
      # -- token selection worker minimum JDBC connection pool size for cluster DB; null value means pool's min size will default to pool's max size value
      minSize: null
      # -- maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool
      idleTimeoutSeconds: 120
      # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
      maxLifetimeSeconds: 1800
      # -- interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled
      keepaliveTimeSeconds: 0
      # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
      validationTimeoutSeconds: 5
    stateManager:
      # Runtime configuration settings for the State Manager used to interact with 'tokenPoolCache' states
      tokenPoolCache:
        # -- persistent storage type
        type: Database
        # Database user, 'null' value instructs the chart to use the default settings configured for the associated persistent storage
        username:
          # -- the State Manager database user
          value: "token_pool_cache"
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Database password, empty values instructs the chart to use the default settings configured for the associated persistent storage
        password:
          # -- the State Manager database user
          value: ""
          # The State Manager database password secret configuration; used in preference to value if name is set
          valueFrom:
            # The State Manager database password secret key reference
            secretKeyRef:
              # -- the State Manager database password secret name
              name: ""
              # -- the State Manager database password secret key
              key: ""
        # Connection pool configuration for the State Manager
        connectionPool:
          # -- maximum connection pool size
          maxSize: 5
          # -- minimum connection pool size; null value means pool's min size will default to pool's max size value
          minSize: null
          # -- maximum time (in seconds) a connection can stay idle in the pool; a value of 0 means that idle connections are never removed from the pool
          idleTimeoutSeconds: 120
          # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; if a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
          maxLifetimeSeconds: 1800
          # -- interval time (in seconds) in which connections will be tested for aliveness; connections which are no longer alive are removed from the pool; a value of 0 means this check is disabled
          keepAliveTimeSeconds: 0
          # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
          validationTimeoutSeconds: 5
    # token selection worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the token selection worker
      sasl:
        # token selection worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the token selection worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the token selection worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the token selection worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the token selection worker SASL username secret key for client connection to Kafka
              key: ""
        # token selection worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the token selection worker SASL password for client connection to Kafka
          value: ""
          # the token selection worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the token selection worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the token selection worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the token selection worker SASL password secret key for client connection to Kafka
              key: ""
    # token selection sharding configuration
    sharding:
      # -- enable sharding of token selection requests
      enabled: false
      # token selection sharding image configuration
      image:
        # -- token selection sharding image registry
        registry: "registry.k8s.io"
        # -- token selection sharding image repository
        repository: "ingress-nginx/controller"
        # -- token selection sharding image tag
        tag: "v1.9.3@sha256:8fd21d59428507671ce0fb47f818b1d859c92d2ad07bb7c947268d433030ba98"
      # -- token selection replica count
      replicaCount: 2

  # uniqueness worker configuration
  uniqueness:
    # uniqueness worker image configuration
    image:
      # -- uniqueness worker image registry, defaults to image.registry
      registry: ""
      # -- uniqueness worker image repository
      repository: "corda-os-uniqueness-worker"
      # -- uniqueness worker image tag, defaults to image.tag
      tag: ""
    # -- uniqueness worker replica count
    replicaCount: 1
    # -- uniqueness worker extra annotations
    annotations: {}
    # -- additional Java options for the uniqueness worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # uniqueness worker debug configuration
    debug:
      # -- run uniqueness worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the uniqueness worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
      # -- additional Log4j 2 XML configuration
      override: ""
    profiling:
      # -- run uniqueness worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the uniqueness worker containers.
    resources:
      # -- the CPU/memory resource requests for the uniqueness worker containers
      requests: {}
      # -- the CPU/memory resource limits for the uniqueness worker containers
      limits: {}
    # uniqueness worker JDBC connection pool configuration for cluster DB
    clusterDbConnectionPool:
      # -- uniqueness worker maximum JDBC connection pool size for cluster DB
      maxSize: 5
      # -- uniqueness worker minimum JDBC connection pool size for cluster DB; null value means pool's min size will default to pool's max size value
      minSize: null
      # -- maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool
      idleTimeoutSeconds: 120
      # -- maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached "maxLifetime" timeout, it will be removed from the pool only when it becomes idle
      maxLifetimeSeconds: 1800
      # -- interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled
      keepaliveTimeSeconds: 0
      # -- maximum time (in seconds) that the pool will wait for a connection to be validated as alive
      validationTimeoutSeconds: 5
    # uniqueness worker Kafka configuration
    kafka:
      # if kafka.sasl.enabled, the credentials to connect to Kafka with for the uniqueness worker
      sasl:
        # uniqueness worker SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
        username:
          # -- the uniqueness worker SASL username for client connection to Kafka
          value: ""
          # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the uniqueness worker SASL username secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the uniqueness worker SASL username secret name for client connection to Kafka
              name: ""
              # -- the uniqueness worker SASL username secret key for client connection to Kafka
              key: ""
        # uniqueness worker SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
        password:
          # -- the uniqueness worker SASL password for client connection to Kafka
          value: ""
          # the uniqueness worker SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
          valueFrom:
            # the uniqueness worker SASL password secret key reference for client connection to Kafka
            secretKeyRef:
              # -- the uniqueness worker SASL password secret name for client connection to Kafka
              name: ""
              # -- the uniqueness worker SASL password secret key for client connection to Kafka
              key: ""
