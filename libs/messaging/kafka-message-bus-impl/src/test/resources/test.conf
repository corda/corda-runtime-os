# Variables which are needed for resolution:
# group, instanceId, clientIdCounter, topic, topicPrefix

messaging {

    topic {
        prefix = "test"
        name = ${topic}
    }

    pattern {
        common {
            topic = ${messaging.topic}
        }
        publisher = ${messaging.pattern.common} {
            producer = ${messaging.kafka.producer} ${messaging.subscription.producer}
        }
        pubsub = ${messaging.pattern.common} {
            subscriptionType=pubSub
            auto.offset.reset=latest
            consumer = ${messaging.kafka.consumer} ${messaging.subscription.consumer}
        }
        compacted = ${messaging.pattern.common} {
            subscriptionType = compacted
            consumer = ${messaging.kafka.consumer} ${messaging.subscription.consumer}
        }
        durable = ${messaging.pattern.common} {
            subscriptionType = durable
            consumer = ${messaging.kafka.consumer} ${messaging.subscription.consumer}
            producer = ${messaging.kafka.producer} ${messaging.subscription.producer}
        }
        stateAndEvent = ${messaging.pattern.common} {
            subscriptionType = stateAndEvent
            stateConsumer = ${messaging.kafka.consumer} {
                topic = ${messaging.topic}.state
            }
            eventConsumer = ${messaging.kafka.consumer} ${messaging.subscription.consumer}
            producer = ${messaging.kafka.producer} ${messaging.subscription.producer}
        }
        eventLog {
            # TODO
        }
        randomAccess {
            # TODO
        }
    }

    subscription {
        consumer {
            close.timeout = 6000
            poll.timeout = 6000
            thread.stop.timeout = 6000
            processor.retries = 3
            subscribe.retries = 3
            commit.retries = 3
        }

        producer {
            close.timeout = 6000
        }
    }

    kafka {
        common {
            enable.idempotence = true
        }

        consumer = ${messaging.kafka.common} {
            group.id = ${topic}-${group}
            client.id = ${topic}-${group}-consumer-${clientIdCounter}
            bootstrap.servers = "localhost:9092"
            auto.offset.reset = earliest
            max.poll.records = 100
            max.poll.interval.ms = 100000
            session.timeout.ms = 6000
            heartbeat.interval.ms = 2000
            enable.auto.commit = false
        }

        producer = ${messaging.kafka.common} {
            client.id = ${topic}-${group}-producer-${clientIdCounter}
            transactional.id = ${group}-${messaging.topic.name}-${instanceId}
            bootstrap.servers = "localhost:9092"
            acks = all
       }
    }
}

