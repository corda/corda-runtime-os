package net.corda.messaging.api.mediator

/**
 * Multi-source event mediator's message router that routes messages generated by state and event processor to producers.
 * Example:
 *
 * ```
 * MessageRouter { message ->
 *     when (message.body) {
 *         is FlowEvent -> RoutingDestination(messageBusProducer, "flow.event.topic")
 *         else -> throw IllegalStateException("No route defined for message $message")
 *     }
 * }
 * ```
 */
fun interface MessageRouter {

    /**
     * Provides [RoutingDestination] for given [MediatorMessage].
     *
     * @param message Message.
     * @return Destination for given message.
     */
    fun getDestination(message: MediatorMessage): RoutingDestination
}
