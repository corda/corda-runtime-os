{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://corda.r3.com/net/corda/schema/configuration/boot/1.0/corda.boot.json",
  "title": "Corda Boot Configuration Schema",
  "description": "Configuration schema for the boot config. This configures stores the values the worker is bootstrapped with.",
  "type": "object",
  "properties": {
    "instanceId": {
      "description": "Unique ID for this worker.",
      "type": "integer",
      "minimum": 0
    },
    "topicPrefix": {
      "description": "Topic prefix to apply when connecting to topics.",
      "type": "string",
      "default": ""
    },
    "kafka": {
      "description": "Configuration options specific to kafka backend.",
      "properties": {
        "common": {
          "description": "Kafka properties that are common between consumers and producers, e.g. connection details, security settings.",
          "type": "object"
        }
      }
    },
    "crypto": {
      "description": "Configuration options specific to crypto worker.",
      "type": "object",
      "properties": {}
    },
    "db": {
      "description": "Configuration options related to database.",
      "properties": {
        "database": {
          "description": "Database params",
          "properties": {
            "jdbc": {
              "description": "The JDBC database info",
              "properties": {
                "url": {
                  "description": "The JDBC URL used by the db worker",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "url_messagebus": {
                  "description": "The JDBC URL for the message bus if the bus is backed by a DB",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "directory": {
                  "description": "The JDBC directory",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "user": {
              "description": "Cluster admin username to connect to the database with.",
              "type": [
                "string",
                "null"
              ]
            },
            "pass": {
              "description": "Cluster admin password to connect to the database with.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "bus": {
          "description": "Details about the bus type if it is backed by a DB",
          "properties": {
            "busType": {
              "description": "The type of DB message bus. e.g INMEMORY or DATABASE",
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    "dir": {
      "description": "Configuration for file system directories.",
      "properties": {
        "workspace": {
          "description": "Local workspace directory",
          "type": [
            "string"
          ]
        },
        "tmp": {
          "description": "Tmp directory",
          "type": [
            "string"
          ]
        },
        "pass": {
          "description": "Cluster admin password to connect to the database with.",
          "type": [
            "string"
          ]
        }
      },
      "additionalProperties": false
    },
    "maxAllowedMessageSize": {
      "description": "Maximum allowed size, in bytes, for publishing Messages. This is required for initial push of config to Kafka.",
      "type": "integer",
      "default": 972800,
      "minimum": 512000,
      "maximum": 8388608
    },
    "rest": {
      "description": "Configuration options related to REST worker.",
      "properties": {
        "tls": {
          "description": "Transport Layer Security (TLS) params",
          "properties": {
            "keystore": {
              "description": "Keystore info",
              "properties": {
                "path": {
                  "description": "Path to a Keystore file",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "password": {
                  "description": "The password for the Keystore",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "crt": {
              "description": "Certificate to use in PEM format",
              "properties": {
                "path": {
                  "description": "File path to the certificate in PEM format",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "key": {
              "description": "Private key to use in PEM format",
              "properties": {
                "path": {
                  "description": "File path to the private key in PEM format",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "ca": {
              "description": "Certification Authority Certificate chain in PEM format",
              "properties": {
                "crt": {
                  "properties": {
                    "path": {
                      "description": "File path to the Certification Authority Certificate chain in PEM format",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "stateManager": {
      "description": "Configuration options for the state manager.",
      "properties": {
        "type": {
          "description": "The type of state manager.",
          "type": [
            "string",
            "null"
          ]
        },
        "database": {
          "description": "Connection parameters when using database as the persistent storage",
          "properties": {
            "jdbc": {
              "description": "The JDBC database info",
              "properties": {
                "url": {
                  "description": "The JDBC URL to use by the state manager when using database as the persistent storage",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "directory": {
                  "description": "The JDBC directory to use by the state manager when using database as the persistent storage",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "driver": {
                  "description": "The JDBC driver to use by the state manager when using database as the persistent storage",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "additionalProperties": false
              },
              "additionalProperties": false
            },
            "user": {
              "description": "Admin username to use by the state manager when connecting to the database used as the persistent storage",
              "type": [
                "string",
                "null"
              ]
            },
            "pass": {
              "description": "Admin password to use by the state manager when connecting to the database used as the persistent storage",
              "type": [
                "string",
                "null"
              ]
            },
            "pool": {
              "description": "State Manager database pool connection properties",
              "properties": {
                "maxSize": {
                  "description": "Maximum connection pool size for State Manager DB",
                  "default": 5,
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "minSize": {
                  "description": "Minimum connection pool size for State Manager DB",
                  "default": 0,
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "idleTimeoutSeconds": {
                  "description": "Maximum time (in seconds) a connection can stay idle in the pool; A value of 0 means that idle connections are never removed from the pool",
                  "default": 120,
                  "minimum": 0,
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "maxLifetimeSeconds": {
                  "description": "Maximum time (in seconds) a connection can stay in the pool, regardless if it has been idle or has been recently used; If a connection is in-use and has reached \"maxLifetime\" timeout, it will be removed from the pool only when it becomes idle",
                  "default": 1800,
                  "minimum": 1,
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "keepAliveTimeSeconds": {
                  "description": "Interval time (in seconds) in which connections will be tested for aliveness; Connections which are no longer alive are removed from the pool; A value of 0 means this check is disabled",
                  "default": 0,
                  "minimum": 0,
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "validationTimeoutSeconds": {
                  "description": "Maximum time (in seconds) that the pool will wait for a connection to be validated as alive",
                  "minimum": 1,
                  "default": 5,
                  "type": [
                    "integer",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "worker": {
      "description": "HTTP connection information for the Corda workers",
      "properties": {
        "endpoints": {
          "description": "Internal endpoints for Corda worker load balancers",
          "properties": {
            "uniqueness": {
              "description": "Endpoint for the UniquenessWorker load balancer",
              "type": [
                "string",
                "null"
              ]
            },
            "persistence": {
              "description": "Endpoint for the PersistenceWorker load balancer",
              "type": [
                "string",
                "null"
              ]
            },
            "verification": {
              "description": "Endpoint for the VerificationWorker load balancer",
              "type": [
                "string",
                "null"
              ]
            },
            "crypto": {
              "description": "Endpoint for the CryptoWorker load balancer",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}