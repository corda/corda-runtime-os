import aQute.bnd.gradle.Bundle

plugins {
    id 'corda.common-library'
    id 'corda.osgi-test-conventions'
    id 'com.r3.internal.gradle.plugins.r3Publish'
    id 'org.jetbrains.kotlin.jvm'
}

description 'Corda Sandbox'

configurations {
    cpks {
        canBeConsumed = false
        transitive = false
    }
}

dependencies {
    compileOnly "org.osgi:org.osgi.service.cm:$osgiCmVersion"
    api 'net.corda.kotlin:kotlin-stdlib-jdk8-osgi'
    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation project(":libs:crypto:crypto-impl")
    implementation project(":libs:install")
    implementation 'net.corda:corda-packaging'
    implementation 'net.corda:corda-serialization'
    implementation 'org.slf4j:slf4j-api'

    testImplementation "org.apache.felix:org.apache.felix.framework:$felixVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"

    cpks project(path: 'sandbox-cpk-one', configuration: 'cordaCPK')
    cpks project(path: 'sandbox-cpk-two', configuration: 'cordaCPK')
    cpks project(path: 'sandbox-cpk-three', configuration: 'cordaCPK')

    integrationTestCompileOnly "org.osgi:org.osgi.service.cm:$osgiCmVersion"
    integrationTestCompileOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"
    integrationTestImplementation "net.corda:corda-application"
    integrationTestRuntimeOnly "org.apache.felix:org.apache.felix.configadmin:$felixConfigAdminVersion"
}

def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from configurations.cpks
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
