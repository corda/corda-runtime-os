plugins {
    id 'corda.common-publishing'
    id 'corda.common-library'
}

ext {
    releasable = true
}

dependencies {
    implementation "net.corda.kotlin:kotlin-stdlib-jdk8-osgi"
    implementation "net.corda:corda-application:$cordaApiVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    implementation project(':simulator:api')

    // NOTE: references to modules internal to corda-runtime-os to be reviewed
    implementation project(":libs:serialization:json-serializers")
    implementation project(":libs:db:db-admin-impl")

    implementation "org.hibernate:hibernate-core:$hibernateVersion"
    implementation "org.hsqldb:hsqldb:$hsqldbVersion"

    testImplementation "org.junit.jupiter:junit-jupiter:$junit5Version"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
}

tasks.named('jar', Jar) {
    archiveBaseName = 'corda-simulator-runtime'
}

tasks.register('javadocJar', Jar) {
    description = 'Create JavaDoc Jar from dokka docs'
    group = 'documentation'

    dependsOn(dokkaHtml)
    archiveBaseName = jar.archiveBaseName
    archiveClassifier.set("javadoc")
    from(dokkaHtml.outputDirectory)
}