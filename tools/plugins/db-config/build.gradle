plugins {
    id 'distribution'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.kapt'
    id 'corda.cli-plugin-packager'
}

ext {
    releasable = false
}

group 'net.corda.cli.deployment'

dependencies {
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compileOnly "org.pf4j:pf4j:$pf4jVersion"
    compileOnly "net.corda.cli.host:api:$pluginHostVersion"
    kapt "org.pf4j:pf4j:$pf4jVersion"
    kapt "info.picocli:picocli:$picocliVersion"

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation 'net.corda:corda-db-schema'
    implementation 'javax.persistence:javax.persistence-api'
    implementation "org.liquibase:liquibase-core:$liquibaseVersion"

    runtimeOnly "org.postgresql:postgresql:$postgresDriverVersion"

    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.pf4j:pf4j:$pf4jVersion"
    testCompileOnly "net.corda.cli.host:api:$pluginHostVersion"
}

cliPlugin {
    cliPluginClass = 'net.corda.cli.plugins.dbconfig.DatabaseBootstrapAndUpgrade'
    cliPluginDescription = 'Plugin for generating the initial database migrations.'
}

tasks.named("installDist") {
    dependsOn cliPlugin
    def homePath = System.properties['user.home']
    from cliPlugin
    into "$homePath/.corda/cli/plugins"
}