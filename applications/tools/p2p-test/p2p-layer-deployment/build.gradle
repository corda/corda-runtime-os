plugins {
    id 'corda.common-publishing'
    id 'corda.common-library'
    id 'application'
}

description "P2P Testing tools - P2P layer deployment"

configurations {
    deployments {
        canBeConsumed = false
    }
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation project(':libs:crypto:certificate-generation')
    implementation project(':libs:p2p-crypto')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "info.picocli:picocli:$picocliVersion"
    implementation "net.corda:corda-topic-schema"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
    constraints {
        implementation("org.yaml:snakeyaml:$snakeyamlVersion") {
            because 'Required until jackson-dataformat-yaml use snake yaml 1.32 internally '
        }
    }
    implementation "com.konghq:unirest-java:$unirestVersion"
    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation 'net.corda:corda-avro-schema'
    implementation 'net.corda:corda-cipher-suite'
    testImplementation "com.typesafe:config:$typeSafeConfigVersion"
    testRuntimeOnly project(':applications:tools:p2p-test:p2p-setup')
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"

    deployments project(path: ':applications:tools:p2p-test:p2p-setup', configuration: 'app')
    deployments project(path: ':applications:tools:kafka-setup', configuration: 'app')
}

application {
    mainClass = 'net.corda.p2p.deployment.GoKt'
}

def jarsDir = layout.buildDirectory.dir('jars')

def copyJars = tasks.register('copyJars', Copy) {
    from configurations.deployments
    into jarsDir

    rename "corda-(.*)-\\Q${version}\\E\\.jar", '\$1.jar'
}

sourceSets {
    main {
        resources {
            srcDirs files(jarsDir).builtBy(copyJars)
        }
    }
}

tasks.named('jacocoTestReport') {
    dependsOn tasks.named('test', Test)
    classDirectories.setFrom sourceSets.main.output.classesDirs
}
