apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "corda.fullname" . }}-create-topics
  labels: &id012
    app: create-topics
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels: *id012
    spec:
      {{- include "corda.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: run-topic-script
          image: bitnami/kafka:3.1.0-debian-10-r89
          command:
            - /bin/bash
          args: [ "/tmp/working_dir/create-topics.sh" ]
          volumeMounts:
            - mountPath: /tmp/working_dir
              name: working-volume
            {{- if and .Values.kafka.tls.enabled .Values.kafka.tls.truststore.secretRef.name }}
            - mountPath: "/certs"
              name: certs
              readOnly: true
            {{- end }}
      initContainers:
        - name: create-topic-script
          image: {{ include "corda.bootstrapImage" . }}
          args: [
            'topic',
            'create',
            '-a', '{{ include "corda.kafkaBootstrapServers" . }}',
            {{- if .Values.kafka.topicPrefix }}
            '-f', '"{{ .Values.kafka.topicPrefix }}"',
            {{- end }}
            '-r', '{{ .Values.kafka.replicas }}',
            '-p', '{{ .Values.kafka.partitions }}',
            '-l', '/tmp/working_dir/create-topics.sh'
          ]
          volumeMounts:
            - mountPath: /tmp/working_dir
              name: working-volume
      volumes:
        - name: working-volume
          emptyDir: {}
        {{- if and .Values.kafka.tls.enabled .Values.kafka.tls.truststore.secretRef.name }}
        - name: certs
          secret:
            secretName: {{ .Values.kafka.tls.truststore.secretRef.name | quote }}
            items:
              - key: {{ .Values.kafka.tls.truststore.secretRef.key | quote }}
                path: ca.crt
        {{- end }}
      restartPolicy: Never
  backoffLimit: 0