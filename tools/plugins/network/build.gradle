plugins {
    id 'distribution'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.kapt'
    id 'corda.cli-plugin-packager'
    id 'corda.common-publishing'
}

ext {
    releasable = false
}

group 'net.corda.cli.deployment'

kotlin {
    target {
        java
        compilations.smokeTest {
            associateWith compilations.main
            associateWith compilations.test

            configurations {
                smokeTestApi.extendsFrom testApi
                smokeTestImplementation.extendsFrom testImplementation
                smokeTestRuntimeOnly.extendsFrom testRuntimeOnly
            }
        }
    }
}

dependencies {
    compileOnly "net.corda.cli.host:api:$pluginHostVersion"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "org.yaml:snakeyaml:${snakeyamlVersion}"
    implementation "com.konghq:unirest-java:$unirestVersion"
    implementation project(":libs:crypto:certificate-generation")
    implementation project(':libs:crypto:cipher-suite')
    implementation "org.pf4j:pf4j:${pf4jVersion}"
    kapt "org.pf4j:pf4j:${pf4jVersion}"

    implementation project(":tools:plugins:package")
    implementation project(':tools:plugins:plugins-rest')
    implementation project(':components:membership:membership-rest')
    implementation project(':libs:virtual-node:cpi-upload-endpoints')
    implementation project(':libs:virtual-node:virtual-node-endpoints')
    implementation project(':libs:virtual-node:virtual-node-info')
    implementation project(':libs:configuration:configuration-endpoints')
    implementation project(':libs:membership:membership-common')

    testImplementation "net.corda.cli.host:api:$pluginHostVersion"
    testImplementation "org.pf4j:pf4j:${pf4jVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junit5Version}"
    testImplementation "com.github.stefanbirkner:system-lambda:1.2.1"

    smokeTestImplementation "net.corda.cli.host:api:$pluginHostVersion"
    smokeTestImplementation "org.pf4j:pf4j:${pf4jVersion}"
    smokeTestImplementation "org.junit.jupiter:junit-jupiter:${junit5Version}"
    smokeTestImplementation "com.github.stefanbirkner:system-lambda:1.2.1"
    smokeTestImplementation project(':testing:e2e-test-utilities')
}

cliPlugin {
    cliPluginClass = 'net.corda.cli.plugins.network.NetworkPluginWrapper'
    cliPluginDescription = 'Plugin for network operations.'
}

tasks.named("installDist") {
    dependsOn cliPlugin
    def homePath = System.properties['user.home']
    from cliPlugin
    into "$homePath/.corda/cli/plugins"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId "${cliPlugin.cliPluginId.get()}-cli-plugin"
            groupId project.group
            artifact cliPluginTask
        }
    }
}

sourceSets {
    smokeTest {
        java {
            srcDirs += [ 'src/smokeTest/java' ]
        }
        kotlin {
            srcDirs += [ 'src/smokeTest/kotlin' ]
        }
        resources {
            srcDirs = [ 'src/smokeTest/resources' ]
        }
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}
