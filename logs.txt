Picked up JAVA_TOOL_OPTIONS: -XX:MaxRAMPercentage=75 -Djava.security.auth.login.config=/etc/config/jaas.conf
WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
{"instant":{"epochSecond":1678753800,"nanoOfSecond":659000000},"thread":"main","level":"INFO","loggerName":"net.corda.securitymanager.internal.SecurityManagerServiceImpl","message":"Starting restrictive Corda security manager.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753800,"nanoOfSecond":800000000},"thread":"main","level":"INFO","loggerName":"net.corda.securitymanager.internal.SecurityManagerServiceImpl","message":"Applying default security policy (high_security.policy)","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753808,"nanoOfSecond":993000000},"thread":"main","level":"INFO","loggerName":"net.corda.securitymanager.internal.SecurityConfigHandlerImpl","message":"SecurityConfigHandler started","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753810,"nanoOfSecond":326000000},"thread":"main","level":"WARN","loggerName":"net.corda.osgi.framework.OSGiFrameworkWrap","message":"OSGi bundle bundles/snappy-java-1.1.8.4.jar ID = 160 org.xerial.snappy.snappy-java 1.1.8.4 starting activation time-out after 0 ms.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":887000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"Flow worker starting.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":910000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"LocalWorkerPlatformVersion 999","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":911000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"LocalWorkerSoftwareVersion 5.0.0.0-Gecko20-HC02","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":919000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"PID: 1","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":921000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"Command: /usr/lib/jvm/zulu11-ca-amd64/bin/java","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":929000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 0, -Dlog4j2.debug=false","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":930000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 1, -Dlog4j.configurationFile=/etc/log4j/log4j2.xml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":930000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 2, -jar","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":931000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 3, /opt/override/flow-worker.jar","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":931000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 4, -mbootstrap.servers=prereqs-kafka:9092","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":931000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 5, --topic-prefix=","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":932000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 6, -msecurity.protocol=SASL_SSL","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":936000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 7, -msasl.mechanism=SCRAM-SHA-256","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":936000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 8, -mssl.truststore.location=/certs/ca.crt","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":937000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 9, -mssl.truststore.type=PEM","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":937000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"argument 11, -ssalt=ZTtY5V5Bn4oMKEQYjWiW9Z0f5bCwYIbC","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":937000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"User: Null","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":948000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"StartInstant: 2023-03-14T00:29:54.710Z","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":948000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"TotalCpuDuration: PT35.96S","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":949000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"classpath: /opt/override/flow-worker.jar","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753811,"nanoOfSecond":961000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.flow.FlowWorker","message":"VM OpenJDK 64-Bit Server VM Azul Systems, Inc. 11.0.15+10-LTS","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}

    ______               __
   / ____/     _________/ /___ _
  / /     __  / ___/ __  / __ `/
 / /___  /_/ / /  / /_/ / /_/ /
 \____/     /_/   \__,_/\__,_/
 --- Flow Worker (5.0.0.0-Gecko20-HC02) ---

{"instant":{"epochSecond":1678753812,"nanoOfSecond":603000000},"thread":"main","level":"INFO","loggerName":"net.corda.applications.workers.workercommon.internal.WorkerMonitorImpl","message":"Creating Prometheus metric registry","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":194000000},"thread":"main","level":"INFO","loggerName":"net.corda.libs.configuration.validation.impl.ConfigurationValidatorImpl","message":"Configuration to validate: {\"dir\":{\"tmp\":\"/tmp/corda/tmp\",\"workspace\":\"/tmp/corda/workspace\"},\"instanceId\":1282638251,\"kafka\":{\"common\":{\"bootstrap\":{\"servers\":\"prereqs-kafka:9092\"},\"sasl\":{\"mechanism\":\"SCRAM-SHA-256\"},\"security\":{\"protocol\":\"SASL_SSL\"},\"ssl\":{\"truststore\":{\"location\":\"/certs/ca.crt\",\"type\":\"PEM\"}}}},\"topicPrefix\":\"\"}","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":229000000},"thread":"main","level":"INFO","loggerName":"net.corda.libs.configuration.validation.impl.ConfigurationValidatorImpl","message":"Schema to validate against: \"#\" : {\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"$id\":\"https://corda.r3.com/net/corda/schema/configuration/boot/1.0/corda.boot.json\",\"title\":\"Corda Boot Configuration Schema\",\"description\":\"Configuration schema for the boot config. This configures stores the values the worker is bootstrapped with.\",\"type\":\"object\",\"properties\":{\"instanceId\":{\"description\":\"Unique ID for this worker.\",\"type\":\"integer\",\"minimum\":0},\"topicPrefix\":{\"description\":\"Topic prefix to apply when connecting to topics.\",\"type\":\"string\",\"default\":\"\"},\"kafka\":{\"description\":\"Configuration options specific to kafka backend.\",\"properties\":{\"common\":{\"description\":\"Kafka properties that are common between consumers and producers, e.g. connection details, security settings.\",\"type\":\"object\"}}},\"crypto\":{\"description\":\"Configuration options specific to crypto worker.\",\"type\":\"object\",\"properties\":{}},\"db\":{\"description\":\"Configuration options related to database.\",\"properties\":{\"params\":{\"description\":\"Additional db params the worker is bootstrapped with.\",\"type\":\"object\"},\"jdbcUrl\":{\"description\":\"The JDBC database URL\",\"type\":[\"string\",\"null\"]},\"user\":{\"description\":\"Cluster admin username to connect to the database with.\",\"type\":[\"string\",\"null\"]},\"pass\":{\"description\":\"Cluster admin password to connect to the database with.\",\"type\":[\"string\",\"null\"]}},\"additionalProperties\":false},\"dir\":{\"description\":\"Configuration for file system directories.\",\"properties\":{\"workspace\":{\"description\":\"Local workspace directory\",\"type\":[\"string\"]},\"tmp\":{\"description\":\"Tmp directory\",\"type\":[\"string\"]},\"pass\":{\"description\":\"Cluster admin password to connect to the database with.\",\"type\":[\"string\"]}},\"additionalProperties\":false}},\"additionalProperties\":false}","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":238000000},"thread":"main","level":"INFO","loggerName":"net.corda.processors.flow.internal.FlowProcessorImpl","message":"Flow processor starting.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":242000000},"thread":"main","level":"INFO","loggerName":"net.corda.processors.verification.internal.VerificationProcessorImpl","message":"Verification processor starting.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":1,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":253000000},"thread":"lifecycle-coordinator-0","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"GroupParametersReaderService started.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":21,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":263000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Received event net.corda.lifecycle.StartEvent@227ec975.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":263000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Handling start event.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":282000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.ledger.utxo.token.cache.services.TokenCacheSubscriptionHandler from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753815,"nanoOfSecond":283000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.flow.service.FlowExecutor from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":877000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator config.topic-COMPACTED-CONFIGURATION_READ-COMPACTED-CONFIGURATION_READ-config.topic-0 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":878000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.configuration.read.ConfigurationReadService received RegistrationStatusChangeEvent UP due to config.topic-COMPACTED-CONFIGURATION_READ-COMPACTED-CONFIGURATION_READ-config.topic-0 changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":884000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.configuration.read.ConfigurationReadService from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":885000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.cpk.read.CpkReadService received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":885000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.session.mapper.service.FlowMapperService received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":885000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.flow.p2p.filter.FlowP2PFilterService received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":888000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.securitymanager.SecurityConfigHandler received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":889000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.virtualnode.read.VirtualNodeInfoReadService received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":892000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.cpiinfo.read.CpiInfoReadService received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":893000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.membership.read.GroupParametersReaderService received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":893000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.membership.read.MembershipGroupReaderProvider received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":894000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.membership.impl.read.lifecycle.MembershipGroupReadLifecycleHandler$Impl","message":"MembershipGroupReaderProvider handling registration changed event.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":895000000},"thread":"lifecycle-coordinator-8","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Received event RegistrationStatusChangeEvent(registration=Registration(registeringCoordinator=net.corda.membership.read.GroupParametersReaderService,coordinators=net.corda.configuration.read.ConfigurationReadService), status=UP).","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":42,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":898000000},"thread":"lifecycle-coordinator-8","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Handling registration changed event.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":42,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":906000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.ledger.utxo.token.cache.services.TokenCacheComponent received RegistrationStatusChangeEvent UP due to net.corda.configuration.read.ConfigurationReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":909000000},"thread":"lifecycle-coordinator-0","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Received event ConfigChangedEvent(keys=[corda.boot, corda.messaging], config={corda.boot=net.corda.libs.configuration.SmartConfigImpl@1f112c50, corda.messaging=net.corda.libs.configuration.SmartConfigImpl@5a662701}).","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":21,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":910000000},"thread":"lifecycle-coordinator-0","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Handling config changed event.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":21,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":919000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.cpk.read.impl.CpkReadServiceImpl","message":"Configuring CPK Read Service","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":976000000},"thread":"lifecycle-coordinator-7","level":"INFO","loggerName":"net.corda.membership.impl.read.lifecycle.MembershipGroupReadLifecycleHandler$Impl","message":"MembershipGroupReaderProvider handling new config event.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":41,"threadPriority":5}
{"instant":{"epochSecond":1678753816,"nanoOfSecond":915000000},"thread":"lifecycle-coordinator-12","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.securitymanager.SecurityConfigHandler from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":46,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":8000000},"thread":"lifecycle-coordinator-12","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.cpiinfo.read.CpiInfoReadService from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":46,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":15000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.virtualnode.read.VirtualNodeInfoReadService from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":50000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.membership.read.MembershipGroupReaderProvider from status DOWN to UP. Reason: Starting component due to dependencies UP and configuration received.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":111000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.cpk.read.CpkReadService from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":112000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.sandboxgroupcontext.service.SandboxGroupContextComponent received RegistrationStatusChangeEvent UP due to net.corda.cpk.read.CpkReadService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":113000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl","message":"Re-creating Sandbox cache with size: 2","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":165000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.flow.p2p.filter.FlowP2PFilterService from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":175000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.ledger.utxo.token.cache.services.TokenCacheComponent from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":198000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl","message":"Sandbox cache capacity changed from 0 to 2","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":199000000},"thread":"lifecycle-coordinator-8","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.sandboxgroupcontext.service.SandboxGroupContextComponent from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":42,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":200000000},"thread":"lifecycle-coordinator-8","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.flow.service.FlowService received RegistrationStatusChangeEvent UP due to net.corda.sandboxgroupcontext.service.SandboxGroupContextComponent changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":42,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":200000000},"thread":"lifecycle-coordinator-8","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.ledger.verification.LedgerVerificationComponent received RegistrationStatusChangeEvent UP due to net.corda.sandboxgroupcontext.service.SandboxGroupContextComponent changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":42,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":231000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.ledger.verification.LedgerVerificationComponent from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":231000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.processors.verification.internal.VerificationProcessorImpl received RegistrationStatusChangeEvent UP due to net.corda.ledger.verification.LedgerVerificationComponent changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":232000000},"thread":"lifecycle-coordinator-8","level":"INFO","loggerName":"net.corda.processors.verification.internal.VerificationProcessorImpl","message":"Verification processor is UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":42,"threadPriority":5}
{"instant":{"epochSecond":1678753817,"nanoOfSecond":232000000},"thread":"lifecycle-coordinator-6","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.processors.verification.internal.VerificationProcessorImpl from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":40,"threadPriority":5}
{"instant":{"epochSecond":1678753818,"nanoOfSecond":483000000},"thread":"JettyServerThreadPool-26","level":"WARN","loggerName":"net.corda.applications.workers.workercommon.internal.WorkerMonitorImpl","message":"There are components with error or down state: [net.corda.flow.service.FlowService, services.token.event-STATE_AND_EVENT-TokenEventConsumer-STATE_AND_EVENT-TokenEventConsumer-services.token.event-4, p2p.in-DURABLE-FlowSessionFilterConsumer-DURABLE-FlowSessionFilterConsumer-p2p.in-5, virtual.node.info-COMPACTED-VIRTUAL_NODE_INFO_READER-COMPACTED-VIRTUAL_NODE_INFO_READER-virtual.node.info-1, cpk.file-COMPACTED-cpk.reader-COMPACTED-cpk.reader-cpk.file-7, verification.ledger.processor-DURABLE-verification.ledger.processor-DURABLE-verification.ledger.processor-verification.ledger.processor-8, membership.group.params-COMPACTED-GROUP_PARAMETERS_READER-COMPACTED-GROUP_PARAMETERS_READER-membership.group.params-3, membership.members-COMPACTED-MEMBERSHIP_GROUP_READER-COMPACTED-MEMBERSHIP_GROUP_READER-membership.members-6, net.corda.membership.read.GroupParametersReaderService, net.corda.processors.flow.internal.FlowProcessorImpl, cpi.info-COMPACTED-CPI_INFO_READER-COMPACTED-CPI_INFO_READER-cpi.info-2, net.corda.session.mapper.service.FlowMapperService].","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":26,"threadPriority":5}
{"instant":{"epochSecond":1678753818,"nanoOfSecond":972000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.session.mapper.service.FlowMapperService from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":97000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.flow.service.FlowService from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":525000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator p2p.in-DURABLE-FlowSessionFilterConsumer-DURABLE-FlowSessionFilterConsumer-p2p.in-5 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":526000000},"thread":"lifecycle-coordinator-15","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator cpi.info-COMPACTED-CPI_INFO_READER-COMPACTED-CPI_INFO_READER-cpi.info-2 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":49,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":533000000},"thread":"lifecycle-coordinator-15","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator membership.group.params-COMPACTED-GROUP_PARAMETERS_READER-COMPACTED-GROUP_PARAMETERS_READER-membership.group.params-3 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":49,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":533000000},"thread":"lifecycle-coordinator-15","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.membership.read.GroupParametersReaderService received RegistrationStatusChangeEvent UP due to membership.group.params-COMPACTED-GROUP_PARAMETERS_READER-COMPACTED-GROUP_PARAMETERS_READER-membership.group.params-3 changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":49,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":534000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Received event RegistrationStatusChangeEvent(registration=Registration(registeringCoordinator=net.corda.membership.read.GroupParametersReaderService,coordinators=membership.group.params-COMPACTED-GROUP_PARAMETERS_READER-COMPACTED-GROUP_PARAMETERS_READER-membership.group.params-3), status=UP).","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":534000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.membership.impl.read.reader.GroupParametersReaderServiceImpl","message":"Handling registration changed event.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":536000000},"thread":"lifecycle-coordinator-15","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.membership.read.GroupParametersReaderService from status DOWN to UP. Reason: Received config and started group parameters topic subscription.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":49,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":537000000},"thread":"lifecycle-coordinator-15","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.processors.flow.internal.FlowProcessorImpl received RegistrationStatusChangeEvent UP due to net.corda.membership.read.GroupParametersReaderService changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":49,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":538000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.processors.flow.internal.FlowProcessorImpl","message":"Flow processor is UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":538000000},"thread":"lifecycle-coordinator-15","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator membership.members-COMPACTED-MEMBERSHIP_GROUP_READER-COMPACTED-MEMBERSHIP_GROUP_READER-membership.members-6 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":49,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":538000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator net.corda.processors.flow.internal.FlowProcessorImpl from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":566000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator virtual.node.info-COMPACTED-VIRTUAL_NODE_INFO_READER-COMPACTED-VIRTUAL_NODE_INFO_READER-virtual.node.info-1 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":662000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator cpk.file-COMPACTED-cpk.reader-COMPACTED-cpk.reader-cpk.file-7 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":665000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator verification.ledger.processor-DURABLE-verification.ledger.processor-DURABLE-verification.ledger.processor-verification.ledger.processor-8 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753819,"nanoOfSecond":888000000},"thread":"durable processing thread FlowSessionFilterConsumer-p2p.in","level":"INFO","loggerName":"net.corda.messaging.subscription.consumer.listener.LoggingConsumerRebalanceListener-p2p.in-FlowSessionFilterConsumer","message":"Consumer (DURABLE-FlowSessionFilterConsumer-p2p.in-5) group name FlowSessionFilterConsumer for topic p2p.in partition assigned: 0,1,2,3,4,5,6,7,8,9.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":56,"threadPriority":5}
{"instant":{"epochSecond":1678753820,"nanoOfSecond":52000000},"thread":"durable processing thread verification.ledger.processor-verification.ledger.processor","level":"INFO","loggerName":"net.corda.messaging.subscription.consumer.listener.LoggingConsumerRebalanceListener-verification.ledger.processor-verification.ledger.processor","message":"Consumer (DURABLE-verification.ledger.processor-verification.ledger.processor-8) group name verification.ledger.processor for topic verification.ledger.processor partition assigned: 0,1,2,3,4,5,6,7,8,9.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":58,"threadPriority":5}
{"instant":{"epochSecond":1678753820,"nanoOfSecond":661000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator services.token.event-STATE_AND_EVENT-TokenEventConsumer-STATE_AND_EVENT-TokenEventConsumer-services.token.event-4 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753820,"nanoOfSecond":662000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.ledger.utxo.token.cache.services.TokenCacheSubscriptionHandler received RegistrationStatusChangeEvent UP due to services.token.event-STATE_AND_EVENT-TokenEventConsumer-STATE_AND_EVENT-TokenEventConsumer-services.token.event-4 changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753820,"nanoOfSecond":881000000},"thread":"state/event processing thread TokenEventConsumer-services.token.event","level":"INFO","loggerName":"STATE_AND_EVENT-TokenEventConsumer-services.token.event-4","message":"Consumer (STATE_AND_EVENT-TokenEventConsumer-services.token.event-4) group name TokenEventConsumer for topic services.token.event partition assigned: 0,1,2,3,4,5,6,7,8,9.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":57,"threadPriority":5}
{"instant":{"epochSecond":1678753820,"nanoOfSecond":988000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator flow.event-STATE_AND_EVENT-FlowEventConsumer-STATE_AND_EVENT-FlowEventConsumer-flow.event-10 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753821,"nanoOfSecond":57000000},"thread":"lifecycle-coordinator-13","level":"INFO","loggerName":"net.corda.lifecycle.impl.Registration","message":"Coordinator net.corda.flow.service.FlowExecutor received RegistrationStatusChangeEvent UP due to flow.event-STATE_AND_EVENT-FlowEventConsumer-STATE_AND_EVENT-FlowEventConsumer-flow.event-10 changing to state UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":47,"threadPriority":5}
{"instant":{"epochSecond":1678753821,"nanoOfSecond":75000000},"thread":"lifecycle-coordinator-3","level":"INFO","loggerName":"net.corda.lifecycle.impl.LifecycleProcessor","message":"Updating coordinator flow.mapper.event-STATE_AND_EVENT-FlowMapperConsumer-STATE_AND_EVENT-FlowMapperConsumer-flow.mapper.event-9 from status DOWN to UP. Reason: Status has changed to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":37,"threadPriority":5}
{"instant":{"epochSecond":1678753821,"nanoOfSecond":216000000},"thread":"state/event processing thread FlowMapperConsumer-flow.mapper.event","level":"INFO","loggerName":"STATE_AND_EVENT-FlowMapperConsumer-flow.mapper.event-9","message":"Consumer (STATE_AND_EVENT-FlowMapperConsumer-flow.mapper.event-9) group name FlowMapperConsumer for topic flow.mapper.event partition assigned: 0,1,2,3,4,5,6,7,8,9.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":63,"threadPriority":5}
{"instant":{"epochSecond":1678753821,"nanoOfSecond":239000000},"thread":"state/event processing thread FlowEventConsumer-flow.event","level":"INFO","loggerName":"STATE_AND_EVENT-FlowEventConsumer-flow.event-10","message":"Consumer (STATE_AND_EVENT-FlowEventConsumer-flow.event-10) group name FlowEventConsumer for topic flow.event partition assigned: 0,1,2,3,4,5,6,7,8,9.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":65,"threadPriority":5}
{"instant":{"epochSecond":1678754529,"nanoOfSecond":613000000},"thread":"compacted subscription thread cpk.reader-cpk.file","level":"INFO","loggerName":"net.corda.cpk.read.impl.services.persistence.CpkChunksFileManagerImpl","message":"Assembling CPK on disk: /tmp/corda/workspace/cpk-cache/97ACD6F923A6DF97DE0F833321B5656D661FCFAC22CF88BB358BCDBDF57ED940","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":55,"threadPriority":5}
{"instant":{"epochSecond":1678754529,"nanoOfSecond":785000000},"thread":"compacted subscription thread cpk.reader-cpk.file","level":"INFO","loggerName":"net.corda.cpk.read.impl.CpkReadServiceImpl","message":"CpkReadServiceImpl storing:  SHA-256:97ACD6F923A6DF97DE0F833321B5656D661FCFAC22CF88BB358BCDBDF57ED940","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":55,"threadPriority":5}
{"instant":{"epochSecond":1678755660,"nanoOfSecond":518000000},"thread":"Thread-24","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl","message":"Caching flow sandbox for O=Bob, L=London, C=GB (cache size: 0)","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{"client_id":"s2","flow_id":"s2","vnode_id":"704D3EEE33D6"},"threadId":78,"threadPriority":5}
{"instant":{"epochSecond":1678755662,"nanoOfSecond":510000000},"thread":"Thread-24","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl","message":"Caching flow sandbox for O=Bob, L=London, C=GB (cache size: 0)","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":78,"threadPriority":5}
{"instant":{"epochSecond":1678755665,"nanoOfSecond":593000000},"thread":"Thread-24","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl","message":"Caching flow sandbox for O=Bob, L=London, C=GB (cache size: 0)","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":78,"threadPriority":5}
{"instant":{"epochSecond":1678755670,"nanoOfSecond":631000000},"thread":"Thread-24","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl","message":"Caching flow sandbox for O=Bob, L=London, C=GB (cache size: 0)","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":78,"threadPriority":5}
{"instant":{"epochSecond":1678755679,"nanoOfSecond":772000000},"thread":"Thread-24","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl","message":"Caching flow sandbox for O=Bob, L=London, C=GB (cache size: 0)","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":78,"threadPriority":5}
{"instant":{"epochSecond":1678755696,"nanoOfSecond":895000000},"thread":"Thread-24","level":"INFO","loggerName":"net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl","message":"Caching flow sandbox for O=Bob, L=London, C=GB (cache size: 0)","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":78,"threadPriority":5}
{"instant":{"epochSecond":1678755697,"nanoOfSecond":749000000},"thread":"Thread-24","level":"WARN","loggerName":"net.corda.flow.pipeline.impl.FlowEventExceptionProcessorImpl","message":"Flow processing for flow ID a11364c2-c3b3-479c-a595-e8ea7a396489 has failed due to a fatal exception. Flow start context: {\"statusKey\": {\"id\": \"s2\", \"identity\": {\"x500Name\": \"O=Bob, L=London, C=GB\", \"groupId\": \"c01cd180-560e-4555-8c18-23b3d8c2505c\"}}, \"initiatorType\": \"RPC\", \"requestId\": \"s2\", \"identity\": {\"x500Name\": \"O=Bob, L=London, C=GB\", \"groupId\": \"c01cd180-560e-4555-8c18-23b3d8c2505c\"}, \"cpiId\": \"chat1\", \"initiatedBy\": {\"x500Name\": \"O=Bob, L=London, C=GB\", \"groupId\": \"c01cd180-560e-4555-8c18-23b3d8c2505c\"}, \"flowClassName\": \"net.cordapp.testing.chat.ChatReaderFlow\", \"startArgs\": \"{}\", \"contextPlatformProperties\": {\"items\": [{\"key\": \"corda.account\", \"value\": \"account-zero\"}]}, \"createdTimestamp\": \"2023-03-14T01:00:59.785Z\"}","thrown":{"commonElementCount":0,"localizedMessage":"Execution failed with \"Failed to create the sandbox: Failed to resolve bundles: com.r3.hellocorda.chat [205]\" after 5 retry attempts.","message":"Execution failed with \"Failed to create the sandbox: Failed to resolve bundles: com.r3.hellocorda.chat [205]\" after 5 retry attempts.","name":"net.corda.flow.pipeline.exceptions.FlowFatalException","cause":{"commonElementCount":15,"localizedMessage":"Failed to create the sandbox: Failed to resolve bundles: com.r3.hellocorda.chat [205]","message":"Failed to create the sandbox: Failed to resolve bundles: com.r3.hellocorda.chat [205]","name":"net.corda.flow.pipeline.exceptions.FlowTransientException","cause":{"commonElementCount":15,"localizedMessage":"Failed to resolve bundles: com.r3.hellocorda.chat [205]","message":"Failed to resolve bundles: com.r3.hellocorda.chat [205]","name":"net.corda.sandbox.SandboxException","suppressed":[{"commonElementCount":0,"localizedMessage":"Unable to resolve com.r3.hellocorda.chat [205](R 205.0): missing requirement [com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0))) Unresolved requirements: [[com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0)))]","message":"Unable to resolve com.r3.hellocorda.chat [205](R 205.0): missing requirement [com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0))) Unresolved requirements: [[com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0)))]","name":"org.osgi.framework.BundleException","extendedStackTrace":"org.osgi.framework.BundleException: Unable to resolve com.r3.hellocorda.chat [205](R 205.0): missing requirement [com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0))) Unresolved requirements: [[com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0)))]\n\tat org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:4398) ~[flow-worker.jar:?]\n\tat org.apache.felix.framework.Felix.startBundle(Felix.java:2308) ~[flow-worker.jar:?]\n\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:1006) ~[flow-worker.jar:?]\n\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:992) ~[flow-worker.jar:?]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxes(SandboxServiceImpl.kt:233) ~[?:?]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxGroup(SandboxServiceImpl.kt:87) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke$lambda$4(SandboxGroupContextServiceImpl.kt:191) ~[?:?]\n\tat io.micrometer.core.instrument.composite.CompositeTimer.recordCallable(CompositeTimer.java:129) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:173) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:171) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get$lambda$2(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$2(LocalCache.java:161) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2625) ~[?:?]\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1908) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2623) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2606) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:106) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl.getOrCreate(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl.getOrCreate(SandboxGroupContextComponentImpl.kt) ~[?:?]\n\tat net.corda.flow.pipeline.sandbox.impl.FlowSandboxServiceImpl.get(FlowSandboxServiceImpl.kt:79) ~[?:?]\n\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:30) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.access$getFlowPipelineResponse(FlowEventProcessorImpl.kt:23) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:52) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:51) ~[?:?]\n\tat net.corda.utilities.LogUtilsKt.withMDC(LogUtils.kt:61) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:51) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:23) ~[?:?]\n\tat net.corda.messaging.subscription.StateAndEventSubscriptionImpl$getUpdatesForEvent$future$1$1.invoke(StateAndEventSubscriptionImpl.kt:299) ~[?:?]\n\tat net.corda.messaging.subscription.consumer.StateAndEventConsumerImpl.waitForFunctionToFinish$lambda$6(StateAndEventConsumerImpl.kt:125) ~[?:?]\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1700) ~[?:?]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[?:?]\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]\n\tat java.lang.Thread.run(Thread.java:829) ~[?:?]\n"}],"extendedStackTrace":"net.corda.sandbox.SandboxException: Failed to resolve bundles: com.r3.hellocorda.chat [205]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxes(SandboxServiceImpl.kt:229) ~[?:?]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxGroup(SandboxServiceImpl.kt:87) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke$lambda$4(SandboxGroupContextServiceImpl.kt:191) ~[?:?]\n\tat io.micrometer.core.instrument.composite.CompositeTimer.recordCallable(CompositeTimer.java:129) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:173) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:171) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get$lambda$2(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$2(LocalCache.java:161) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2625) ~[?:?]\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1908) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2623) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2606) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:106) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl.getOrCreate(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl.getOrCreate(SandboxGroupContextComponentImpl.kt) ~[?:?]\n\tat net.corda.flow.pipeline.sandbox.impl.FlowSandboxServiceImpl.get(FlowSandboxServiceImpl.kt:79) ~[?:?]\n\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:30) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\tSuppressed: org.osgi.framework.BundleException: Unable to resolve com.r3.hellocorda.chat [205](R 205.0): missing requirement [com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0))) Unresolved requirements: [[com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0)))]\n\t\tat org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:4398) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.Felix.startBundle(Felix.java:2308) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:1006) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:992) ~[flow-worker.jar:?]\n\t\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxes(SandboxServiceImpl.kt:233) ~[?:?]\n\t\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxGroup(SandboxServiceImpl.kt:87) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke$lambda$4(SandboxGroupContextServiceImpl.kt:191) ~[?:?]\n\t\tat io.micrometer.core.instrument.composite.CompositeTimer.recordCallable(CompositeTimer.java:129) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:173) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:171) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get$lambda$2(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$2(LocalCache.java:161) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2625) ~[?:?]\n\t\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1908) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2623) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2606) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:106) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl.getOrCreate(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl.getOrCreate(SandboxGroupContextComponentImpl.kt) ~[?:?]\n\t\tat net.corda.flow.pipeline.sandbox.impl.FlowSandboxServiceImpl.get(FlowSandboxServiceImpl.kt:79) ~[?:?]\n\t\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:30) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.access$getFlowPipelineResponse(FlowEventProcessorImpl.kt:23) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:52) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:51) ~[?:?]\n\t\tat net.corda.utilities.LogUtilsKt.withMDC(LogUtils.kt:61) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:51) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:23) ~[?:?]\n\t\tat net.corda.messaging.subscription.StateAndEventSubscriptionImpl$getUpdatesForEvent$future$1$1.invoke(StateAndEventSubscriptionImpl.kt:299) ~[?:?]\n\t\tat net.corda.messaging.subscription.consumer.StateAndEventConsumerImpl.waitForFunctionToFinish$lambda$6(StateAndEventConsumerImpl.kt:125) ~[?:?]\n\t\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1700) ~[?:?]\n\t\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[?:?]\n\t\tat java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]\n\t\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]\n\t\tat java.lang.Thread.run(Thread.java:829) ~[?:?]\n"},"extendedStackTrace":"net.corda.flow.pipeline.exceptions.FlowTransientException: Failed to create the sandbox: Failed to resolve bundles: com.r3.hellocorda.chat [205]\n\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:32) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\nCaused by: net.corda.sandbox.SandboxException: Failed to resolve bundles: com.r3.hellocorda.chat [205]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxes(SandboxServiceImpl.kt:229) ~[?:?]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxGroup(SandboxServiceImpl.kt:87) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke$lambda$4(SandboxGroupContextServiceImpl.kt:191) ~[?:?]\n\tat io.micrometer.core.instrument.composite.CompositeTimer.recordCallable(CompositeTimer.java:129) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:173) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:171) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get$lambda$2(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$2(LocalCache.java:161) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2625) ~[?:?]\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1908) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2623) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2606) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:106) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl.getOrCreate(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl.getOrCreate(SandboxGroupContextComponentImpl.kt) ~[?:?]\n\tat net.corda.flow.pipeline.sandbox.impl.FlowSandboxServiceImpl.get(FlowSandboxServiceImpl.kt:79) ~[?:?]\n\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:30) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\t... 15 more\n\tSuppressed: org.osgi.framework.BundleException: Unable to resolve com.r3.hellocorda.chat [205](R 205.0): missing requirement [com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0))) Unresolved requirements: [[com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0)))]\n\t\tat org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:4398) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.Felix.startBundle(Felix.java:2308) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:1006) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:992) ~[flow-worker.jar:?]\n\t\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxes(SandboxServiceImpl.kt:233) ~[?:?]\n\t\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxGroup(SandboxServiceImpl.kt:87) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke$lambda$4(SandboxGroupContextServiceImpl.kt:191) ~[?:?]\n\t\tat io.micrometer.core.instrument.composite.CompositeTimer.recordCallable(CompositeTimer.java:129) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:173) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:171) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get$lambda$2(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$2(LocalCache.java:161) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2625) ~[?:?]\n\t\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1908) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2623) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2606) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:106) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl.getOrCreate(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl.getOrCreate(SandboxGroupContextComponentImpl.kt) ~[?:?]\n\t\tat net.corda.flow.pipeline.sandbox.impl.FlowSandboxServiceImpl.get(FlowSandboxServiceImpl.kt:79) ~[?:?]\n\t\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:30) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.access$getFlowPipelineResponse(FlowEventProcessorImpl.kt:23) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:52) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:51) ~[?:?]\n\t\tat net.corda.utilities.LogUtilsKt.withMDC(LogUtils.kt:61) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:51) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:23) ~[?:?]\n\t\tat net.corda.messaging.subscription.StateAndEventSubscriptionImpl$getUpdatesForEvent$future$1$1.invoke(StateAndEventSubscriptionImpl.kt:299) ~[?:?]\n\t\tat net.corda.messaging.subscription.consumer.StateAndEventConsumerImpl.waitForFunctionToFinish$lambda$6(StateAndEventConsumerImpl.kt:125) ~[?:?]\n\t\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1700) ~[?:?]\n\t\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[?:?]\n\t\tat java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]\n\t\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]\n\t\tat java.lang.Thread.run(Thread.java:829) ~[?:?]\n"},"extendedStackTrace":"net.corda.flow.pipeline.exceptions.FlowFatalException: Execution failed with \"Failed to create the sandbox: Failed to resolve bundles: com.r3.hellocorda.chat [205]\" after 5 retry attempts.\n\tat net.corda.flow.pipeline.impl.FlowEventExceptionProcessorImpl$process$1.invoke(FlowEventExceptionProcessorImpl.kt:81) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventExceptionProcessorImpl$process$1.invoke(FlowEventExceptionProcessorImpl.kt:73) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventExceptionProcessorImpl.withEscalation(FlowEventExceptionProcessorImpl.kt:219) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventExceptionProcessorImpl.process(FlowEventExceptionProcessorImpl.kt:73) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:91) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.access$getFlowPipelineResponse(FlowEventProcessorImpl.kt:23) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:52) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:51) ~[?:?]\n\tat net.corda.utilities.LogUtilsKt.withMDC(LogUtils.kt:61) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:51) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:23) ~[?:?]\n\tat net.corda.messaging.subscription.StateAndEventSubscriptionImpl$getUpdatesForEvent$future$1$1.invoke(StateAndEventSubscriptionImpl.kt:299) ~[?:?]\n\tat net.corda.messaging.subscription.consumer.StateAndEventConsumerImpl.waitForFunctionToFinish$lambda$6(StateAndEventConsumerImpl.kt:125) ~[?:?]\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1700) ~[?:?]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[?:?]\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]\n\tat java.lang.Thread.run(Thread.java:829) ~[?:?]\nCaused by: net.corda.flow.pipeline.exceptions.FlowTransientException: Failed to create the sandbox: Failed to resolve bundles: com.r3.hellocorda.chat [205]\n\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:32) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\t... 15 more\nCaused by: net.corda.sandbox.SandboxException: Failed to resolve bundles: com.r3.hellocorda.chat [205]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxes(SandboxServiceImpl.kt:229) ~[?:?]\n\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxGroup(SandboxServiceImpl.kt:87) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke$lambda$4(SandboxGroupContextServiceImpl.kt:191) ~[?:?]\n\tat io.micrometer.core.instrument.composite.CompositeTimer.recordCallable(CompositeTimer.java:129) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:173) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:171) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get$lambda$2(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$2(LocalCache.java:161) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2625) ~[?:?]\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1908) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2623) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2606) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:106) ~[?:?]\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl.getOrCreate(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl.getOrCreate(SandboxGroupContextComponentImpl.kt) ~[?:?]\n\tat net.corda.flow.pipeline.sandbox.impl.FlowSandboxServiceImpl.get(FlowSandboxServiceImpl.kt:79) ~[?:?]\n\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:30) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\t... 15 more\n\tSuppressed: org.osgi.framework.BundleException: Unable to resolve com.r3.hellocorda.chat [205](R 205.0): missing requirement [com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0))) Unresolved requirements: [[com.r3.hellocorda.chat [205](R 205.0)] osgi.wiring.package; (&(osgi.wiring.package=kotlin)(version>=1.8.0)(!(version>=2.0.0)))]\n\t\tat org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:4398) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.Felix.startBundle(Felix.java:2308) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:1006) ~[flow-worker.jar:?]\n\t\tat org.apache.felix.framework.BundleImpl.start(BundleImpl.java:992) ~[flow-worker.jar:?]\n\t\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxes(SandboxServiceImpl.kt:233) ~[?:?]\n\t\tat net.corda.sandbox.internal.SandboxServiceImpl.createSandboxGroup(SandboxServiceImpl.kt:87) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke$lambda$4(SandboxGroupContextServiceImpl.kt:191) ~[?:?]\n\t\tat io.micrometer.core.instrument.composite.CompositeTimer.recordCallable(CompositeTimer.java:129) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:173) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl$getOrCreate$1.invoke(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:171) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl$get$1.invoke(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get$lambda$2(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$2(LocalCache.java:161) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2625) ~[?:?]\n\t\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1908) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2623) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2606) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:106) ~[?:?]\n\t\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextCacheImpl.get(SandboxGroupContextCacheImpl.kt:163) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextServiceImpl.getOrCreate(SandboxGroupContextServiceImpl.kt:168) ~[?:?]\n\t\tat net.corda.sandboxgroupcontext.service.impl.SandboxGroupContextComponentImpl.getOrCreate(SandboxGroupContextComponentImpl.kt) ~[?:?]\n\t\tat net.corda.flow.pipeline.sandbox.impl.FlowSandboxServiceImpl.get(FlowSandboxServiceImpl.kt:79) ~[?:?]\n\t\tat net.corda.flow.pipeline.factory.impl.FlowFiberExecutionContextFactoryImpl.createFiberExecutionContext(FlowFiberExecutionContextFactoryImpl.kt:30) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:97) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.startFlow(FlowRunnerImpl.kt:54) ~[?:?]\n\t\tat net.corda.flow.pipeline.runner.impl.FlowRunnerImpl.runFlow(FlowRunnerImpl.kt:37) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.updateContextFromFlowExecution(FlowEventPipelineImpl.kt:170) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:112) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventPipelineImpl.runOrContinue(FlowEventPipelineImpl.kt:38) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.getFlowPipelineResponse(FlowEventProcessorImpl.kt:83) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.access$getFlowPipelineResponse(FlowEventProcessorImpl.kt:23) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:52) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl$onNext$1.invoke(FlowEventProcessorImpl.kt:51) ~[?:?]\n\t\tat net.corda.utilities.LogUtilsKt.withMDC(LogUtils.kt:61) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:51) ~[?:?]\n\t\tat net.corda.flow.pipeline.impl.FlowEventProcessorImpl.onNext(FlowEventProcessorImpl.kt:23) ~[?:?]\n\t\tat net.corda.messaging.subscription.StateAndEventSubscriptionImpl$getUpdatesForEvent$future$1$1.invoke(StateAndEventSubscriptionImpl.kt:299) ~[?:?]\n\t\tat net.corda.messaging.subscription.consumer.StateAndEventConsumerImpl.waitForFunctionToFinish$lambda$6(StateAndEventConsumerImpl.kt:125) ~[?:?]\n\t\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1700) ~[?:?]\n\t\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[?:?]\n\t\tat java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]\n\t\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]\n\t\tat java.lang.Thread.run(Thread.java:829) ~[?:?]\n"},"endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":78,"threadPriority":5}
{"instant":{"epochSecond":1678755697,"nanoOfSecond":793000000},"thread":"state/event processing thread FlowEventConsumer-flow.event","level":"WARN","loggerName":"STATE_AND_EVENT-FlowEventConsumer-flow.event-10","message":"Sending state and event on key a11364c2-c3b3-479c-a595-e8ea7a396489 for topic flow.event to dead letter queue. Processor marked event for the dead letter queue","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","contextMap":{},"threadId":65,"threadPriority":5}
