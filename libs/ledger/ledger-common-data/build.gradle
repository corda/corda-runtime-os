import aQute.bnd.gradle.Bundle

plugins {
    id 'corda.common-publishing'
    id 'corda.osgi-test-conventions'
    id 'corda.common-library'
}

description 'Corda ledger common data'

configurations {
    cpis {
        canBeConsumed = false
        transitive = false
    }
}

dependencies {
    compileOnly 'org.osgi:osgi.annotation'
    compileOnly 'org.osgi:org.osgi.service.component.annotations'

    implementation 'net.corda:corda-ledger-common'

    implementation project(':libs:crypto:crypto-core')
    implementation project(':libs:sandbox-types')
    implementation project(':libs:serialization:serialization-internal')

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

    testImplementation project(':testing:test-serialization')
    testImplementation project(':testing:kryo-serialization-testkit')
    testImplementation project(':testing:ledger:ledger-common-base-test')
    testImplementation project(':libs:serialization:serialization-amqp')

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"

    integrationTestImplementation project(':testing:ledger:ledger-common-base-integrationtest')
    integrationTestRuntimeOnly project(':libs:flows:session-manager-impl')
    integrationTestRuntimeOnly project(':libs:lifecycle:lifecycle-impl')
    integrationTestRuntimeOnly project(':libs:messaging:db-message-bus-impl')
    integrationTestRuntimeOnly project(':libs:messaging:messaging-impl')
    integrationTestRuntimeOnly project(':libs:serialization:serialization-kryo')
    integrationTestRuntimeOnly "org.apache.aries.spifly:org.apache.aries.spifly.dynamic.framework.extension:$ariesDynamicFrameworkExtensionVersion"
    cpis project(path: ':testing:ledger:ledger-common-empty-app', configuration: 'cordaCPB')
}

//  Copy the cpi builds declared in the cpis configuration into our resources so we find and load them
def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from(configurations.cpis) {
        into 'META-INF'
        rename "(.*)-\\Q${version}\\E-package.cpb", "\$1.cpb"
    }
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
