/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.corda.httpclient.models

import net.corda.httpclient.models.MemberInfoSubmitted

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param memberInfoSubmitted 
 * @param registrationId 
 * @param registrationStatus 
 * @param reason 
 * @param registrationSent 
 * @param registrationUpdated 
 * @param serial 
 */


data class RestRegistrationRequestStatus (

    @Json(name = "memberInfoSubmitted")
    val memberInfoSubmitted: MemberInfoSubmitted,

    @Json(name = "registrationId")
    val registrationId: kotlin.String,

    @Json(name = "registrationStatus")
    val registrationStatus: RestRegistrationRequestStatus.RegistrationStatus,

    @Json(name = "reason")
    val reason: kotlin.String? = null,

    @Json(name = "registrationSent")
    val registrationSent: kotlin.String? = null,

    @Json(name = "registrationUpdated")
    val registrationUpdated: kotlin.String? = null,

    @Json(name = "serial")
    val serial: kotlin.Long? = null

) {

    /**
     * 
     *
     * Values: NEW,SENT_TO_MGM,RECEIVED_BY_MGM,STARTED_PROCESSING_BY_MGM,PENDING_MEMBER_VERIFICATION,PENDING_MANUAL_APPROVAL,PENDING_AUTO_APPROVAL,DECLINED,INVALID,FAILED,APPROVED
     */
    @JsonClass(generateAdapter = false)
    enum class RegistrationStatus(val value: kotlin.Any) {
        @Json(name = "NEW") NEW("NEW"),
        @Json(name = "SENT_TO_MGM") SENT_TO_MGM("SENT_TO_MGM"),
        @Json(name = "RECEIVED_BY_MGM") RECEIVED_BY_MGM("RECEIVED_BY_MGM"),
        @Json(name = "STARTED_PROCESSING_BY_MGM") STARTED_PROCESSING_BY_MGM("STARTED_PROCESSING_BY_MGM"),
        @Json(name = "PENDING_MEMBER_VERIFICATION") PENDING_MEMBER_VERIFICATION("PENDING_MEMBER_VERIFICATION"),
        @Json(name = "PENDING_MANUAL_APPROVAL") PENDING_MANUAL_APPROVAL("PENDING_MANUAL_APPROVAL"),
        @Json(name = "PENDING_AUTO_APPROVAL") PENDING_AUTO_APPROVAL("PENDING_AUTO_APPROVAL"),
        @Json(name = "DECLINED") DECLINED("DECLINED"),
        @Json(name = "INVALID") INVALID("INVALID"),
        @Json(name = "FAILED") FAILED("FAILED"),
        @Json(name = "APPROVED") APPROVED("APPROVED");
    }
}

