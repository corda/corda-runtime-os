//placeholder pipeline WIP for e2e tests

pipeline {
    agent {
        docker {
            image 'build-zulu-openjdk:11'
            label 'docker'
            registryUrl 'https://engineering-docker.software.r3.com/'
            registryCredentialsId 'artifactory-credentials'
            // Used to mount storage from the host as a volume to persist the cache between builds
            args '-v /tmp:/host_tmp'
            // make sure build image is always fresh
            alwaysPull true
        }
    }

        triggers {
            cron '@midnight'
        }

    environment {
        ARTIFACTORY_CREDENTIALS = credentials('artifactory-credentials')
        CORDA_ARTIFACTORY_USERNAME = "${env.ARTIFACTORY_CREDENTIALS_USR}"
        CORDA_ARTIFACTORY_PASSWORD = "${env.ARTIFACTORY_CREDENTIALS_PSW}"
        CORDA_USE_CACHE = "corda-remotes"
        KUBECONFIG=credentials("e2e-tests-credentials")
        CORDA_CLI_USER_HOME="/tmp/corda-cli-home"
        GRADLE_USER_HOME = "/host_tmp/gradle"
        CORDA_REVISION = "${env.GIT_COMMIT}"
        NAME_SPACE = "pat-${UUID.randomUUID().toString()}"
    }

    options {
        buildDiscarder(logRotator(daysToKeepStr: '14', artifactDaysToKeepStr: '14'))
        timeout(time: 30, unit: 'MINUTES')
        timestamps()
    }

    stages {
        stage('Prepare') {
            steps {
                sh 'mkdir -p "${GRADLE_USER_HOME}"'
                //download and set up CLI
                sh "curl -u '${CORDA_ARTIFACTORY_USERNAME}:${CORDA_ARTIFACTORY_PASSWORD}' https://software.r3.com/artifactory/engineering-tools-maven-unstable/net/corda/cli/corda-cli-developer/[RELEASE]/corda-cli-developer-[RELEASE].tar\\;source.branch+=bmcm/CORE-3044/Realign-worker-with-runtime-os --output ./corda-cli.tar"
                sh "rm -rf ./corda-cli && mkdir ./corda-cli"
                sh "tar -C ./corda-cli --strip 1 -xf ./corda-cli.tar"
                sh "./corda-cli/bin/corda-cli -v"
            }
        }
        stage('Build') {
            steps {
               echo "add steps"
            }
        }
        stage('Setup network') {
            steps {
               echo "add steps"
            }
        }
        stage('Wait for network') {
            steps {
               echo "add steps"
            }
        }
        stage('Forward ports and run the tests') {
            steps {
               echo "add steps"

                //for details see
                // https://github.com/corda/corda-runtime-os/blob/release/ent/5.0/applications/http-rpc-gateway/src/e2e-test/README.md

                // uncomment to execute http-rpc-gateway tests
                // sh "./gradlew e2eTest"
            }
            post {
                always {
                       echo "add steps"
                }
                success {
                        echo "add steps"

                }
            }
        }
    }
    post {
        cleanup {
               echo "add archive step"
        }
    }
}