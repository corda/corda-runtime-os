{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "http://corda.net/corda-helm.json",
    "type": "object",
    "default": {},
    "title": "Corda helm chart schema",
    "additionalProperties": false,
    "required": [
        "db",
        "kafka"
    ],
    "properties": {
        "fullnameOverride": {
            "type": "string",
            "default": "",
            "title": "override chart fullname",
            "examples": [""]
        },
        "nameOverride": {
            "type": "string",
            "default": "",
            "title": "override chart name",
            "examples": [""]
        },
        "image": {
            "type": "object",
            "default": {},
            "title": "worker and CLI image defaults",
            "required": [
                "registry"
            ],
            "properties": {
                "registry": {
                    "type": "string",
                    "default": "corda-os-docker.software.r3.com",
                    "title": "worker image registry",
                    "examples": [
                        "corda-os-docker.software.r3.com"
                    ],
                    "minLength": 1
                },
                "tag": {
                    "type": "string",
                    "default": "",
                    "title": "worker image tag, defaults to Chart appVersion",
                    "examples": [
                        ""
                    ]
                }
            }
        },
        "imagePullSecrets": {
            "type": "array",
            "default": [],
            "title": "image pull secrets",
            "items": {
                "type":"string"
            },
            "examples": [
                []
            ]
        },
        "imagePullPolicy": {
            "type": "string",
            "default": "Always",
            "title": "image pull policy",
            "enum": ["Always", "Never", "IfNotPresent"],
            "examples": [
                "Always"
            ]
        },
        "resources": {
            "type": "object",
            "default": {},
            "title": "default resource limits and requests configuration for the Corda containers",
            "required": [
                "limits",
                "requests"
            ],
            "additionalProperties": false,
            "properties": {
                "limits": {
                    "type": "object",
                    "default": {},
                    "title": "the default CPU/memory resource limits for the Corda containers",
                    "required": [],
                    "properties": {
                        "cpu": {"type": "string"},
                        "memory": {"type": "string"}
                    },
                    "additionalProperties": false,
                    "examples": [{
                        "cpu": "1",
                        "memory": "2048Mi"
                    }]
                    
                },
                "requests": {
                    "type": "object",
                    "default": {},
                    "title": "the default CPU/memory resource request for the Corda containers",
                    "required": [],
                    "properties": {
                        "cpu": {"type": "string"},
                        "memory": {"type": "string"}
                    },
                    "additionalProperties": false,
                    "examples": [{
                        "cpu": "1",
                        "memory": "2048Mi"
                    }]
                }
            }
        },
        "logging": {
            "type": "object",
            "default": {},
            "title": "Logging configuration",
            "additionalProperties": false,
            "required": [
                "format",
                "level"
            ],
            "properties": {
                "format": {
                    "type": "string",
                    "default": "json",
                    "title": "log format",
                    "examples": [
                        "json"
                    ],
                    "enum": ["json","text"]

                },
                "level": {
                    "type": "string",
                    "default": "warn",
                    "title": "log level",
                    "examples": [
                        "warn"
                    ],
                    "enum": ["all","trace","debug","info","warn","error","fatal","off"]
                }
            },
            "examples": [{
                "format": "json",
                "level": "warn"
            }]
        },
        "metrics": {
            "type": "object",
            "title": "Metrics configuration",
            "additionalProperties": false,
            "required": [
                "scrape"
            ],
            "properties": {
                "scrape": {
                    "type": "boolean",
                    "default": true,
                    "title": "enable scraping of worker metrics through Prometheus annotations",
                    "examples": [
                        true
                    ]
                }
            },
            "examples": [
                {
                    "scrape": false
                }
            ]
        },
        "dumpHostPath": {
            "type": "string",
            "default": "",
            "title": "path on Kubernetes hosts to mount on Corda workers for collecting dumps",
            "examples": [
                "/logging"
            ]
        },
        "heapDumpOnOutOfMemoryError": {
            "type": "boolean",
            "default": false,
            "title": "enables capturing JVM heap dumps from Corda workers on an OutOfMemory error",
            "examples": [
                false,
                true
            ]
        },
        "nodeSelector": {
            "type": "object",
            "default": {},
            "title": "node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/",
            "required": [],
            "properties": {},
            "examples": [{}]
        },
        "serviceAccount": {
            "type": "object",
            "default": {},
            "title": "service account for pod assignment, see https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
            "additionalProperties": false,
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "default": "",
                    "title": "name of the service account",
                    "examples": [""]
                }
            },
            "examples": [{}]
        },
        "annotations": {
            "type": "object",
            "default": {},
            "title": "custom annotations for all workers",
            "required": [],
            "properties": {},
            "examples": [{}]
        },
        "db": {
            "type": "object",
            "default": {},
            "title": "cluster database configuration",
            "required": [
                "cluster"
            ],
            "additionalProperties": false,
            "properties": {
                "cluster": {
                    "type": "object",
                    "default": {},
                    "title": "cluster database configuration",
                    "required": [
                        "host",
                        "type",
                        "port",
                        "username",
                        "database",
                        "schema"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "username": {
                            "$ref": "#/$defs/config"
                        },
                        "password": {
                            "$ref": "#/$defs/config"
                        },
                        "host": {
                            "type": "string",
                            "format": "hostname",
                            "default": "",
                            "title": "the cluster database host",
                            "examples": [
                                "postgresql.example.com"
                            ]
                        },
                        "type": {
                            "type": "string",
                            "default": "postgresql",
                            "title": "the cluster database type",
                            "examples": [
                                "postgresql"
                            ],
                            "enum": ["postgresql"]
                        },
                        "port": {
                            "type": "integer",
                            "default": 5432,
                            "title": "the cluster database port",
                            "examples": [
                                5432
                            ]
                        },
                        "database": {
                            "type": "string",
                            "default": "cordacluster",
                            "title": "the name of the cluster database",
                            "examples": [
                                "cordacluster"
                            ],
                            "minLength": 1
                        },
                        "schema": {
                            "type": "string",
                            "default": "CONFIG",
                            "title": "the name of the cluster database schema",
                            "examples": [
                                "CONFIG"
                            ],
                            "minLength": 1
                        }
                    },
                    "examples": [{
                        "host": "postgresql.example.com",
                        "type": "postgresql",
                        "port": 5432,
                        "username": {
                            "value": "user"
                        },
                        "password": {
                            "value": "password"
                        },
                        "database": "cordacluster",
                        "schema": "CONFIG"
                    }]
                }
            },
            "examples": [{
                "cluster": {
                    "host": "prereqs-postgresql",
                    "type": "postgresql",
                    "port": 5432,
                    "user": "user",
                    "database": "cordacluster",
                    "schema": "CONFIG",
                    "existingSecret": "postgresql-secret"
                }
            }]
        },
        "kafka": {
            "type": "object",
            "default": {},
            "title": "Kafka configuration",
            "required": [
                "bootstrapServers",
                "topicPrefix",
                "tls",
                "sasl"
            ],
            "additionalProperties": false,
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "default": "",
                    "title": "comma-separated list of Kafka bootstrap servers",
                    "examples": [
                        "prereqs-kafka:9092"
                    ],
                    "minLength": 1                   
                },
                "topicPrefix": {
                    "type": "string",
                    "default": "",
                    "title": "prefix to use for Kafka topic names (to support the use of a single Kafka cluster by multiple Corda clusters)",
                    "examples": [
                        ""
                    ]
                },
                "tls": {
                    "type": "object",
                    "default": {},
                    "title": "tls configuration for client connections to Kafka",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "indicates whether TLS should be used for client connections to Kafka",
                            "examples": [
                                false,
                                true
                            ]
                        },
                        "truststore": {
                            "type": "object",
                            "default": {},
                            "title": "if TLS is enabled, the truststore configuration for client connections to Kafka",
                            "required": [
                                "valueFrom",
                                "type"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "valueFrom": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The truststore secret configuration",
                                    "required": [
                                        "secretKeyRef"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "secretKeyRef": {
                                            "type": "object",
                                            "default": {},
                                            "title": "The truststore key reference",
                                            "required": [
                                                "name",
                                                "key"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "default": "",
                                                    "title": "The truststore secret name"
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "default": "",
                                                    "title": "The truststore secret key"
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": {
                                    "type": "string",
                                    "default": "PEM",
                                    "title": "if TLS is enabled, the type of the truststore for client connections to Kafka; one of PEM or JKS",
                                    "examples": [
                                        "PEM"
                                    ],
                                    "enum": ["PEM","JKS"]
                                },
                                "password": {
                                    "$ref": "#/$defs/config"
                                } 
                            }
                        }
                    }
                },
                "sasl": {
                    "type": "object",
                    "default": {},
                    "title": "SASL configuration for client connection to Kafka",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "enable/disable SASL for client connection to Kafka",
                            "examples": [
                                false,
                                true
                            ]
                        },
                        "username": {
                            "$ref": "#/$defs/config"
                        },
                        "password": {
                            "$ref": "#/$defs/config"
                        },
                        "mechanism": {
                            "type": "string",
                            "default": "",
                            "title": "SASL mechanism for client connection to Kafka",
                            "examples": [
                                "SCRAM-SHA-256"
                            ],
                            "minLength": 1
                        }
                    },
                    "examples": [{
                        "username": {
                            "value": "user"
                        },
                        "password": {
                            "value": "password"
                        },
                        "mechanism": "SCRAM-SHA-256",
                        "enabled": true
                    }]
                }
            }
        },
        "bootstrap": {
            "type": "object",
            "default": {},
            "title": "configuration for cluster bootstrap",
            "required": [
                "initialAdminUser",
                "db",
                "kafka",
                "image",
                "resources",
                "nodeSelector"
            ],
            "additionalProperties": false,
            "properties": {
                "initialAdminUser": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for the initial user created with admin permissions",
                    "required": [
                        "username"   
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "username": {
                            "$ref": "#/$defs/config"
                        },
                        "password": {
                            "$ref": "#/$defs/config"
                        }
                    }
                },
                "db": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for database bootstrap",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "title": "indicates whether DB bootstrap is enabled as part of installation",
                            "examples": [
                                true,
                                false
                            ]
                        },
                        "crypto": {
                            "type": "object",
                            "default": {},
                            "title": "crypto configuration",
                            "required": [
                                "dbConnectionPool"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "username": {
                                    "$ref": "#/$defs/config"
                                },
                                "password": {
                                    "$ref": "#/$defs/config"
                                },
                                "dbConnectionPool": {
                                    "type": "object",
                                    "default": {},
                                    "title": "JDBC connection pool configuration for crypto DB",
                                    "required": [
                                        "maxSize"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "maxSize": {
                                            "type": "integer",
                                            "default": 5,
                                            "title": "maximum JDBC connection pool size for crypto DB",
                                            "examples": [
                                                5
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "maxSize": 5
                                    }]
                                }
                            },
                            "examples": [{
                                "password": {
                                    "value": "password"
                                },
                                "username": {
                                    "value": "username"
                                },
                                "dbConnectionPool": {
                                    "maxSize": 5
                                }
                            }]
                        },
                        "rbac": {
                            "type": "object",
                            "default": {},
                            "title": "RBAC configuration",
                            "required": [
                                "dbConnectionPool"
                            ],
                            "properties": {
                                "username": {
                                    "$ref": "#/$defs/config"
                                },
                                "password": {
                                    "$ref": "#/$defs/config"
                                },
                                "dbConnectionPool": {
                                    "type": "object",
                                    "default": {},
                                    "title": "JDBC connection pool configuration for RBAC DB",
                                    "required": [
                                        "maxSize"
                                    ],
                                    "properties": {
                                        "maxSize": {
                                            "type": "integer",
                                            "default": 5,
                                            "title": "maximum JDBC connection pool size for RBAC DB",
                                            "examples": [
                                                5
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "maxSize": 5
                                    }]
                                }
                            },
                            "examples": [{
                                "password": {
                                    "value": "password"
                                },
                                "username": {
                                    "value": "username"
                                },
                                "dbConnectionPool": {
                                    "maxSize": 5
                                }
                            }]
                        },
                        "clientImage": {
                            "type": "object",
                            "default": {},
                            "title": "db client image",
                            "required": [
                                "registry",
                                "repository",
                                "tag"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "",
                                    "title": "registry for image containing a db client, used to set up the db",
                                    "examples": [
                                        "docker.io"
                                    ]
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "postgres",
                                    "title": "repository for image containing a db client, used to set up the db",
                                    "examples": [
                                        "postgres"
                                    ],
                                    "minLength": 1
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "14.4",
                                    "title": "tag for image containing a db client, used to set up the db",
                                    "examples": [
                                        "14.4"
                                    ],
                                    "minLength": 1
                                }
                            },
                            "examples": [{
                                "registry": "docker.io",
                                "repository": "postgres",
                                "tag": "14.4"
                            }]
                        }
                    },
                    "examples": [{
                        "enabled": true,
                        "crypto": {
                            "dbConnectionPool": {
                                "maxSize": 5
                            }
                        },
                        "rbac": {
                            "dbConnectionPool": {
                                "maxSize": 5
                            }
                        }
                    }]
                },
                "kafka": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for Kafka bootstrap",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "title": "indicates whether Kafka bootstrap is enabled as part of installation",
                            "examples": [
                                true,
                                false
                            ]
                        },
                        "cleanup": {
                            "type": "boolean",
                            "default": false,
                            "title": "specifies whether existing topics with the given prefix should be deleted before trying to create new ones (deletes all existing topics if no prefix is given)",
                            "examples": [
                                false,
                                true
                            ]
                        },
                        "partitions": {
                            "type": "integer",
                            "default": 10,
                            "title": "kafka topic partitions",
                            "examples": [
                                10
                            ]
                        },
                        "replicas": {
                            "type": "integer",
                            "default": 3,
                            "title": "kafka topic replicas",
                            "examples": [
                                3
                            ]
                        },
                        "sasl": {
                            "type": "object",
                            "title": "kafka SASL credentials",
                            "properties": {
                                "username": {
                                    "$ref": "#/$defs/config"
                                },
                                "password": {
                                    "$ref": "#/$defs/config"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "if": {
                        "properties": {
                            "enabled": {
                                "const": true
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "cleanup",
                            "partitions",
                            "replicas"
                        ]
                    },
                    "examples": [{
                        "enabled": true,
                        "cleanup": false,
                        "partitions": 10,
                        "replicas": 3
                    }]
                },
                "image": {
                    "type": "object",
                    "default": {},
                    "title": "configuration for CLI image used for bootstrap",
                    "required": [
                        "repository"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "",
                            "title": "CLI image registry; defaults to image.registry",
                            "examples": [
                                ""
                            ]
                        },
                        "repository": {
                            "type": "string",
                            "default": "corda-os-plugins",
                            "title": "CLI image repository",
                            "examples": [
                                "corda-os-plugins"
                            ],
                            "minLength": 1
                        },
                        "tag": {
                            "type": "string",
                            "default": "",
                            "title": "CLI default tag; defaults to image.tag",
                            "examples": [
                                ""
                            ]
                        }
                    },
                    "examples": [{
                        "registry": "",
                        "repository": "corda-os-plugins",
                        "tag": ""
                    }]
                },
                "resources": {
                    "type": "object",
                    "default": {},
                    "title": "resource limits and requests configuration for the bootstrap containers",
                    "required": [
                        "requests",
                        "limits"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "requests": {
                            "type": "object",
                            "default": {},
                            "title": "the CPU/memory resource requests for the bootstrap containers",
                            "required": [],
                            "properties": {
                                "cpu": {"type": "string"},
                                "memory": {"type": "string"}
                            },
                            "additionalProperties": false,
                            "examples": [{
                                "cpu": "1",
                                "memory": "2048Mi"
                            }]
                        },
                        "limits": {
                            "type": "object",
                            "default": {},
                            "title": "the CPU/memory resource limits for the bootstrap containers",
                            "required": [],
                            "properties": {
                                "cpu": {"type": "string"},
                                "memory": {"type": "string"}
                            },
                            "additionalProperties": false,
                            "examples": [{
                                "cpu": "1",
                                "memory": "2048Mi"
                            }]
                        }
                    },
                    "examples": [{
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"                            
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"                            
                        }
                    }]
                },
                "nodeSelector": {
                    "type": "object",
                    "default": {},
                    "title": "node selector for the bootstrap containers",
                    "required": [],
                    "properties": {},
                    "examples": [{}]
                },
                "serviceAccount": {
                    "type": "object",
                    "default": "",
                    "title": "service account for the bootstrap containers",
                    "additionalProperties": false,
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "default": "",
                            "title": "name of the service account",
                            "examples": [""]
                        }
                    },
                    "examples": [{}]
                },
                "rbac": {
                    "type": "object",
                    "default": {},
                    "title": "RBAC roles bootstrap configuration",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "title": "Enables RBAC roles bootstrapping as part of installation",
                            "examples": [
                                false,
                                true
                            ]
                        }
                    },
                    "examples": [{
                        "enabled": true
                    }]
                }
            }
        },
        "config": {
            "type": "object",
            "title": "config service configuration",
            "required": [
                "encryption"
            ],
            "additionalProperties": false,
            "properties": {
                "encryption": {
                    "type": "object",
                    "title": "configuration for encryption of configuration",
                    "required": [
                        "salt",
                        "passphrase"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "salt": {
                            "$ref": "#/$defs/config"
                        },
                        "passphrase": {
                            "$ref": "#/$defs/config"
                        }
                    }
                }
            }
        },
        "workers": {
            "type": "object",
            "default": {},
            "title": "worker configuration",
            "required": [
                "crypto",
                "db",
                "flow",
                "membership",
                "rpc",
                "p2pLinkManager",
                "p2pGateway"
            ],
            "additionalProperties": false,
            "properties": {
                "crypto": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/worker"
                        },
                        {
                            "additionalProperties": false,
                            "required": [
                                "clusterDbConnectionPool"
                            ],
                            "properties": {
                                "image": {},
                                "javaOptions": {},
                                "annotations": {},
                                "replicaCount": {},
                                "debug": {},
                                "logging": {},
                                "profiling": {},
                                "resources": {},
                                "kafka": {},
                                "clusterDbConnectionPool": {
                                    "type": "object",
                                    "default": {},
                                    "title": "crypto worker JDBC connection pool configuration for cluster DB",
                                    "required": [
                                        "maxSize"
                                    ],
                                    "properties": {
                                        "maxSize": {
                                            "type": "integer",
                                            "default": 5,
                                            "title": "crypto worker maximum JDBC connection pool size for cluster DB",
                                            "examples": [
                                                5
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "db": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/worker"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "image": {},
                                "javaOptions": {},
                                "annotations": {},
                                "replicaCount": {},
                                "debug": {},
                                "logging": {},
                                "profiling": {},
                                "resources": {},
                                "kafka": {},
                                "clusterDbConnectionPool": {
                                    "type": "object",
                                    "default": {},
                                    "title": "DB worker JDBC connection pool configuration for cluster DB",
                                    "required": [
                                        "maxSize"
                                    ],
                                    "properties": {
                                        "maxSize": {
                                            "type": "integer",
                                            "default": 5,
                                            "title": "DB worker maximum JDBC connection pool size for cluster DB",
                                            "examples": [
                                                5
                                            ]
                                        }
                                    }
                                }
                            },
                            "examples": [{
                                "image": {
                                    "registry": "",
                                    "repository": "corda-os-db-worker",
                                    "tag": ""
                                },
                                "replicaCount": 1,
                                "debug": {
                                    "enabled": false,
                                    "suspend": false
                                },
                                "logging": {
                                    "level": "warn"
                                },
                                "profiling": {
                                    "enabled": false
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    },
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }
                                }
                            }]
                        }
                    ]
                },
                "flow": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/worker"
                        },
                        {
                            "required": [
                                "verifyInstrumentation"
                            ],
                            "properties": {
                                "image": {},
                                "javaOptions": {},
                                "annotations": {},
                                "replicaCount": {},
                                "debug": {},
                                "logging": {},
                                "profiling": {},
                                "resources": {},
                                "kafka": {},
                                "verifyInstrumentation": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "run flow worker with Quasar's verifyInstrumentation enabled",
                                    "examples": [
                                        false
                                    ]
                                }
                            },
                            "examples": [{
                                "image": {
                                    "registry": "corda-os-docker.software.r3.com",
                                    "repository": "corda-os-flow-worker",
                                    "tag": ""
                                },
                                "replicaCount": 1,
                                "debug": {
                                    "enabled": false,
                                    "suspend": false
                                },
                                "logging": {
                                    "level": "warn"
                                },
                                "profiling": {
                                    "enabled": false
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    },
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }
                                },
                                "verifyInstrumentation": false
                            }]
                        }
                    ]
                },
                "membership": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/worker"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "image": {},
                                "javaOptions": {},
                                "annotations": {},
                                "replicaCount": {},
                                "debug": {},
                                "logging": {},
                                "profiling": {},
                                "resources": {},
                                "kafka": {}
                            }
                        }
                    ]
                },
                "rpc": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/worker"
                        },
                        {
                            "required": [
                                "service"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "image": {},
                                "javaOptions": {},
                                "annotations": {},
                                "replicaCount": {},
                                "debug": {},
                                "logging": {},
                                "profiling": {},
                                "resources": {},
                                "kafka": {},
                                "service": {
                                    "type": "object",
                                    "default": {},
                                    "title": "rpc worker service configuration",
                                    "required": [
                                        "type",
                                        "externalTrafficPolicy",
                                        "loadBalancerSourceRanges",
                                        "annotations"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "default": "",
                                            "title": "the type for the RPC worker service",
                                            "examples": [
                                                "ClusterIP"
                                            ]
                                        },
                                        "externalTrafficPolicy": {
                                            "type": "string",
                                            "default": "",
                                            "title": "the traffic policy for the RPC worker service",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "loadBalancerSourceRanges": {
                                            "type": "array",
                                            "default": [],
                                            "title": "the LoadBalancer source ranges to limit access to the RPC worker service",
                                            "items": {},
                                            "examples": [
                                                []
                                            ]
                                        },
                                        "annotations": {
                                            "type": "object",
                                            "default": {},
                                            "title": "the annotations for RPC worker service",
                                            "required": [],
                                            "properties": {},
                                            "examples": [
                                                {}
                                            ]
                                        }
                                    },
                                    "examples": [
                                        {
                                            "type": "ClusterIP",
                                            "externalTrafficPolicy": "",
                                            "loadBalancerSourceRanges": [],
                                            "annotations": {}
                                        }
                                    ]
                                }
                            },
                            "examples": [
                                {
                                    "image": {
                                        "registry": "corda-os-docker.software.r3.com",
                                        "repository": "corda-os-rpc-worker",
                                        "tag": ""
                                    },
                                    "replicaCount": 1,
                                    "debug": {
                                        "enabled": false,
                                        "suspend": false
                                    },
                                    "logging": {
                                        "level": "warn"
                                    },
                                    "profiling": {
                                        "enabled": false
                                    },
                                    "resources": {
                                        "requests": {
                                            "cpu": "1",
                                            "memory": "2048Mi"
                                        },
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "2048Mi"
                                        }
                                    },
                                    "service": {
                                        "type": "ClusterIP",
                                        "externalTrafficPolicy": "",
                                        "loadBalancerSourceRanges": [],
                                        "annotations": {}
                                    }
                                }
                            ]
                        }
                    ]
                },
                "p2pLinkManager": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/worker"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "image": {},
                                "javaOptions": {},
                                "annotations": {},
                                "replicaCount": {},
                                "debug": {},
                                "logging": {},
                                "profiling": {},
                                "resources": {},
                                "kafka": {}
                            },
                            "examples": [
                                {
                                    "image": {
                                        "registry": "corda-os-docker.software.r3.com",
                                        "repository": "corda-os-p2p-link-manager-worker",
                                        "tag": ""
                                    },
                                    "replicaCount": 1,
                                    "debug": {
                                        "enabled": false,
                                        "suspend": false
                                    },
                                    "logging": {
                                        "level": "warn"
                                    },
                                    "profiling": {
                                        "enabled": false
                                    },
                                    "resources": {
                                        "requests": {
                                            "cpu": "1",
                                            "memory": "2048Mi"
                                        },
                                        "limits": {
                                            "cpu": "1",
                                            "memory": "2048Mi"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                "p2pGateway": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/worker"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "image": {},
                                "javaOptions": {},
                                "annotations": {},
                                "replicaCount": {},
                                "debug": {},
                                "logging": {},
                                "profiling": {},
                                "resources": {},
                                "kafka": {},
                                "service": {
                                    "type": "object",
                                    "default": {},
                                    "title": "p2p-gateway worker worker service configuration",
                                    "required": [
                                        "port"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "port": {
                                            "type": "integer",
                                            "default": 8080,
                                            "title": "the Gateway HTTP port",
                                            "examples": [
                                                8080
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "port": 8080
                                    }]
                                }
                            },
                            "examples": [{
                                "image": {
                                    "registry": "corda-os-docker.software.r3.com",
                                    "repository": "corda-os-p2p-gateway-worker",
                                    "tag": ""
                                },
                                "replicaCount": 1,
                                "debug": {
                                    "enabled": false,
                                    "suspend": false
                                },
                                "logging": {
                                    "level": "warn"
                                },
                                "profiling": {
                                    "enabled": false
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    },
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2048Mi"
                                    }
                                },
                                "service": {
                                    "port": 8080
                                }
                            }]
                        }
                    ]
                }
            },
            "examples": [{
                "crypto": {
                    "image": {
                        "registry": "",
                        "repository": "corda-os-crypto-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "db": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-db-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "flow": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-flow-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    },
                    "verifyInstrumentation": false
                },
                "membership": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-member-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "rpc": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-rpc-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    },
                    "service": {
                        "type": "ClusterIP",
                        "externalTrafficPolicy": "",
                        "loadBalancerSourceRanges": [],
                        "annotations": {}
                    }
                },
                "p2pLinkManager": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-p2p-link-manager-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }
                },
                "p2pGateway": {
                    "image": {
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-p2p-gateway-worker",
                        "tag": ""
                    },
                    "replicaCount": 1,
                    "debug": {
                        "enabled": false,
                        "suspend": false
                    },
                    "logging": {
                        "level": "warn"
                    },
                    "profiling": {
                        "enabled": false
                    },
                    "resources": {
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    },
                    "service": {
                        "port": 8080
                    }
                }
            }]
        }
    },
    "examples": [{
        "imagePullSecrets": ["docker-registry-cred"],
        "db": {
            "cluster": {
                "existingSecret": "prereqs-postgresql",
                "host": "db.cluster.host=prereqs-postgresql"
            }
        },
        "kafka": {
            "bootstrapServers": "prereqs-kafka:9092"
        }
    }
    ],
    "$defs": {
        "worker": {
            "type": "object",
            "default": {},
            "title": "worker configuration",
            "required": [
                "image",
                "replicaCount",
                "resources"
            ],
            "properties": {
                "image": {
                    "type": "object",
                    "default": {},
                    "title": "worker image configuration",
                    "required": [
                        "repository"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "",
                            "title": "worker image registry, defaults to image.registry",
                            "examples": [
                                "corda-os-docker.software.r3.com"
                            ]
                        },
                        "repository": {
                            "type": "string",
                            "title": "worker image repository",
                            "examples": [
                                "corda-os-xxx-worker"
                            ],
                            "minLength": 1
                        },
                        "tag": {
                            "type": "string",
                            "default": "",
                            "title": "worker image tag, defaults to image.tag",
                            "examples": [
                                ""
                            ]
                        }
                    },
                    "examples": [{
                        "registry": "corda-os-docker.software.r3.com",
                        "repository": "corda-os-xxx-worker",
                        "tag": ""
                    }]
                },
                "javaOptions": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object",
                    "default": {},
                    "title": "custom annotations for the worker",
                    "required": [],
                    "properties": {},
                    "examples": [{}]
                },
                "replicaCount": {
                    "type": "integer",
                    "default": 1,
                    "title": "worker replica count",
                    "examples": [
                        1
                    ]
                },
                "debug": {
                    "type": "object",
                    "default": {},
                    "title": "worker debug configuration",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "run worker with debug enabled",
                            "examples": [
                                false
                            ]
                        },
                        "suspend": {
                            "type": "boolean",
                            "default": false,
                            "title": "if debug is enabled, suspend the worker until the debugger is attached",
                            "examples": [
                                false
                            ]
                        }
                    },
                    "if": {
                        "properties": {
                            "enabled": {
                                "const": true
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "suspend"
                        ]
                    },
                    "examples": [{
                        "enabled": true,
                        "suspend": false
                    }]
                },
                "logging": {
                    "type": "object",
                    "default": {},
                    "title": "logging configuration",
                    "additionalProperties": false,
                    "properties": {
                        "level": {
                            "type": ["string", "null"],
                            "default": null,
                            "title": "log level (defaults to logging.level if not specified)",
                            "examples": [
                                "warn"
                            ],
                            "enum": ["all","trace","debug","info","warn","error","fatal","off", null]
                        },
                        "override": {
                            "type": "string",
                            "default": "",
                            "title": "additional Log4j 2 XML configuration"
                        }
                    },
                    "examples": [{
                        "level": "warn"
                    }]
                },
                "profiling": {
                    "type": "object",
                    "default": {},
                    "title": "profiling configuration",
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "run worker with profiling enabled",
                            "examples": [
                                false
                            ]
                        }
                    },
                    "examples": [{
                        "enabled": false
                    }]
                },
                "resources": {
                    "type": "object",
                    "default": {},
                    "title": "resource limits and requests configuration for the worker containers.",
                    "required": [
                        "requests",
                        "limits"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "requests": {
                            "type": "object",
                            "default": {},
                            "title": "the CPU/memory resource requests for the worker containers",
                            "required": [],
                            "properties": {
                                "cpu": {"type": "string"},
                                "memory": {"type": "string"}
                            },
                            "additionalProperties": false,
                            "examples": [{
                                "cpu": "1",
                                "memory": "2048Mi"
                            }]
                        },
                        "limits": {
                            "type": "object",
                            "default": {},
                            "title": "the CPU/memory resource limits for the worker containers",
                            "required": [],
                            "properties": {
                                "cpu": {"type": "string"},
                                "memory": {"type": "string"}
                            },
                            "additionalProperties": false,
                            "examples": [{
                                "cpu": "1",
                                "memory": "2048Mi"
                            }]
                        }
                    },
                    "examples": [{
                        "requests": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        },
                        "limits": {
                            "cpu": "1",
                            "memory": "2048Mi"
                        }
                    }]
                },
                "kafka": {
                    "type": "object",
                    "title": "kafka configuration",
                    "properties": {
                        "sasl": {
                            "type": "object",
                            "title": "kafka SASL credentials",
                            "properties": {
                                "username": {
                                    "$ref": "#/$defs/config"
                                },
                                "password": {
                                    "$ref": "#/$defs/config"
                                }
                            },
                            "additionalProperties": false
                        },
                        "additionalProperties": false
                    }
                }
            },
            "examples": [{
                "image": {
                    "registry": "",
                    "repository": "corda-os-xxx-worker",
                    "tag": ""
                },
                "replicaCount": 1,
                "debug": {
                    "enabled": false,
                    "suspend": false
                },
                "logging": {
                    "level": "warn"
                },
                "profiling": {
                    "enabled": false
                },
                "resources": {
                    "requests": {
                        "cpu": "1",
                        "memory": "2048Mi"
                    },
                    "limits": {
                        "cpu": "1",
                        "memory": "2048Mi"
                    }
                }
            }]
        },
        "config": {
            "type": "object",
            "title": "configuration for which a value may be provided inline or via a secret",
            "additionalProperties": false,
            "properties": {
                "value": {
                    "type": "string",
                    "default": "",
                    "title": "the value"
                },
                "valueFrom": {
                    "type": "object",
                    "default": {},
                    "title": "an alternative location for the value",
                    "additionalProperties": false,
                    "properties": {
                        "secretKeyRef": {
                            "type": "object",
                            "title": "a reference to a value in a secret",
                            "required": [
                                "name",
                                "key"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "default": "",
                                    "title": "the name of the secret"
                                },
                                "key": {
                                    "type": "string",
                                    "default": "",
                                    "title": "the key in the secret corresponding to the required value"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
