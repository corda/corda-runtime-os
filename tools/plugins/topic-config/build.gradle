plugins {
    id 'distribution'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.kapt'
    id 'corda.cli-plugin-packager'
}

group 'net.corda.cli.deployment'

dependencies {
    implementation 'net.corda.kotlin:kotlin-stdlib-jdk8-osgi'

    compileOnly "org.pf4j:pf4j:$pf4jVersion"
    compileOnly "net.corda.cli.host:api:$pluginHostVersion"
    kapt "org.pf4j:pf4j:$pf4jVersion"
    kapt "info.picocli:picocli-codegen:$picocliVersion"

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation 'net.corda:corda-topic-schema'
    implementation ("org.apache.servicemix.bundles:org.apache.servicemix.bundles.kafka-clients:$kafkaClientVersion")  {
        exclude group: "org.slf4j"
    }
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"

    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation "org.pf4j:pf4j:$pf4jVersion"
    testImplementation "net.corda.cli.host:api:$pluginHostVersion"
}

cliPlugin {
    cliPluginClass = 'net.corda.cli.plugins.topicconfig.TopicPlugin'
    cliPluginDescription = 'Plugin for creating and deleting topics and ACLs.'
}

tasks.named("installDist") {
    dependsOn cliPlugin
    def homePath = System.properties['user.home']
    from cliPlugin
    into "$homePath/.corda/cli/plugins"
}

artifacts {
    archives plugin
}
