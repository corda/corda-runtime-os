plugins {
    id 'corda.common-library'
    id 'com.r3.internal.gradle.plugins.r3Publish'
}

description 'P2P gateway component'

dependencies {
    compileOnly 'org.osgi:osgi.annotation'
    compileOnly 'org.osgi:org.osgi.service.component.annotations'

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation 'net.corda.kotlin:kotlin-stdlib-jdk8-osgi'
    implementation "net.corda:corda-base"
    implementation "net.corda:corda-avro-schema"
    implementation "net.corda:corda-config-schema"
    implementation "net.corda:corda-topic-schema"
    implementation "net.corda:corda-crypto"
    api project(":libs:messaging:messaging")
    api project(":libs:lifecycle:lifecycle")
    api project(":components:configuration:configuration-read-service")
    api project(':components:domino-logic')
    api project(':libs:crypto:delegated-signing')
    implementation project(':components:p2p-test:stub-crypto-processor')

    implementation "com.typesafe:config:$typeSafeConfigVersion"
    implementation "io.netty:netty-codec-http:$nettyVersion"
    implementation "commons-validator:commons-validator:$commonsVersion"
    implementation "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"


    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation("org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion") {
        exclude group: 'mockito-core'
    }
    testImplementation project(":testing:test-utilities")

    integrationTestRuntimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    integrationTestImplementation "org.apache.logging.log4j:log4j-core:$log4jVersion"

    // For async logging
    integrationTestRuntimeOnly "com.lmax:disruptor:$disruptorVersion"

    integrationTestImplementation project(':libs:crypto:certificate-generation')
    integrationTestImplementation project(":libs:messaging:inmemory-messaging-impl")
    integrationTestImplementation project(":libs:lifecycle:lifecycle-impl")
    integrationTestImplementation project(":libs:lifecycle:registry")
    integrationTestImplementation project(":components:configuration:configuration-read-service-impl")
    integrationTestImplementation project(":libs:configuration:configuration-core")
    integrationTestImplementation project(":libs:configuration:configuration-publish")
    integrationTestImplementation project(":libs:configuration:configuration-publish-impl")
    integrationTestImplementation 'net.corda:corda-cipher-suite'
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

tasks.named('integrationTest') {
    final String hostsFilePath = new File(project.sourceSets["integrationTest"].output.resourcesDir.absolutePath, "hosts").absolutePath
    jvmArgs "-Djdk.net.hosts.file=$hostsFilePath"
}