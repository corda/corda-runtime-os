plugins {
    id 'corda.common-publishing'
    id 'corda.common-library'
}

description 'Uniqueness checker component implementation'

dependencies {
    compileOnly "org.osgi:osgi.annotation"
    compileOnly 'org.osgi:org.osgi.service.component.annotations'

    implementation "net.corda.kotlin:kotlin-stdlib-jdk8-osgi"
    implementation 'net.corda:corda-base'
    implementation "net.corda:corda-avro-schema"
    implementation "net.corda:corda-ledger-utxo"
    implementation platform("net.corda:corda-api:$cordaApiVersion")

    implementation project(":components:uniqueness:uniqueness-checker")
    implementation project(":components:uniqueness:backing-store")
    implementation project(":components:uniqueness:backing-store-impl")
    implementation project(":libs:uniqueness:datamodel-impl")
    implementation project(":libs:utilities")

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation project(":testing:crypto-testkit")
    testImplementation project(":testing:test-utilities")
    testImplementation project(":testing:uniqueness:backing-store-fake")
    testImplementation project(":testing:uniqueness:uniqueness-utilities")

    integrationTestApi project(":components:db:db-connection-manager")
    integrationTestImplementation 'net.corda:corda-crypto'
    integrationTestImplementation 'net.corda:corda-db-schema'
    integrationTestImplementation project(':libs:db:db-admin')
    integrationTestImplementation project(':libs:db:db-admin-impl')
    integrationTestImplementation project(':libs:db:db-core')
    integrationTestImplementation project(':libs:db:db-orm')
    integrationTestImplementation project(':libs:db:db-orm-impl')
    integrationTestImplementation project(':libs:lifecycle:lifecycle')
    integrationTestImplementation project(':libs:uniqueness:jpa-backing-store-datamodel')
    integrationTestImplementation project(':testing:db-testkit')

    integrationTestRuntimeOnly "org.hsqldb:hsqldb:$hsqldbVersion"
    integrationTestRuntimeOnly "org.postgresql:postgresql:$postgresDriverVersion"
}
