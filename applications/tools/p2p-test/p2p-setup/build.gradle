plugins {
    id 'com.r3.internal.gradle.plugins.r3Publish'
    id 'corda.common-library'
}

description "P2P Testing tools - P2P Setup tool"

dependencies {
    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation "net.corda:corda-avro-schema:$cordaApiVersion"
    implementation "net.corda:corda-base"
    implementation "net.corda:corda-config-schema"
    implementation 'net.corda:corda-crypto'
    implementation "net.corda:corda-topic-schema:$cordaApiVersion"
    implementation 'net.corda.kotlin:kotlin-stdlib-jdk8-osgi'
    implementation "org.slf4j:slf4j-api"

    implementation project(":libs:configuration:configuration-core")
    implementation project(':libs:configuration:configuration-schema:p2p')
    implementation project(":libs:lifecycle:lifecycle")
    implementation project(":libs:messaging:messaging")
    implementation project(':components:gateway')
    implementation project(":osgi-framework-api")

    implementation "com.typesafe:config:$typeSafeConfigVersion"
    implementation "info.picocli:picocli:$picocliVersion"

    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    runtimeOnly "com.lmax:disruptor:$disruptorVersion"
    runtimeOnly "biz.aQute.bnd:biz.aQute.bndlib:$bndVersion"

    implementation project(":libs:messaging:kafka-message-bus-impl")
    implementation project(":libs:messaging:messaging-impl")
    implementation project(":libs:messaging:message-bus")
    implementation project(":libs:schema-registry:schema-registry-impl")
    implementation project(":libs:lifecycle:lifecycle-impl")
    implementation project(':libs:schema-registry:schema-registry')
    implementation project(':libs:lifecycle:registry')

    testRuntimeOnly "com.lmax:disruptor:$disruptorVersion"
}
task appJar(type: Jar) {
    destinationDirectory = file("$buildDir/bin")
    archiveBaseName = "corda-${project.name}"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes 'Main-Class': "net.corda.p2p.setup.SetupKt"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}