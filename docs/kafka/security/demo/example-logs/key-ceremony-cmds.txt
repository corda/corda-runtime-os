
C:\kafka-security-demo\ca>openssl req -new -x509 -keyout ca-key -out ca-cert -days 365
Generating a RSA private key
...............+++++
...............+++++
writing new private key to 'ca-key'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:ie
State or Province Name (full name) [Some-State]:dub
Locality Name (eg, city) []:dub
Organization Name (eg, company) [Internet Widgits Pty Ltd]:r3
Organizational Unit Name (eg, section) []:eng
Common Name (e.g. server FQDN or YOUR name) []:CA-SERVER
Email Address []:me@me.com

C:\kafka-security-demo\ca>manually copy ca-cert and ca-key to broker and zookeeper dirs...
'manually' is not recognized as an internal or external command,
operable program or batch file.

C:\kafka-security-demo\ca>cd ../broker1

C:\kafka-security-demo\broker1>keytool -keystore kafka.server.keystore.jks -alias broker1 -validity 365 -genkey -storepass password -keypass password -keyalg RSA
What is your first and last name?
  [Unknown]:  localhost
What is the name of your organizational unit?
  [Unknown]:  broker1
What is the name of your organization?
  [Unknown]:  r3
What is the name of your City or Locality?
  [Unknown]:  dub
What is the name of your State or Province?
  [Unknown]:  dub
What is the two-letter country code for this unit?
  [Unknown]:  ie
Is CN=localhost, OU=broker1, O=r3, L=dub, ST=dub, C=ie correct?
  [no]:  yes


C:\kafka-security-demo\broker1>keytool -keystore kafka.server.truststore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Re-enter new password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\broker1>keytool -keystore kafka.server.keystore.jks -alias broker1 -certreq -file cert-file
Enter keystore password:

C:\kafka-security-demo\broker1>openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file -out cert-signed -days 365 -CAcreateserial -passin pass:password
Signature ok
subject=C = ie, ST = dub, L = dub, O = r3, OU = broker1, CN = localhost
Getting CA Private Key

C:\kafka-security-demo\broker1>keytool -keystore kafka.server.keystore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\broker1>keytool -keystore kafka.server.keystore.jks -alias broker1 -importcert -file cert-signed
Enter keystore password:
Certificate reply was installed in keystore

C:\kafka-security-demo\broker1>cd ../broker2

C:\kafka-security-demo\broker2>keytool -keystore kafka.server.keystore.jks -alias broker2 -validity 365 -genkey -storepass password -keypass password -keyalg RSA
What is your first and last name?
  [Unknown]:  localhost
What is the name of your organizational unit?
  [Unknown]:  broker2
What is the name of your organization?
  [Unknown]:  r3
What is the name of your City or Locality?
  [Unknown]:  dub
What is the name of your State or Province?
  [Unknown]:  dub
What is the two-letter country code for this unit?
  [Unknown]:  ie
Is CN=localhost, OU=broker2, O=r3, L=dub, ST=dub, C=ie correct?
  [no]:  yes


C:\kafka-security-demo\broker2>keytool -keystore kafka.server.truststore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Re-enter new password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\broker2>keytool -keystore kafka.server.keystore.jks -alias broker2 -certreq -file cert-file
Enter keystore password:

C:\kafka-security-demo\broker2>openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file -out cert-signed -days 365 -CAcreateserial -passin pass:password
Signature ok
subject=C = ie, ST = dub, L = dub, O = r3, OU = broker2, CN = localhost
Getting CA Private Key

C:\kafka-security-demo\broker2>keytool -keystore kafka.server.keystore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\broker2>keytool -keystore kafka.server.keystore.jks -alias broker2 -importcert -file cert-signed
Enter keystore password:
Certificate reply was installed in keystore

C:\kafka-security-demo\broker2>cd ../broker3

C:\kafka-security-demo\broker3>keytool -keystore kafka.server.keystore.jks -alias broker3 -validity 365 -genkey -storepass password -keypass password -keyalg RSA
What is your first and last name?
  [Unknown]:  localhost
What is the name of your organizational unit?
  [Unknown]:  broker3
What is the name of your organization?
  [Unknown]:  r3
What is the name of your City or Locality?
  [Unknown]:  dub
What is the name of your State or Province?
  [Unknown]:  dub
What is the two-letter country code for this unit?
  [Unknown]:  ie
Is CN=localhost, OU=broker3, O=r3, L=dub, ST=dub, C=ie correct?
  [no]:  yes


C:\kafka-security-demo\broker3>keytool -keystore kafka.server.truststore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Re-enter new password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\broker3>keytool -keystore kafka.server.keystore.jks -alias broker3 -certreq -file cert-file
Enter keystore password:

C:\kafka-security-demo\broker3>openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file -out cert-signed -days 365 -CAcreateserial -passin pass:password
Signature ok
subject=C = ie, ST = dub, L = dub, O = r3, OU = broker3, CN = localhost
Getting CA Private Key

C:\kafka-security-demo\broker3>keytool -keystore kafka.server.keystore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\broker3>keytool -keystore kafka.server.keystore.jks -alias broker3 -importcert -file cert-signed
Enter keystore password:
Certificate reply was installed in keystore

C:\kafka-security-demo\broker3>cd ../client

C:\kafka-security-demo\client>keytool -keystore kafka.client.truststore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Re-enter new password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\client>cd ../zookeeper

C:\kafka-security-demo\zookeeper>keytool -keystore zookeeper.server.keystore.jks -alias zookeeper -validity 365 -genkey -storepass password -keypass password -keyalg RSA
What is your first and last name?
  [Unknown]:  localhost
What is the name of your organizational unit?
  [Unknown]:  zookeeper
What is the name of your organization?
  [Unknown]:  r3
What is the name of your City or Locality?
  [Unknown]:  dub
What is the name of your State or Province?
  [Unknown]:  dub
What is the two-letter country code for this unit?
  [Unknown]:  ie
Is CN=localhost, OU=zookeeper, O=r3, L=dub, ST=dub, C=ie correct?
  [no]:  yes


C:\kafka-security-demo\zookeeper>keytool -keystore zookeeper.server.truststore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Re-enter new password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\zookeeper>keytool -keystore zookeeper.server.keystore.jks -alias zookeeper -certreq -file cert-file
Enter keystore password:

C:\kafka-security-demo\zookeeper>openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file -out cert-signed -days 365 -CAcreateserial -passin pass:password
Signature ok
subject=C = ie, ST = dub, L = dub, O = r3, OU = zookeeper, CN = localhost
Getting CA Private Key

C:\kafka-security-demo\zookeeper>keytool -keystore zookeeper.server.keystore.jks -alias CARoot -importcert -file ca-cert
Enter keystore password:
Owner: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Issuer: EMAILADDRESS=me@me.com, CN=CA-SERVER, OU=eng, O=r3, L=dub, ST=dub, C=ie
Serial number: 30614403e21752cf329c0347094526af38d229c4
Valid from: Thu Aug 05 11:13:59 BST 2021 until: Fri Aug 05 11:13:59 BST 2022
Certificate fingerprints:
         SHA1: A6:46:E6:72:58:79:60:A9:4F:B1:9A:45:59:B3:04:64:35:A3:9F:06
         SHA256: 47:6B:A1:2F:1C:02:DA:2B:B5:C0:57:E3:9A:E4:E7:7D:80:72:62:A7:FF:88:F0:26:57:BE:67:4C:B2:44:B4:DF
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: C4 E7 53 F5 91 FB AB 22   37 18 F6 FB 15 DA 61 93  ..S...."7.....a.
0010: FB 29 54 0C                                        .)T.
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore

C:\kafka-security-demo\zookeeper>keytool -keystore zookeeper.server.keystore.jks -alias zookeeper -importcert -file cert-signed
Enter keystore password:
Certificate reply was installed in keystore

C:\kafka-security-demo\zookeeper>