import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_17
import static org.jetbrains.kotlin.gradle.dsl.KotlinVersion.KOTLIN_1_8
import static org.jetbrains.kotlin.gradle.dsl.KotlinVersion.KOTLIN_1_8

plugins {
    id "org.openapi.generator" version "$openApiGeneratorVersion"
}

openApiGenerate {
    generatorName = 'kotlin'
    library = 'jvm-ktor'
    inputSpec = "${project.projectDir}/src/main/resources/swaggerBaseline-v5_3.json"
    outputDir = "${project.buildDir}/generated"
    generateApiDocumentation = false
    generateModelDocumentation = false
    packageName = 'net.corda.httpclient'
    skipValidateSpec = true
    configOptions = [
        apiPackage: 'net.corda.httpclient.apis',
        modelPackage: 'net.corda.httpclient.models',
        generateModels: 'false'
    ]
}

dependencies {
    implementation libs.kotlin.stdlib
//    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.squareup.moshi:moshi-kotlin:1.14.0"
    implementation "com.squareup.moshi:moshi-adapters:1.14.0"
    implementation "io.ktor:ktor-client-core:2.2.3"
    implementation "io.ktor:ktor-client-content-negotiation:2.2.3"

}

tasks.register('copyGenerated', Copy) {
    dependsOn 'openApiGenerate'
    from "${project.buildDir}/generated/src/main/kotlin"
    into 'src/main/kotlin'
}

tasks.register('cleanGenerated', Delete) {
    delete 'src/main/kotlin'
}
//
//tasks.named('sourcesJar') {
//    dependsOn ':libs:http-client:copyGenerated'
//}

tasks.named('detekt') {
//    dependsOn ':libs:http-client:copyGenerated'
    enabled = false
}

tasks.named('compileKotlin') {
    dependsOn ':libs:http-client:copyGenerated'
}

tasks.named('build') {
    dependsOn 'openApiGenerate'
    dependsOn ':libs:http-client:copyGenerated'
}

tasks.named('clean') {
    dependsOn ':libs:http-client:cleanGenerated'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    compilerOptions {
        allWarningsAsErrors = false
    }
}