import aQute.bnd.gradle.Bundle

plugins {
    id 'corda.common-publishing'
    id 'corda.osgi-test-conventions'
    id 'corda.common-library'
}

description "Sandbox Context Group Service"

configurations {
    cpis {
        canBeConsumed = false
        transitive = false
    }
}

dependencies {
    compileOnly 'org.osgi:osgi.core'
    compileOnly 'org.osgi:osgi.annotation'
    compileOnly 'org.osgi:org.osgi.service.component.annotations'
    compileOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation 'net.corda:corda-base'
    implementation 'net.corda:corda-application'
    implementation 'net.corda:corda-config-schema'

    api project(':libs:lifecycle:lifecycle')
    implementation project(':libs:cache:cache-caffeine')
    implementation project(':libs:configuration:configuration-core')
    implementation project(':libs:metrics')
    implementation project(':libs:packaging:packaging')
    implementation project(':libs:packaging:packaging-core')
    implementation project(':libs:sandbox')
    implementation project(':libs:utilities')
    implementation project(':libs:virtual-node:sandbox-group-context')

    implementation project(':components:virtual-node:cpk-read-service')
    implementation project(':components:configuration:configuration-read-service')

    implementation "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"

    runtimeOnly project(':components:virtual-node:sandbox-crypto')
    runtimeOnly project(':libs:sandbox-hooks')

    testImplementation 'net.corda:corda-serialization'

    testImplementation project(':testing:test-utilities')

    testCompileOnly 'org.osgi:osgi.core'
    testRuntimeOnly "org.apache.felix:org.apache.felix.framework:$felixVersion"
    testRuntimeOnly "org.apache.felix:org.apache.felix.scr:$felixScrVersion"
    testRuntimeOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"
    testRuntimeOnly "org.osgi:org.osgi.util.promise:$osgiUtilPromiseVersion"
    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"

    integrationTestImplementation project('test-impl-one')
    integrationTestImplementation project('test-impl-two')
    integrationTestImplementation project(':testing:sandboxes-testkit')
    integrationTestImplementation project(':testing:sandboxes:test-api')
    integrationTestImplementation 'net.corda:corda-application'
    integrationTestImplementation 'net.corda:corda-ledger-utxo'
    integrationTestImplementation project(':components:security-manager')
    integrationTestImplementation project(':libs:ledger:ledger-common-data')
    integrationTestImplementation project(':libs:ledger:ledger-utxo-data')
    integrationTestImplementation project(':testing:ledger:ledger-utxo-testkit')
    integrationTestImplementation project(':testing:security-manager-utilities')
    integrationTestImplementation project(':testing:test-utilities')
    integrationTestRuntimeOnly project(':components:virtual-node:sandbox-amqp')
    integrationTestRuntimeOnly project(':libs:application:application-impl')
    integrationTestRuntimeOnly project(':libs:crypto:cipher-suite-impl')
    integrationTestRuntimeOnly project(':libs:crypto:crypto-serialization-impl')
    integrationTestRuntimeOnly project(':libs:crypto:merkle-impl')
    integrationTestRuntimeOnly project(':libs:membership:membership-impl')
    integrationTestRuntimeOnly "org.apache.aries.spifly:org.apache.aries.spifly.dynamic.framework.extension:$ariesDynamicFrameworkExtensionVersion"
    integrationTestRuntimeOnly("org.apache.felix:org.apache.felix.framework.security:$felixSecurityVersion") {
        exclude group: 'org.osgi'
    }

    // Gather locations of CPIs to add into `resources`
    cpis project(path: ':testing:cpbs:crypto-custom-digest-one-consumer', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:crypto-custom-digest-two-consumer', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:sandbox-security-manager-one', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:sandbox-singletons-cpk', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:sandbox-contract-cpk', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:sandbox-messenger-cpk', configuration: 'cordaCPB')
}

def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from(configurations.cpis) {
        into 'META-INF'
        rename "(.*)-\\Q${version}\\E-package.cpb", "\$1.cpb"
    }
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
