pluginManagement {
    repositories {
        mavenLocal()
        def cordaUseCache = System.getenv("CORDA_USE_CACHE")
        if (cordaUseCache != null) {
            maven {
                url = "${artifactoryContextUrl}/${cordaUseCache}"
                name = "R3 Maven remote repositories"
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = settings.ext.find('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                    password = settings.ext.find('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
                }
            }
        } else {
            maven {
                url "${artifactoryContextUrl}/corda-releases"
                content {
                    includeGroupByRegex 'net\\.corda\\.plugins(\\..*)?'
                }
            }
            maven {
                url "${artifactoryContextUrl}/corda-os-maven"
                content {
                    includeGroupByRegex 'net\\.corda\\.cordapp(\\..*)?'
                }
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = settings.ext.find('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                    password = settings.ext.find('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
                }
            }
            gradlePluginPortal()
            maven {
                url "${artifactoryContextUrl}/engineering-tools-maven"
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = settings.ext.find('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                    password = settings.ext.find('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
                }
            }
        }
    }
    plugins {
        id 'net.corda.cordapp.cordapp-configuration' version cordaApiVersion
        id 'org.jetbrains.kotlin.jvm' version kotlinVersion
        id 'org.jetbrains.kotlin.plugin.allopen' version kotlinVersion
        id 'org.jetbrains.kotlin.plugin.jpa' version kotlinVersion
        id 'net.corda.plugins.cordapp-cpk' version cordaGradlePluginsVersion
        id 'net.corda.plugins.cordapp-cpb' version cordaGradlePluginsVersion
        id 'net.corda.plugins.quasar-utils' version cordaGradlePluginsVersion
        id 'com.r3.internal.gradle.plugins.r3ArtifactoryPublish' version internalPublishVersion
        id 'com.r3.internal.gradle.plugins.r3Publish' version internalPublishVersion
        id 'io.gitlab.arturbosch.detekt' version detektPluginVersion
        id 'com.github.ben-manes.versions' version gradleVersions
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
}

rootProject.name = 'corda-runtime-os'
include 'applications:examples:sandbox-app'
include 'applications:examples:sandbox-app:example-cpi'
include 'applications:examples:serialization-amqp:custom-serializer-poc'
include 'applications:examples:serialization-amqp:custom-serializer-poc:custom-serializer-poc-example-cpk-a'
include 'applications:examples:serialization-amqp:custom-serializer-poc:custom-serializer-poc-example-cpk-b'
include 'applications:examples:serialization-amqp:type-evolution-poc'
include 'applications:examples:serialization-amqp:type-evolution-poc:evolution-example-cpk'
include 'applications:p2p-gateway'
include 'applications:p2p-link-manager'
include 'applications:tools:flow-worker-setup'
include 'applications:tools:kafka-setup'
include 'applications:tools:p2p-test:app-simulator'
include 'applications:tools:p2p-test:p2p-configuration-publisher'
include 'applications:tools:p2p-test:cryptoservice-key-creator'
include 'applications:tools:p2p-test:network-map-creator'
include 'applications:tools:p2p-test:p2p-layer-deployment'
include 'applications:workers:release:combined-worker'
include 'applications:workers:release:crypto-worker'
include 'applications:workers:release:db-worker'
include 'applications:workers:release:flow-worker'
include 'applications:workers:release:rpc-worker'
include 'applications:workers:worker-common'
include 'applications:workers:workers-smoketest'
include 'components:configuration:configuration-rpcops-service'
include 'components:configuration:configuration-rpcops-service-impl'
include 'components:configuration:configuration-publish-service'
include 'components:configuration:configuration-publish-service-impl'
include 'components:configuration:configuration-read-service'
include 'components:configuration:configuration-read-service-impl'
include 'components:configuration:configuration-write-service'
include 'components:configuration:configuration-write-service-impl'
include 'components:crypto:crypto-client-impl'
include 'components:crypto:crypto-messaging-persistence-impl'
include 'components:crypto:crypto-persistence'
include 'components:crypto:crypto-service'
include 'components:crypto:crypto-service-impl'
include 'components:db:db-connection-manager'
include 'components:db:db-connection-manager-impl'
include 'components:domino-logic'
include 'components:flow:flow-mapper-service'
include 'components:flow:flow-service'
include 'components:gateway'
include 'components:http-rpc-gateway-comp'
include 'components:rbac-security-manager-service'
include 'components:install:install-service'
include 'components:install:install-service-file-based-impl'
include 'components:install:install-legacy'
include 'components:install:install-legacy:split-packages-one'
include 'components:install:install-legacy:split-packages-one:library-one'
include 'components:install:install-legacy:split-packages-two'
include 'components:install:install-legacy:split-packages-two:library-two'
include 'components:install:test-resources:contract-cpk'
include 'components:install:test-resources:workflow-cpk'
include 'components:install:test-resources:system-cpk'
include 'components:kafka-topic-admin'
include 'components:link-manager'
include 'components:membership:group-policy-impl'
include 'components:membership:membership-group-read-impl'
include 'components:membership:registration-static-network-impl'
include 'components:permissions:permission-cache-service'
include 'components:permissions:permission-management-service'
include 'components:permissions:permission-service'
include 'components:permissions:permission-storage-reader-service'
include 'components:permissions:permission-storage-writer-service'
include 'components:permissions:permission-validation-service'
include 'components:permissions:permission-rpc-ops-impl'
include 'components:virtual-node:cpi-info-read-service'
include 'components:virtual-node:cpi-info-read-service-impl'
include 'components:virtual-node:cpi-info-write-service'
include 'components:virtual-node:cpi-info-write-service-impl'
include 'components:virtual-node:cpk-read-service'
include 'components:virtual-node:cpk-read-service-impl'
include 'components:virtual-node:cpk-write-service'
include 'components:virtual-node:cpk-write-service-impl'
include 'components:virtual-node:cpk-service-common'
include 'components:virtual-node:sandbox-group-context-service'
include 'components:virtual-node:virtual-node-common'
include 'components:virtual-node:virtual-node-info-read-service'
include 'components:virtual-node:virtual-node-info-write-service'
include 'components:virtual-node:virtual-node-rpcops-service'
include 'components:virtual-node:virtual-node-rpcops-service-impl'
include 'components:virtual-node:virtual-node-write-service'
include 'components:virtual-node:virtual-node-write-service-impl'
include 'libs:application:application-impl'
include 'libs:chunking'
include 'libs:configuration:configuration-core'
include 'libs:configuration:configuration-datamodel'
include 'libs:configuration:configuration-endpoints'
include 'libs:configuration:configuration-publish'
include 'libs:configuration:configuration-publish-impl'
include 'libs:configuration:configuration-schema:messaging-configuration'
include 'libs:configuration:configuration-schema:p2p'
include 'libs:crypto:crypto-client'
include 'libs:crypto:crypto-impl'
include 'libs:crypto:delegated-signing'
include 'libs:datasync'
include 'libs:db:db-admin'
include 'libs:db:db-admin-impl'
include 'libs:db:db-core'
include 'libs:db:db-orm'
include 'libs:db:db-orm-impl'
include 'libs:db:osgi-integration-tests'
include 'libs:flows:flow-manager'
include 'libs:flows:flow-manager-impl'
include 'libs:flows:flow-mapper'
include 'libs:flows:flow-mapper-impl'
include 'libs:flows:session-manager'
include 'libs:flows:session-manager-impl'
include 'libs:http-rpc:http-rpc'
include 'libs:http-rpc:http-rpc-security-read'
include 'libs:http-rpc:http-rpc-tools'
include 'libs:http-rpc:json-serialization'
include 'libs:http-rpc:http-rpc-server'
include 'libs:http-rpc:http-rpc-server-impl'
include 'libs:http-rpc:http-rpc-stubs-impl'
include 'libs:http-rpc:ssl-cert-read'
include 'libs:http-rpc:http-rpc-common'
include 'libs:http-rpc:http-rpc-client'
include 'libs:http-rpc:http-rpc-test-common'
include 'libs:http-rpc:rbac-security-manager'
include 'libs:kafka-utils:topic-admin'
include 'libs:kafka-utils:topic-admin-impl'
include 'libs:kotlin-reflection'
include 'libs:kotlin-reflection:kotlin-reflection-test-api'
include 'libs:kotlin-reflection:kotlin-reflection-test-example'
include 'libs:ledger:notary'
include 'libs:lifecycle:lifecycle'
include 'libs:lifecycle:lifecycle-impl'
include 'libs:lifecycle:registry'
include 'libs:membership:membership-application'
include 'libs:membership:membership-conversion-impl'
include 'libs:membership:membership-http-rpc'
include 'libs:membership:membership-identity-impl'
include 'libs:membership:membership-internal'
include 'libs:membership:membership-impl'
include 'libs:messaging:db-messaging-impl'
include 'libs:messaging:inmemory-messaging-impl'
include 'libs:messaging:messaging'
include 'libs:messaging:messaging-impl'
include 'libs:messaging:kafka-message-bus-impl'
include 'libs:messaging:message-bus'
include 'libs:permissions:permission-cache'
include 'libs:permissions:permission-cache-impl'
include 'libs:permissions:permission-common'
include 'libs:permissions:permission-endpoint'
include 'libs:permissions:permission-manager'
include 'libs:permissions:permission-manager-impl'
include 'libs:permissions:permission-storage-common'
include 'libs:permissions:permission-storage-reader'
include 'libs:permissions:permission-storage-reader-impl'
include 'libs:permissions:permission-storage-writer'
include 'libs:permissions:permission-storage-writer-impl'
include 'libs:p2p-crypto'
include 'libs:permissions:permission-datamodel'
include 'libs:permissions:permission-validation'
include 'libs:permissions:permission-validation-impl'
include 'libs:permissions:permission-password'
include 'libs:sandbox'
include 'libs:sandbox-hooks'
include 'libs:sandbox-internal'
include 'libs:sandbox-internal:sandbox-cpk-library'
include 'libs:sandbox-internal:sandbox-cpk-one'
include 'libs:sandbox-internal:sandbox-cpk-two'
include 'libs:sandbox-internal:sandbox-cpk-three'
include 'libs:sandbox-internal:sandbox-irresolvable-cpk'
include 'libs:schema-registry:schema-registry'
include 'libs:schema-registry:schema-registry-impl'
include 'libs:security-manager'
include 'libs:serialization:serialization-checkpoint-api'
include 'libs:serialization:kryo-serializers'
include 'libs:serialization:serialization-amqp'
include 'libs:serialization:serialization-amqp:serializable-cpk-evolution-different-original'
include 'libs:serialization:serialization-amqp:serializable-cpk-evolution-different-replacement'
include 'libs:serialization:serialization-amqp:serializable-cpk-evolution-newer'
include 'libs:serialization:serialization-amqp:serializable-cpk-evolution-older'
include 'libs:serialization:serialization-amqp:serializable-cpk-one'
include 'libs:serialization:serialization-amqp:serializable-cpk-two'
include 'libs:serialization:serialization-amqp:serializable-cpk-three'
include 'libs:serialization:serialization-amqp:serializable-cpk-four'
include 'libs:serialization:serialization-amqp:serialization-cpk-library'
include 'libs:serialization:serialization-amqp:serializable-cpk-using-lib'
include 'libs:serialization:serialization-encoding'
include 'libs:serialization:serialization-internal'
include 'libs:serialization:serialization-kryo'
include 'libs:serialization:serialization-kryo:src:integrationTest:cpks:serializable-cpk-one'
include 'libs:serialization:serialization-kryo:src:integrationTest:cpks:serializable-cpk-two'
include 'libs:utilities'
include 'libs:virtual-node:sandbox-group-context'
include 'libs:virtual-node:virtual-node-endpoints'
include 'libs:virtual-node:virtual-node-info'
include 'libs:virtual-node:virtual-node-manager'
include 'libs:virtual-node:virtual-node-manager:test-resources:crypto-custom-digest-one-cpk'
include 'libs:virtual-node:virtual-node-manager:test-resources:crypto-custom-digest-one-consumer-cpk'
include 'libs:virtual-node:virtual-node-manager:test-resources:crypto-custom-digest-two-cpk'
include 'libs:virtual-node:virtual-node-manager:test-resources:crypto-custom-digest-two-consumer-cpk'
include 'libs:virtual-node:virtual-node-write'
include 'libs:virtual-node:virtual-node-write-impl'
include 'osgi-framework-api'
include 'osgi-framework-bootstrap'
include 'processors:crypto-processor'
include 'processors:db-processor'
include 'processors:flow-processor'
include 'processors:rpc-processor'
include 'testing:apps:test-app'
include 'testing:crypto-testkit'
include 'testing:db-testkit'
include 'testing:membership-testkit'
include 'testing:bundles:testing-cats'
include 'testing:bundles:testing-dogs'
include 'testing:cpbs:helloworld'
include 'testing:cpbs:sandbox-cpk-inject'
include 'testing:cpbs:sandbox-scr-cpk'
include 'testing:message-patterns'
include 'testing:test-utilities'

// The following logic dictates if we use the composite build gradle functionality,
// If this evaluates to true local source code will be used in place of binary dependencies.
// This is intended for local use only. The checks in place should prevent this from being triggered on a Jenkins server where we would always want to use the Binaries.

if ("${compositeBuild}".toBoolean() && file("${cordaApiLocation}").exists()) {
    includeBuild('../corda-api') {
        dependencySubstitution {
            substitute module('net.corda:corda-application') using project(':application')
            substitute module('net.corda:corda-base') using project(':base')
            substitute module('net.corda:corda-cipher-suite') using project(':cipher-suite')
            substitute module('net.corda:corda-api') using project(':corda-api')
            substitute module('net.corda:corda-crypto') using project(':crypto')
            substitute module('net.corda:corda-avro-schema') using project(':data:avro-schema')
            substitute module('net.corda:corda-config-schema') using project(':data:config-schema')
            substitute module('net.corda:corda-db-schema') using project(':data:db-schema')
            substitute module('net.corda:corda-topic-schema') using project(':data:topic-schema')
            substitute module('net.corda:corda-ledger') using project(':ledger')
            substitute module('net.corda:corda-membership') using project(':membership')
            substitute module('net.corda:corda-membership-conversion') using project(':membership-conversion')
            substitute module('net.corda:corda-membership-identity') using project(':membership-identity')
            substitute module('net.corda:corda-packaging') using project(':packaging')
            substitute module('net.corda:corda-packaging-avro-converters') using project(':packaging:packaging-avro-converters')
            substitute module('net.corda:corda-persistence') using project(':persistence')
            substitute module('net.corda:corda-serialization') using project(':serialization')
        }
    }
}
