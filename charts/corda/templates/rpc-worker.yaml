{{- $_ := set . "worker" "rpc" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "corda.workerName" . | quote }}
  labels:
    {{- include "corda.workerLabels" . | nindent 4 }}
  {{- if .Values.workers.rpc.service.annotations }}
  annotations: 
  {{- range $key, $value := .Values.workers.rpc.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end}}
spec:
  type: {{ .Values.workers.rpc.service.type }}
  {{- if .Values.workers.rpc.service.externalTrafficPolicy }}
  externalTrafficPolicy: {{ .Values.workers.rpc.service.externalTrafficPolicy }}
  {{- else if .Values.workers.rpc.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges: {{ .Values.workers.rpc.service.loadBalancerSourceRanges }}
  {{- end }}
  selector:
    {{- include "corda.workerSelectorLabels" . | nindent 4 }}
  ports:
  - name: http
    port: 443
    targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corda.workerName" . | quote }}
  labels:
    {{- include "corda.workerLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.workers.rpc.replicaCount }}
  selector:
    matchLabels:
      {{- include "corda.workerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "corda.workerAnnotations" . | nindent 8 }}
      labels:
        {{- include "corda.workerSelectorLabels" . | nindent 8 }}
    spec:
      {{- include "corda.workerSecurityContext" . | nindent 6 }}
      {{- include "corda.imagePullSecrets" . | nindent 6 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/component"
                  operator: In
                  values:
                  - rpc-worker
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ include "corda.workerName" . | quote }}
        image: {{ include "corda.workerImage" . }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
        {{- include "corda.workerResources" . | nindent 8 }}
        env:
        {{- include "corda.workerEnv" . | nindent 10 }}
        args:
        {{- include "corda.workerKafkaArgs" . | nindent 10 }}
        volumeMounts:
        {{- include "corda.workerVolumeMounts" . | nindent 10 }}
        ports:
          - name: http
            containerPort: 8888
        {{- if .Values.workers.rpc.debug.enabled }}
          - name: debug
            containerPort: 5005
        {{- end }}
          - name: monitor
            containerPort: 7000
        {{- if .Values.workers.rpc.profiling.enabled }}
          - name: profiling
            containerPort: 10045
        {{- end }}
        {{- if not .Values.workers.rpc.debug.enabled }}
        readinessProbe:
          httpGet:
            path: /status
            port: monitor
          periodSeconds: 10
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /isHealthy
            port: monitor
          periodSeconds: 10
          failureThreshold: 1
        startupProbe:
          httpGet:
            path: /isHealthy
            port: monitor
          periodSeconds: 5
          failureThreshold: 20
        {{- end }}
      volumes:
      {{- include "corda.workerVolumes" . | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
