# Override file suitable for local deployment of the Corda Helm chart against version 0.1.0 of the corda-dev prereqs
# Helm chart and a state-manager deployed via bitnami postgres helm chart with the overrides from
# `state-manager-postgres.yaml`.
#
# Then deploy the state manager using the bitnami helm chart
# helm install state-manager-db oci://registry-1.docker.io/bitnamicharts/postgresql -n corda --version "12.1.0" \
# -f ./state-manager-postgres.yaml  \
# --timeout 10m \
# --wait
#
# Then deploy Corda using
#  helm upgrade --install corda -n corda \
#  charts/corda \
#  --values values-prereqs.yaml \
#  --values state-manager.yaml \
#  --wait
#
#
# NOTE: This assumes you deploy the above in the same `corda` namespace, so that domain names containing just the service
# name are resolved (i.e. prereqs-postgresql instead of prereqs-postgresql.<namespace>). If that is not the case, you
# might need to add the namespace as a suffix.
bootstrap:
  db:
    stateManager:
      flow:
        username:
          value: "postgres"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "postgres-password"
      flowMapper:
        username:
          value: "postgres"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "postgres-password"
      tokenSelection:
        username:
          value: "postgres"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "postgres-password"
workers:
  flow:
    stateManager:
      db:
        host: "state-manager-db-postgresql"
        username:
          value: "statemanager-user"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "password"
  flowMapper:
    stateManager:
      db:
        host: "state-manager-db-postgresql"
        username:
          value: "statemanager-user"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "password"

  tokenSelection:
    stateManager:
      db:
        host: "state-manager-db-postgresql"
        username:
          value: "statemanager-user"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "password"

  rest:
    stateManager:
      db:
        host: "state-manager-db-postgresql"
        username:
          value: "statemanager-user"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "password"
  crypto:
    stateManager:
      db:
        host: "state-manager-db-postgresql"
        username:
          value: "statemanager-user"
        password:
          valueFrom:
            secretKeyRef:
              name: "state-manager-db-postgresql"
              key: "password"