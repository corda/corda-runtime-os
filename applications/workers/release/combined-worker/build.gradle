plugins {
    id 'corda.common-publishing'
    id 'corda.quasar-app'
    id 'corda.docker-app'
}

description 'Combined Worker'

osgiRun {
    frameworkProperties.putAll(
        'org.osgi.framework.security': 'osgi'
    )
}

quasar {
    excludePackages.addAll([
        'org.eclipse.jetty**',
        'net.corda.membership**'
    ])
}

dependencies {
    // for BundleManager
    compileOnly "org.osgi:osgi.core"
    compileOnly 'org.osgi:org.osgi.service.component.annotations'

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation project(':applications:workers:worker-common')
    implementation project(":components:security-manager")
    implementation project(':libs:application:application-db-setup')
    implementation project(':libs:configuration:configuration-core')
    implementation project(':libs:configuration:configuration-validation')
    implementation project(':libs:crypto:crypto-config-impl')
    implementation project(':libs:crypto:crypto-core')
    implementation project(':libs:crypto:crypto-impl')
    implementation project(':processors:crypto-processor')
    implementation project(':processors:db-processor')
    implementation project(':processors:flow-processor')
    implementation project(':processors:member-processor')
    implementation project(':processors:rpc-processor')
    implementation project(':processors:uniqueness-processor')
    implementation project(':processors:link-manager-processor')
    implementation project(':processors:gateway-processor')
    implementation "info.picocli:picocli:$picocliVersion"
    implementation 'net.corda:corda-base'
    implementation 'net.corda:corda-config-schema'

    runtimeOnly "org.apache.aries.spifly:org.apache.aries.spifly.dynamic.framework.extension:$ariesDynamicFrameworkExtensionVersion"
    runtimeOnly "net.corda:corda-application"
    runtimeOnly "com.typesafe:config:$typeSafeConfigVersion"
    runtimeOnly "org.apache.felix:org.apache.felix.scr:$felixScrVersion"
    runtimeOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"
    runtimeOnly "org.osgi:org.osgi.util.function:$osgiUtilFunctionVersion"
    runtimeOnly "org.osgi:org.osgi.util.promise:$osgiUtilPromiseVersion"
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:2.13.0"
    runtimeOnly "org.apache.felix:org.apache.felix.configadmin:$felixConfigAdminVersion"

//  swap these around in order to use a "real" Kafka message bus rather than the emulation.
    runtimeOnly project(':libs:messaging:db-message-bus-impl')
//    runtimeOnly project(':libs:messaging:kafka-message-bus-impl')

    runtimeOnly("org.apache.felix:org.apache.felix.framework.security:$felixSecurityVersion") {
        exclude group: 'org.apache.felix'
        exclude group: 'org.osgi'
    }
}
