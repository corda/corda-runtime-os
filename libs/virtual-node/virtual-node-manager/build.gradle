import aQute.bnd.gradle.Bundle

plugins {
    id 'com.r3.internal.gradle.plugins.r3Publish'
    id 'corda.common-library'
    id 'corda.osgi-test-conventions'
    id 'org.jetbrains.kotlin.jvm'
}

description "Virtual Node Manager"

configurations {
    cpis {
        canBeConsumed = false
        transitive = false
    }
}

dependencies {
    compileOnly 'org.osgi:osgi.annotation'
    compileOnly 'org.osgi:org.osgi.service.component.annotations'

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation "net.corda:corda-application"
    implementation "net.corda:corda-base"
    implementation "net.corda:corda-packaging"
    implementation "net.corda:corda-crypto"
    implementation "net.corda:corda-cipher-suite"

    implementation project(":libs:crypto:crypto-internal")
    implementation project(":libs:sandbox")

    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"

    integrationTestCompileOnly "org.osgi:org.osgi.service.cm:$osgiCmVersion"
    integrationTestCompileOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"
    integrationTestImplementation "org.osgi:org.osgi.util.promise:$osgiUtilPromiseVersion"
    integrationTestImplementation "net.corda:corda-application"
    integrationTestImplementation "net.corda:corda-crypto"
    integrationTestImplementation "net.corda:corda-cipher-suite"
    integrationTestImplementation project(":libs:crypto:crypto-impl")

    integrationTestRuntimeOnly "org.apache.felix:org.apache.felix.configadmin:$felixConfigAdminVersion"
    integrationTestRuntimeOnly project(":libs:sandbox-hooks")

    // Use custom configurations in consumer cpks to gather location of cpis to add into `resources`
    // Note:  we define the configuration `cpiForTest` in each project's gradle script.
    cpis project(path: 'test-resources:crypto-custom-digest-one-consumer-cpk', configuration: 'cpiForTest')
    cpis project(path: 'test-resources:crypto-custom-digest-two-consumer-cpk', configuration: 'cpiForTest')
}

def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from configurations.cpis
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
