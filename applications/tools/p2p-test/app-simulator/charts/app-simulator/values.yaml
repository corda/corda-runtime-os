# Default values for the app-simulator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- override chart fullname
fullnameOverride: ""

# -- override chart name
nameOverride: "app-simulator"

image:
  # -- image registry
  registry: "corda-os-docker.software.r3.com"
  # -- image repository
  repository: "corda-os-app-simulator"
  # -- overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- image pull secrets
imagePullSecrets: []

# -- the image policy
imagePullPolicy: Always

# default resource limits and requests configuration for the app simulator containers
resources:
  # -- the default CPU/memory resource limits for the app simulator containers
  limits: {}
  # -- the default CPU/memory resource request for the app simulator containers
  requests: {}

# -- node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: { }

# Database configuration
db:
  # App Simulator database configuration
  appSimulator:
    # -- the k8s namespace the database is deployed into
    namespace: ""
    # -- the cluster database host (required)
    host: "db-postgresql"
    # -- the cluster database type
    type: "postgresql"
    # -- the cluster database port
    port: 5432 
    # -- the cluster database user
    user: simulator
    # -- the name of the app simulator database
    database: app_simulator
    # -- the cluster database password (ignored if existingSecret is set, otherwise required)
    password: ""
    # -- the name of an existing secret containing the cluster database password with a key of 'password'
    #existingSecret: ""
  clientImage:
    # -- registry for image containing a db client, used to set up the db
    registry: ""
    # -- repository for image containing a db client, used to set up the db
    repository: postgres
    # -- tag for image containing a db client, used to set up the db
    tag: 14.4

# Kafka configuration
kafka:
  # -- comma-separated list of Kafka bootstrap servers (required)
  bootstrapServers: "prereqs-kafka:9092"
  # TLS configuration for client connections to Kafka
  tls:
    # -- indicates whether TLS should be used for client connections to Kafka
    enabled: true
    # if TLS is enabled, the truststore configuration for client connections to Kafka
    truststore:
      # if TLS is enabled, details of an existing Kubernetes secret containing the truststore for client connections to Kafka
      valueFrom:
        # -- the truststore secret key reference
        secretKeyRef:
          # -- the truststore secret name
          name: "prereqs-kafka-0-tls"
          # -- the truststore secret key
          key: "ca.crt"
      # -- if TLS is enabled, the type of the truststore for client connections to Kafka; one of PEM or JKS
      type: "PEM"
      # -- if TLS is enabled, the password for the truststore for client connections to Kafka, if any
      password: 
        # -- the truststore password
        value: ""
        # -- the truststore password secret configuration; used in preference to value if name is set
        valueFrom:
          # -- the truststore password secret key reference
          secretKeyRef:
            # -- the truststore password secret name
            name: ""
            # -- the truststore password secret key
            key: ""
  # SASL configuration for client connection to Kafka
  sasl:
    # -- SASL mechanism for client connection to Kafka
    mechanism: "SCRAM-SHA-256"
    # -- enable/disable SASL for client connection to Kafka
    enabled: true
    # default SASL username configuration for client connection to Kafka
    username: 
      # -- the default SASL username for client connection to Kafka
      value: "user"
      # the default SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
      valueFrom:
        # the default SASL username secret key reference for client connection to Kafka
        secretKeyRef:
          # -- the default SASL username secret name for client connection to Kafka
          name: ""
          # -- the default SASL username secret key for client connection to Kafka
          key: ""
    # default SASL password configuration for client connection to Kafka
    password: 
      # -- the default SASL password for client connection to Kafka
      value: ""
      # the default SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
      valueFrom:
        # the default SASL password secret key reference for client connection to Kafka
        secretKeyRef:
          # -- the default SASL password secret name for client connection to Kafka
          name: "prereqs-kafka-jaas"
          # -- the default SASL password secret key  for client connection to Kafka
          key: "client-passwords"

# app simulator configuration
appSimulators:
  kafka:
    # if kafka.sasl.enabled, the credentials to connect to Kafka with for the app simulator
    sasl:
      # app simulator SASL username configuration for client connection to Kafka; defaults to kafka.sasl.username
      username:
        # -- the app simulator SASL username for client connection to Kafka
        value: ""
        # the boostrap SASL username secret configuration for client connection to Kafka; used in preference to value if name is set
        valueFrom:
          # the app simulator SASL username secret key reference for client connection to Kafka
          secretKeyRef:
            # -- the app simulator SASL username secret name for client connection to Kafka
            name: ""
            # -- the app simulator SASL username secret key for client connection to Kafka
            key: ""
      # app simulator SASL password configuration for client connection to Kafka; defaults to kafka.sasl.password
      password:
        # -- the app simulator SASL password for client connection to Kafka
        value: ""
        # the app simulator SASL password secret configuration for client connection to Kafka; used in preference to value if name is set
        valueFrom:
          # the app simulator SASL password secret key reference for client connection to Kafka
          secretKeyRef:
            # -- the app simulator SASL password secret name for client connection to Kafka
            name: ""
            # -- the app simulator SASL password secret key for client connection to Kafka
            key: ""
  sender:
    enabled: false
    # -- should we write metadata into the database
    sendMessagesToDatabase: true
    # -- peer x500Name
    peerX500Name: ""
    # -- peer groupId
    peerGroupId: ""
    # -- our x500Name
    ourX500Name: ""
    # -- our groupId
    ourGroupId: ""
    # -- sender app simulator replica count
    replicaCount: 1
    # -- the number of parallel clients/threads (per replica) sending messages to Kafka.
    parallelClientsPerReplica: 1
    # -- the load generation type, either "ONE_OFF" generates a specific number of messages or "CONTINUOUS" send messages in a closed loop.
    loadGenerationType: "ONE_OFF"
    # -- The size of the payload for the generated messages in bytes.
    messageSizeBytes: 10000
    # -- The delay between each batch of messages, in ISO-8601 duration format.
    interBatchDelay: "PT0S"
    # -- The number of messages sent in parallel on every batch.
    batchSize: 50
    # -- The total number of messages to send (only used when loadGenerationType is ONE_OFF).
    totalNumberOfMessages: 50
    expireMessages:
      # -- Enable message expiry.
      enabled: false
      # -- The time after (in ISO-8601 duration format) which the message will expire in seconds, if message expiry is enabled. This is used
      # to calculate the TTL of the generated messages, which corresponds to the current time plus the duration specified by `expireAfterTime`.
      expireAfterTime: "PT180S"
    debug:
      # -- run receiver app simulator worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the receiver app simulator worker until the debugger is attached
      suspend: false
  receiver:
    enabled: false
    # -- receiver app simulator replica count
    replicaCount: 1
    # -- the number of parallel clients/threads (per replica) consuming messages from Kafka.
    parallelClientsPerReplica: 1
    debug:
      # -- run receiver app simulator worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the receiver app simulator worker until the debugger is attached
      suspend: false
    topicCreation:
      # - the number of partitions for the p2p.app.received_msg topic
      numPartitions: 10
      # - the replicationFactor for the p2p.app.received_msg topic
      replicationFactor: 1
  dbSink:
    enabled: false
    # -- database sink app simulator replica count
    replicaCount: 1
    # -- the number of parallel clients/threads (per replica) writing messages to the database.
    parallelClientsPerReplica: 1
    debug:
      # -- run database sink app simulator with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the database sink app simulator until the debugger is attached
      suspend: false
