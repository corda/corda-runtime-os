{{- if or ( not .Values.config.encryption.salt.valueFrom.secretKeyRef.name) ( not .Values.config.encryption.passphrase.valueFrom.secretKeyRef.name) }}
apiVersion: v1
kind: Secret
{{- $name := printf "%s-config" (include "corda.fullname" .) }}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace $name }}
metadata:
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook": pre-install
  name: {{ $name }}
  labels:
    {{- include "corda.labels" . | nindent 4 }}
type: Opaque
data:
{{- if (not .Values.config.encryption.salt.valueFrom.secretKeyRef.name) }}
{{- if .Values.config.encryption.salt.value }}
  salt: {{ .Values.config.encryption.salt.value }}
{{- else }}
{{- if $existingSecret }}
  salt: {{ index $existingSecret.data "salt" }}
{{- else }}
  salt: {{ randAlphaNum 32 | b64enc | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- if (not .Values.config.encryption.passphrase.valueFrom.secretKeyRef.name) }}
{{- if .Values.config.encryption.passphrase.value }}
  passphrase: {{ .Values.config.encryption.passphrase.value }}
{{- else }}
{{- if $existingSecret }}
  passphrase: {{ index $existingSecret.data "passphrase" }}
{{- else }}
  passphrase: {{ randAlphaNum 32 | b64enc | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


