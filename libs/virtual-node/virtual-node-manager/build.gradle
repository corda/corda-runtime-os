import aQute.bnd.gradle.Bundle

plugins {
    id 'com.r3.internal.gradle.plugins.r3Publish'
    id 'corda.common-library'
    id 'corda.osgi-test-conventions'
    id 'org.jetbrains.kotlin.jvm'
}

description "Virtual Node Manager"

configurations {
    cpis {
        canBeConsumed = false
        transitive = false
    }
}

dependencies {
    compileOnly 'org.osgi:osgi.annotation'
    compileOnly 'org.osgi:org.osgi.service.component.annotations'

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation "net.corda:corda-application"
    implementation "net.corda:corda-base"
    implementation "net.corda:corda-packaging"
    implementation "net.corda:corda-crypto"
    implementation "net.corda:corda-cipher-suite"

    implementation project(":libs:crypto:crypto-client")
    runtimeOnly project(':libs:crypto:crypto-impl')
    implementation project(":libs:sandbox")

    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"

    integrationTestImplementation project(':testing:sandboxes')
    integrationTestImplementation "net.corda:corda-application"
    integrationTestImplementation "net.corda:corda-crypto"
    integrationTestImplementation "net.corda:corda-cipher-suite"
    integrationTestRuntimeOnly project(':libs:crypto:crypto-impl')
    integrationTestRuntimeOnly project(':libs:lifecycle:lifecycle-impl')
    integrationTestRuntimeOnly project(':libs:messaging:inmemory-messaging-impl')

    // Gather locations of CPIs to add into `resources`
    cpis project(path: 'test-resources:crypto-custom-digest-one-consumer-cpk', configuration: 'cordaCPB')
    cpis project(path: 'test-resources:crypto-custom-digest-two-consumer-cpk', configuration: 'cordaCPB')
}

def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from(configurations.cpis) {
        into 'META-INF'
        rename "(.*)-\\Q${version}\\E-package.cpb", "\$1.cpb"
    }
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
