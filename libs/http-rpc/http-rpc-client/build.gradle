plugins {
    id 'com.r3.internal.gradle.plugins.r3Publish'
    id 'corda.common-library'
}
description 'Corda HTTP RPC Client'

dependencies {

    compileOnly "org.osgi:osgi.annotation"

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation "net.corda:corda-base"
    implementation "net.corda:corda-application"


    implementation 'net.corda.kotlin:kotlin-stdlib-jdk8-osgi'
    implementation "org.apache.commons:commons-lang3:$commonsLangVersion"
    implementation "net.corda:corda-crypto"

    implementation project(":libs:http-rpc:http-rpc")
    implementation project(":libs:http-rpc:http-rpc-common")
    implementation project(":libs:http-rpc:http-rpc-tools")
    implementation project(":libs:http-rpc:json-serialization")

    implementation "com.konghq:unirest-java:$unirestVersion"
    implementation "com.konghq:unirest-objectmapper-jackson:$unirestVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation project(":testing:test-utilities")

    testImplementation project(":libs:http-rpc:http-rpc-test-common")

    testRuntimeOnly 'org.osgi:osgi.core'

    integrationTestImplementation project(":libs:http-rpc:http-rpc-server")
    integrationTestImplementation project(":libs:http-rpc:http-rpc-server-impl")
    integrationTestImplementation project(":libs:http-rpc:http-rpc-security-read")
    integrationTestImplementation project(':libs:http-rpc:http-rpc-stubs-impl')
    integrationTestImplementation project(':libs:utilities')
    integrationTestImplementation project(':libs:http-rpc:ssl-cert-read')
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

tasks.register('integrationTest', Test) {
    description = "Runs integration tests."

    testClassesDirs = project.sourceSets["integrationTest"].output.classesDirs
    classpath = project.sourceSets["integrationTest"].runtimeClasspath
}
