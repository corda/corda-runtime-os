import aQute.bnd.gradle.Bundle

plugins {
    id 'corda.common-publishing'
    id 'corda.osgi-test-conventions'
    id 'corda.common-library'
}

description "Sandbox Context Group Service"

configurations {
    cpis {
        canBeConsumed = false
        transitive = false
    }
}

dependencies {
    compileOnly 'org.osgi:osgi.core'
    compileOnly 'org.osgi:osgi.annotation'
    compileOnly "org.osgi:org.osgi.service.component.annotations"
    compileOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation project(":libs:packaging:packaging")
    implementation "net.corda:corda-base"
    implementation "net.corda:corda-avro-schema"
    implementation "net.corda:corda-topic-schema"
    implementation "net.corda:corda-config-schema"

    api project(":libs:lifecycle:lifecycle")
    implementation project(":libs:cache:cache-caffeine")
    implementation project(":libs:configuration:configuration-core")
    implementation project(":libs:crypto:crypto-core")
    implementation project(":libs:metrics")
    implementation project(':libs:packaging:packaging-core')
    implementation project(':libs:virtual-node:sandbox-group-context')
    implementation project(':libs:sandbox')

    implementation project(":components:virtual-node:cpk-read-service")
    implementation project(":components:configuration:configuration-read-service")

    implementation "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"

    runtimeOnly project(':libs:sandbox-hooks')

    testImplementation project(":libs:lifecycle:lifecycle-impl")
    testImplementation project(":libs:lifecycle:registry")
    testImplementation 'net.corda:corda-serialization'

    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation project(':testing:test-utilities')

    testCompileOnly 'org.osgi:osgi.core'
    testRuntimeOnly "org.apache.felix:org.apache.felix.framework:$felixVersion"
    testRuntimeOnly "org.apache.felix:org.apache.felix.scr:$felixScrVersion"
    testRuntimeOnly "org.osgi:org.osgi.service.component:$osgiServiceComponentVersion"
    testRuntimeOnly "org.osgi:org.osgi.util.promise:$osgiUtilPromiseVersion"

    integrationTestImplementation project('test-impl-one')
    integrationTestImplementation project('test-impl-two')
    integrationTestImplementation project(':testing:sandboxes')
    integrationTestImplementation project(':testing:sandboxes:test-api')
    integrationTestImplementation 'net.corda:corda-application'
    integrationTestImplementation project(':components:security-manager')
    integrationTestImplementation project(':testing:security-manager-utilities')
    integrationTestImplementation project(':testing:test-utilities')
    integrationTestRuntimeOnly project(':libs:crypto:cipher-suite-impl')
    integrationTestRuntimeOnly project(':libs:lifecycle:lifecycle-impl')
    integrationTestRuntimeOnly project(':libs:messaging:db-message-bus-impl')
    integrationTestRuntimeOnly project(':libs:messaging:messaging-impl')
    integrationTestRuntimeOnly("org.apache.felix:org.apache.felix.framework.security:$felixSecurityVersion") {
        exclude group: 'org.osgi'
    }

    // Gather locations of CPIs to add into `resources`
    cpis project(path: ':testing:cpbs:crypto-custom-digest-one-consumer', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:crypto-custom-digest-two-consumer', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:sandbox-security-manager-one', configuration: 'cordaCPB')
    cpis project(path: ':testing:cpbs:sandbox-singletons-cpk', configuration: 'cordaCPB')
}

def integrationTestResources = tasks.named('processIntegrationTestResources', ProcessResources) {
    from(configurations.cpis) {
        into 'META-INF'
        rename "(.*)-\\Q${version}\\E-package.cpb", "\$1.cpb"
    }
}

tasks.named('testingBundle', Bundle) {
    dependsOn integrationTestResources
}
