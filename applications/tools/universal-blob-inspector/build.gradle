apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'corda.common-publishing'

description "Corda Universal Blob Inspector"

dependencies {
    // Use the Kotlin standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'

    // AMQP support
    implementation "org.apache.qpid:proton-j:$protonjVersion"

    // Snappy (de)compression
    implementation "org.iq80.snappy:snappy:$snappyVersion"

    // Command line parsing
    implementation "info.picocli:picocli:$picocliVersion"

    implementation libs.jackson.databind

    testImplementation libs.bundles.test
}

ext {
    cordaEnableFormatting = true
}

tasks.named('jar', Jar) {
    destinationDirectory = layout.buildDirectory.dir('bin')
    archiveBaseName = "corda-universal-blob-inspector"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes["Main-Class"] = 'net.corda.blobinspector.AppKt'
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// for debugging purpose: in this way, you don't need to delete and create a new jar
tasks.register("runBlobInspectorCommand", JavaExec) {
    mainClass = "net.corda.blobinspector.AppKt"
    classpath = sourceSets.main.runtimeClasspath
    args = ["path_to_binary_file", "-oa"]
}