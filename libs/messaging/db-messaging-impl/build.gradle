plugins {
    id 'corda.common-library'
    id 'com.r3.internal.gradle.plugins.r3Publish'
}

description 'Database Messaging API Implementation'

dependencies {
    compileOnly "org.osgi:osgi.annotation:$osgiVersion"
    compileOnly "org.osgi:org.osgi.service.component.annotations:$osgiScrAnnotationVersion"

    implementation platform("net.corda:corda-api:$cordaApiVersion")
    implementation "com.typesafe:config:$typeSafeConfigVersion"
    implementation "net.corda:corda-base"
    implementation "com.zaxxer:HikariCP:$hikariCpVersion"
    implementation "com.google.guava:guava:$guavaVersion"
    implementation project(":libs:lifecycle:lifecycle")
    implementation project(":libs:messaging:messaging")
    implementation project(":libs:schema-registry:schema-registry")


    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"

    integrationTestImplementation "com.h2database:h2:$h2Version"
    integrationTestImplementation "org.postgresql:postgresql:$postgresDriverVersion"
    integrationTestImplementation "com.microsoft.sqlserver:mssql-jdbc:$sqlServerDriverVersion"
    integrationTestImplementation "com.oracle.database.jdbc:ojdbc6:$oracleDriverVersion"
    integrationTestImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    integrationTestImplementation "org.testcontainers:mssqlserver:$sqlServerTestContainersVersion"
    integrationTestImplementation "org.testcontainers:postgresql:$postgresTestContainersVersion"
    integrationTestImplementation "org.testcontainers:oracle-xe:$oracleTestContainersVersion"
    integrationTestImplementation "io.dropwizard.metrics:metrics-core:$dropwizardMetricsVersion"

}

/**
 * TODO: Once the new setup to perform integration testing under OSGi using the bootstrapper is ready,
 *       we can migrate to it and remove the below.
 */
sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

tasks.register('integrationTest', Test) {
    description = "Runs integration tests."

    testClassesDirs = project.sourceSets["integrationTest"].output.classesDirs
    classpath = project.sourceSets["integrationTest"].runtimeClasspath
}
