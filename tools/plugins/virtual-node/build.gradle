plugins {
    id 'distribution'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.kapt'
    id 'corda.cli-plugin-packager'
    id 'corda.common-publishing'
}

ext {
    releasable = false
}

group 'net.corda.cli.deployment'

dependencies {

    implementation project(":libs:virtual-node:virtual-node-endpoints-maintenance")
    implementation project(":libs:virtual-node:cpi-upload-endpoints")

    implementation project(":tools:plugins:plugins-common")
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compileOnly "org.pf4j:pf4j:$pf4jVersion"
    compileOnly "net.corda.cli.host:api:$pluginHostVersion"

    kapt "org.pf4j:pf4j:$pf4jVersion"
    kapt "info.picocli:picocli:$picocliVersion"

    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation "org.pf4j:pf4j:$pf4jVersion"
    testCompileOnly "net.corda.cli.host:api:$pluginHostVersion"
}

cliPlugin {
    cliPluginClass = 'net.corda.cli.plugins.vnode.VirtualNodeCliPlugin'
    cliPluginDescription = 'A CLI plug-in for operations on Virtual Node'
}

tasks.named("installDist") {
    dependsOn cliPlugin
    def homePath = System.properties['user.home']
    from cliPlugin
    into "$homePath/.corda/cli/plugins"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId "${cliPlugin.cliPluginId.get()}-cli-plugin"
            groupId project.group
            artifact cliPluginTask
        }
    }
}
