# Default values for corda.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- override chart fullname
fullnameOverride: ""

# -- override chart name
nameOverride: ""

# worker and cli image defaults
image:
  # -- worker image registry
  registry: "corda-os-docker.software.r3.com"
  # -- worker image tag, defaults to Chart appVersion
  tag: ""

# -- image pull secrets
imagePullSecrets: []

# -- the image policy
imagePullPolicy: Always

# default resource limits and requests configuration for the Corda containers
resources:
  # -- the default CPU/memory resource limits for the Corda containers
  limits: {}
  # -- the default CPU/memory resource request for the Corda containers
  requests: {}

# -- common labels to add to all workers
labels: {}

# Logging configuration
logging:
  # -- log format; "json" or "text"
  format: "json"
  # -- log level; one of "all", "trace", "debug", "info", "warn" (the default), "error", "fatal", or "off"
  level: "warn"

# Metrics configuration
metrics:
  # -- enable scraping of worker metrics through Prometheus annotations
  scrape: true

# -- Path on Kubernetes hosts to mount on Corda workers for collecting dumps
dumpHostPath: ""

# -- Enables capturing JVM heap dumps from Corda workers on an OutOfMemory error
heapDumpOnOutOfMemoryError: false

# -- node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# Database configuration
db:
  # Cluster database configuration
  cluster:
    # -- the cluster database host (required)
    host: ""
    # -- the cluster database type
    type: "postgresql"
    # -- the cluster database port
    port: 5432
    # -- the cluster database user
    user: user
    # -- the name of the cluster database
    database: cordacluster
    # -- the cluster database password (ignored if existingSecret is set, otherwise required)
    password: ""
    # -- the name of an existing secret containing the cluster database password with a key of 'password'
    existingSecret: ""
  clientImage:
    # -- registry for image containing a db client, used to set up the db
    registry: ""
    # -- repository for image containing a db client, used to set up the db
    repository: postgres
    # -- tag for image containing a db client, used to set up the db
    tag: "14.4"

# Kafka configuration
kafka:
  # -- comma-separated list of Kafka bootstrap servers (required)
  bootstrapServers: ""
  # -- prefix to use for Kafka topic names (to support the use of a single Kafka cluster by multiple Corda clusters)
  topicPrefix: ""
  # TLS configuration for client connections to Kafka
  tls:
    # -- indicates whether TLS should be used for client connections to Kafka
    enabled: false
    # if TLS is enabled, the truststore configuration for client connections to Kafka
    truststore:
      # if TLS is enabled, details of an existing Kubernetes secret containing the truststore for client connections to Kafka
      secretRef:
        # -- if TLS is enabled, the name of an existing Kubernetes secret containing the truststore for client connections to Kafka; blank if no truststore is required
        name: ""
        # -- if TLS is enabled, the name of an existing Kubernetes secret containing the truststore for client connections to Kafka
        key: "ca.crt"
      # -- if TLS is enabled, the type of the truststore for client connections to Kafka; one of PEM or JKS
      type: "PEM"
      # -- if TLS is enabled, the password for the truststore for client connections to Kafka, if any
      password: ""
  # SASL configuration for client connection to Kafka
  sasl:
    # -- SASL username for client connection to Kafka
    username: "user"
    # -- SASL password for client connection to Kafka
    password: ""
    # -- SASL mechanism for client connection to Kafka
    mechanism: "SCRAM-SHA-256"
    # -- enable/disable SASL for client connection to Kafka
    enabled: false

# Configuration for cluster bootstrap
bootstrap:

  # Configuration for the initial user created with admin permissions
  initialAdminUser:
    # -- Username for the initial admin user
    username: "admin"
    # -- Password for the initial admin user; generated if not specified
    password: ""
    # Reference to a Kubernetes secret that holds the initial admin user credentials to be used in preference to any provided via username and password
    secretRef:
      # -- If specified, the name of an existing secret that contains the initial admin user credentials to be used in preference to any provided via username and password
      name: ""
      # -- The key name for the secret entry containing the initial admin user's username
      usernameKey: "username"
      # -- The key name for the secret entry containing the initial admin user's password
      passwordKey: "password"

  # Configuration for database bootstrap
  db:
    # -- Indicates whether DB bootstrap is enabled as part of installation
    enabled: true
    # crypto configuration
    crypto:
      # JDBC connection pool configuration for crypto DB
      dbConnectionPool:
        # -- maximum JDBC connection pool size for crypto DB
        maxSize: 5
    # RBAC configuration
    rbac:
      # JDBC connection pool configuration for RBAC DB
      dbConnectionPool:
        # -- maximum JDBC connection pool size for RBAC DB
        maxSize: 5

  # Configuration for RBAC roles bootstrap
  rbac:
    # -- Indicates whether RBAC roles bootstrapping is enabled as part of installation
    enabled: true

  # Configuration for Kafka bootstrap
  kafka:
    # -- Indicates whether Kafka bootstrap is enabled as part of installation
    enabled: true
    # -- Specifies whether existing topics with the given prefix should be deleted before trying to create new ones (deletes all existing topics if no prefix is given)
    cleanup: false
    # -- Kafka topic partitions
    partitions: 10
    # -- Kafka topic replicas
    replicas: 3

  # Configuration for CLI image used for bootstrap
  image:
    # -- CLI image registry; defaults to image.registry
    registry: ""
    # -- CLI image repository
    repository: "corda-os-plugins"
    # -- CLI default tag; defaults to image.tag
    tag: ""

  # resource limits and requests configuration for the bootstrap containers
  resources:
    # -- the CPU/memory resource requests for the bootstrap containers
    requests: { }
    # -- the CPU/memory resource limits for the bootstrap containers
    limits: { }

  # node selector for the bootstrap containers
  nodeSelector: { }

# worker configuration
workers:
  # crypto worker configuration
  crypto:
    # crypto worker image configuration
    image:
      # -- crypto worker image registry, defaults to image.registry
      registry: ""
      # -- crypto worker image repository
      repository: "corda-os-crypto-worker"
      # -- crypto worker image tag, defaults to image.tag
      tag: ""
    # -- crypto worker replica count
    replicaCount: 1
    # -- additional Java options for the crypto worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # -- extra environment variables
    extraEnvVars: []
    # -- Kubernetes labels
    labels: {}
    # crypto worker debug configuration
    debug:
      # -- run crypto worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the crypto worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
    profiling:
      # -- run crypto worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the crypto worker containers
    resources:
      # -- the CPU/memory resource requests for the crypto worker containers
      requests: {}
      # -- the CPU/memory resource limits for the crypto worker containers
      limits: {}
    # crypto worker JDBC connection pool configuration for cluster DB
    clusterDbConnectionPool:
      # -- crypto worker maximum JDBC connection pool size for cluster DB
      maxSize: 5

  # DB worker configuration
  db:
    # DB worker image configuration
    image:
      # -- DB worker image registry, defaults to image.registry
      registry: ""
      # -- DB worker image repository
      repository: "corda-os-db-worker"
      # -- DB worker image tag, defaults to image.tag
      tag: ""
    # -- DB worker replica count
    replicaCount: 1
    # -- additional Java options for the DB worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # -- extra environment variables
    extraEnvVars: []
    # -- Kubernetes labels
    labels: {}
    # DB worker debug configuration
    debug:
      # -- run DB worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the DB worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
    profiling:
      # -- run DB worker with profiling enabled
      enabled: false
    # -- DB worker salt, defaults to a value randomly-generated on install
    salt: ""
    # -- DB worker passphrase, defaults to a value randomly-generated on install
    passphrase: ""
    # resource limits and requests configuration for the DB worker containers.
    resources:
      # -- the CPU/memory resource requests for the DB worker containers
      requests: {}
      # -- the CPU/memory resource limits for the DB worker containers
      limits: {}
    # DB worker JDBC connection pool configuration for cluster DB
    clusterDbConnectionPool:
      # -- DB worker maximum JDBC connection pool size for cluster DB
      maxSize: 5

  # flow worker configuration
  flow:
    # flow worker image configuration
    image:
      # -- flow worker image registry, defaults to image.registry
      registry: ""
      # -- flow worker image repository
      repository: "corda-os-flow-worker"
      # -- flow worker image tag, defaults to image.tag
      tag: ""
    # -- flow worker replica count
    replicaCount: 1
    # -- additional Java options for the flow worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # -- extra environment variables
    extraEnvVars: []
    # -- Kubernetes labels
    labels: {}
    # flow worker debug configuration
    debug:
      # -- run flow worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the flow worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
    profiling:
      # -- run flow worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the flow worker containers.
    resources:
      # -- the CPU/memory resource requests for the flow worker containers
      requests: {}
      # -- the CPU/memory resource limits for the flow worker containers
      limits: {}
    # -- run flow worker with Quasar's verifyInstrumentation enabled
    verifyInstrumentation: false

  # membership worker configuration
  membership:
    # membership worker image configuration
    image:
      # -- membership worker image registry, defaults to image.registry
      registry: ""
      # -- membership worker image repository
      repository: "corda-os-member-worker"
      # -- membership worker image tag, defaults to image.tag
      tag: ""
    # -- membership worker replica count
    replicaCount: 1
    # -- additional Java options for the membership worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # -- extra environment variables
    extraEnvVars: []
    # -- Kubernetes labels
    labels: {}
    # membership worker debug configuration
    debug:
      # -- run membership worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the membership worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
    profiling:
      # -- run membership worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the membership worker containers
    resources:
      # -- the CPU/memory resource requests for the membership worker containers
      requests: {}
      # -- the CPU/memory resource limits for the membership worker containers
      limits: {}

  # RPC worker configuration
  rpc:
    # RPC worker image configuration
    image:
      # -- RPC worker image registry, defaults to image.registry
      registry: ""
      # -- RPC worker image repository
      repository: "corda-os-rpc-worker"
      # -- RPC worker image tag, defaults to image.tag
      tag: ""
    # -- RPC worker replica count
    replicaCount: 1
    # -- additional Java options for the rpc worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # -- extra environment variables
    extraEnvVars: []
    # -- Kubernetes labels
    labels: {}
    # RPC worker debug configuration
    debug:
      # -- run RPC worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the RPC worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
    profiling:
      # -- run RPC worker with profiling enabled
      enabled: false
    # -- resource limits and requests configuration for the RPC worker containers.
    resources:
      # -- the CPU/memory resource requests for the RPC worker containers
      requests: {}
      # -- the CPU/memory resource limits for the RPC worker containers
      limits: {}
    # RPC worker service configuration
    service:
      # -- the type for the RPC worker service
      type: ClusterIP
      # -- the traffic policy for the RPC worker service
      externalTrafficPolicy: ""
      # -- the LoadBalancer source ranges to limit access to the RPC worker service
      loadBalancerSourceRanges: []
      # -- the annotations for RPC worker service
      annotations: {}

  # P2P Link Manager worker configuration
  p2pLinkManager:
    # p2p-link-manager worker image configuration
    image:
      # -- p2p-link-manager worker image registry, defaults to image.registry
      registry: ""
      # -- p2p-link-manager worker image repository
      repository: "corda-os-p2p-link-manager-worker"
      # -- p2p-link-manager worker image tag, defaults to image.tag
      tag: ""
    # -- p2p-link-manager worker replica count
    replicaCount: 1
    # -- additional Java options for the p2p-link-manager worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # -- extra environment variables
    extraEnvVars: []
    # -- Kubernetes labels
    labels: {}
    # -- Use stubbed crypto processor, membership group reader and group policy provider
    useStubs: false
    # p2p-link-manager worker debug configuration
    debug:
      # -- run p2p-link-manager worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the p2p-link-manager worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
    profiling:
      # -- run p2p-link-manager worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the p2p-link-manager worker containers.
    resources:
      # -- the CPU/memory resource requests for the p2p-link-manager worker containers
      requests: {}
      # -- the CPU/memory resource limits for the p2p-link-manager worker containers
      limits: {}

  # P2P Gateway worker configuration
  p2pGateway:
    # p2p-gateway worker image configuration
    image:
      # -- p2p-gateway worker image registry, defaults to image.registry
      registry: ""
      # -- p2p-gateway worker image repository
      repository: "corda-os-p2p-gateway-worker"
      # -- p2p-gateway worker image tag, defaults to image.tag
      tag: ""
    # -- p2p-gateway worker replica count
    replicaCount: 1
    # -- additional Java options for the p2p-gateway worker
    javaOptions: "-XX:MaxRAMPercentage=75"
    # -- extra environment variables
    extraEnvVars: []
    # -- Kubernetes labels
    labels: {}
    # -- Use stub crypto processor
    useStubs: false
    # p2p-gateway worker debug configuration
    debug:
      # -- run p2p-gateway worker with debug enabled
      enabled: false
      # -- if debug is enabled, suspend the p2p-gateway worker until the debugger is attached
      suspend: false
    # logging configuration
    logging:
      # -- log level: one of "all", "trace", "debug", "info", "warn", "error", "fatal", or "off"; defaults to logging.level if not specified
      level: null
    profiling:
      # -- run p2p-gateway worker with profiling enabled
      enabled: false
    # resource limits and requests configuration for the p2p-gateway worker containers.
    resources:
      # -- the CPU/memory resource requests for the p2p-gateway worker containers
      requests: {}
      # -- the CPU/memory resource limits for the p2p-gateway worker containers
      limits: {}
    # p2p-gateway worker service configuration
    service:
      # -- The Gateway HTTP port
      port: 8080
