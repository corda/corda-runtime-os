package net.corda.virtualnode

/**
 * Lightweight service to provide information regarding the "virtual nodes" currently
 * available within the system.
 */
interface VirtualNodeInfoService {
    /**
     * Returns virtual node context information for a given holding identity
     * without starting any bundles or instantiating any classes.
     *
     * Implementation may throw if it is part of a component that has not started yet.
     *
     * Returns `null` if no such information exists for the given [HoldingIdentity]
     */
    fun get(holdingIdentity: HoldingIdentity): VirtualNodeInfo?

    /**
     * Returns the virtual node info by short-hash code, for a given holding identity
     * without starting any bundles or instantiating any classes.
     *
     * Implementation may throw if it is a part of a component that has not started yet.
     *
     * Short id can be generated by calling the [HoldingIdentity.id]
     *
     * Returns `null` if no such information exists
     */
    fun getById(id: String): VirtualNodeInfo?

    /**
     * Callback on receipt of a VirtualNodeInfo message.
     *
     * Call [close()] on the returned object to unregister.
     */
    fun registerCallback(listener: VirtualNodeInfoListener): AutoCloseable
}
