plugins {
    id 'net.corda.plugins.quasar-utils'
    id 'corda.common-app'
}

quasar {
    version = quasarVersion
    suspendableAnnotation = 'net.corda.v5.base.annotations.Suspendable'
    instrumentTests = false
    instrumentJavaExec = false
    excludePackages = [
            'co.paralleluniverse**',
            'com.esotericsoftware.**',
            'jdk**',
            'junit**',
            'kotlin**',
            'net.rubygrapefruit.**',
            'org.gradle.**',
            'org.apache.**',
            'org.jacoco.**',
            'org.junit**',
            'org.slf4j**',
            'worker.org.gradle.**',
            'com.nhaarman.mockito_kotlin**',
            'org.assertj**',
            'org.hamcrest**',
            'org.mockito**',
            'org.opentest4j**',
            'org.eclipse**'
    ]
}

dependencies {
    implementation "com.esotericsoftware:kryo:$kryoVersion"
    implementation "co.paralleluniverse:quasar-core-osgi:$quasarVersion"
    systemPackages "co.paralleluniverse:quasar-core-osgi:$quasarVersion:agent"
}

osgiRun {
    frameworkProperties = [
            "org.osgi.framework.bootdelegation" :
                    "co.paralleluniverse.fibers.suspend," +
                            "com.esotericsoftware.reflectasm," +
                            "org.jolokia.jvmagent,org.jolokia.util",
            "org.osgi.framework.bundle.parent" : "app"
    ]
    agent("co.paralleluniverse.fibers.instrument.JavaAgent", project.quasar.options.map { it.substring(1) }.get())
}