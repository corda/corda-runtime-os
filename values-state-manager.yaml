# Override file suitable for local deployment of the Corda Helm chart against version 0.1.0 of the corda-dev prereqs
# Helm chart and a state-manager deployed via bitnami postgres helm chart with the overrides from
# `state-manager-postgres.yaml`.
#
# First use `./gradlew publishOSGiImage --parallel` to create local docker images
#
# Then deploy the prereqs using:
# helm upgrade --install prereqs -n corda \
#   oci://corda-os-docker.software.r3.com/helm-charts/corda-dev-prereqs \
#   --render-subchart-notes \
#   --timeout 10m \
#
# Then deploy the state manager using the bitnami helm chart
# helm install state-manager-db oci://docker-remotes.software.r3.com/bitnamicharts/postgresql -n corda --version "12.1.0" \
# -f ./state-manager-postgres.yaml  \
# --timeout 10m \
# --wait
#
# Then deploy Corda using
#  helm upgrade --install corda -n corda \
#  charts/corda \
#  --values values-state-manager.yaml \
#  --wait
#
#
# NOTE: This assumes you deploy the above in the same `corda` namespace, so that domain names containing just the service
# name are resolved (i.e. prereqs-postgresql instead of prereqs-postgresql.<namespace>). If that is not the case, you
# might need to add the namespace as a suffix.
imagePullPolicy: "IfNotPresent"
image:
  registry: "corda-os-docker-dev.software.r3.com"
  tag: "latest-local-5.1.0"

logging:
  format: "text"
  level: "info"

bootstrap:
  restApiAdmin:
    password:
      value: "admin"
  # Disable pre-install check as we are not specifying resources
  preinstallCheck:
    enabled: false
  db:
    cluster:
      password:
        valueFrom:
          secretKeyRef:
            name: "prereqs-postgresql"
            key: "postgres-password"
      username:
        value: "postgres"
    stateManager:
      password:
        valueFrom:
          secretKeyRef:
            name: "state-manager-db-postgresql"
            key: "postgres-password"
      username:
        value: "postgres"
  kafka:
    replicas: 1

kafka:
  bootstrapServers: "prereqs-kafka:9092"
  sasl:
    enabled: true
    username:
      value: "user"
    password:
      valueFrom:
        secretKeyRef:
          name: "prereqs-kafka-jaas"
          key: "client-passwords"
  tls:
    enabled: true
    truststore:
      valueFrom:
        secretKeyRef:
          name: "prereqs-kafka-0-tls"
          key: "ca.crt"

db:
  cluster:
    host: "prereqs-postgresql"
    password:
      valueFrom:
        secretKeyRef:
          name: "prereqs-postgresql"
          key: "password"
    username:
      value: "user"

stateManager:
  db:
    host: "statemanager-postgresql"
    password:
      valueFrom:
        secretKeyRef:
          name: "state-manager-db-postgresql"
          key: "password"
    username:
      value: "statemanager-user"
