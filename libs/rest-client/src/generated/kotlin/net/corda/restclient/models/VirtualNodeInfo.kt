/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.corda.restclient.models

import net.corda.restclient.models.CpiIdentifier
import net.corda.restclient.models.HoldingIdentity
import net.corda.restclient.models.RouteConfiguration

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param cpiIdentifier 
 * @param cryptoDmlConnectionId 
 * @param flowOperationalStatus 
 * @param flowP2pOperationalStatus 
 * @param flowStartOperationalStatus 
 * @param holdingIdentity 
 * @param uniquenessDmlConnectionId 
 * @param vaultDbOperationalStatus 
 * @param vaultDmlConnectionId 
 * @param cryptoDdlConnectionId 
 * @param externalMessagingRouteConfiguration 
 * @param hsmConnectionId 
 * @param operationInProgress 
 * @param uniquenessDdlConnectionId 
 * @param vaultDdlConnectionId 
 */


data class VirtualNodeInfo (

    @Json(name = "cpiIdentifier")
    val cpiIdentifier: CpiIdentifier,

    @Json(name = "cryptoDmlConnectionId")
    val cryptoDmlConnectionId: kotlin.String,

    @Json(name = "flowOperationalStatus")
    val flowOperationalStatus: VirtualNodeInfo.FlowOperationalStatus,

    @Json(name = "flowP2pOperationalStatus")
    val flowP2pOperationalStatus: VirtualNodeInfo.FlowP2pOperationalStatus,

    @Json(name = "flowStartOperationalStatus")
    val flowStartOperationalStatus: VirtualNodeInfo.FlowStartOperationalStatus,

    @Json(name = "holdingIdentity")
    val holdingIdentity: HoldingIdentity,

    @Json(name = "uniquenessDmlConnectionId")
    val uniquenessDmlConnectionId: kotlin.String,

    @Json(name = "vaultDbOperationalStatus")
    val vaultDbOperationalStatus: VirtualNodeInfo.VaultDbOperationalStatus,

    @Json(name = "vaultDmlConnectionId")
    val vaultDmlConnectionId: kotlin.String,

    @Json(name = "cryptoDdlConnectionId")
    val cryptoDdlConnectionId: kotlin.String? = null,

    @Json(name = "externalMessagingRouteConfiguration")
    val externalMessagingRouteConfiguration: RouteConfiguration? = null,

    @Json(name = "hsmConnectionId")
    val hsmConnectionId: kotlin.String? = null,

    @Json(name = "operationInProgress")
    val operationInProgress: kotlin.String? = null,

    @Json(name = "uniquenessDdlConnectionId")
    val uniquenessDdlConnectionId: kotlin.String? = null,

    @Json(name = "vaultDdlConnectionId")
    val vaultDdlConnectionId: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: ACTIVE,INACTIVE
     */
    @JsonClass(generateAdapter = false)
    enum class FlowOperationalStatus(val value: kotlin.Any) {
        @Json(name = "ACTIVE") ACTIVE("ACTIVE"),
        @Json(name = "INACTIVE") INACTIVE("INACTIVE");
    }
    /**
     * 
     *
     * Values: ACTIVE,INACTIVE
     */
    @JsonClass(generateAdapter = false)
    enum class FlowP2pOperationalStatus(val value: kotlin.Any) {
        @Json(name = "ACTIVE") ACTIVE("ACTIVE"),
        @Json(name = "INACTIVE") INACTIVE("INACTIVE");
    }
    /**
     * 
     *
     * Values: ACTIVE,INACTIVE
     */
    @JsonClass(generateAdapter = false)
    enum class FlowStartOperationalStatus(val value: kotlin.Any) {
        @Json(name = "ACTIVE") ACTIVE("ACTIVE"),
        @Json(name = "INACTIVE") INACTIVE("INACTIVE");
    }
    /**
     * 
     *
     * Values: ACTIVE,INACTIVE
     */
    @JsonClass(generateAdapter = false)
    enum class VaultDbOperationalStatus(val value: kotlin.Any) {
        @Json(name = "ACTIVE") ACTIVE("ACTIVE"),
        @Json(name = "INACTIVE") INACTIVE("INACTIVE");
    }
}

